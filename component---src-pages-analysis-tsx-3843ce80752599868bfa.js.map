{"version":3,"file":"component---src-pages-analysis-tsx-3843ce80752599868bfa.js","mappings":"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","sources":["webpack://picapica-web-client/./src/lib/use-collection-localization.ts","webpack://picapica-web-client/./src/elements/labels.tsx","webpack://picapica-web-client/./src/elements/step-action-bar.tsx","webpack://picapica-web-client/./src/elements/step-buttons.tsx","webpack://picapica-web-client/./src/elements/group.tsx","webpack://picapica-web-client/./src/elements/step-selector.tsx","webpack://picapica-web-client/./src/lib/session/actions.ts","webpack://picapica-web-client/./src/lib/session/util.ts","webpack://picapica-web-client/./src/lib/use-collections.ts","webpack://picapica-web-client/./src/lib/session/analysis-config.ts","webpack://picapica-web-client/./src/pages/analysis.tsx"],"sourcesContent":["import { Locales } from \"./localization\";\nimport { PicapicaUrn } from \"./session/urn\";\nimport { useLocalization } from \"./use-localization\";\n\nexport interface CollectionLocalization {\n\treadonly title: string;\n}\n\ntype KnownCollections = \"core_fulltext_languagenameenglish\";\n\nconst knownCollections: Locales<Record<KnownCollections, CollectionLocalization>> = {\n\ten: {\n\t\tcore_fulltext_languagenameenglish: {\n\t\t\ttitle: \"CORE - The world's largest collection of open-access research papers\",\n\t\t},\n\t},\n\tde: {\n\t\tcore_fulltext_languagenameenglish: {\n\t\t\ttitle: \"CORE - The world's largest collection of open-access research papers\",\n\t\t},\n\t},\n};\n\nconst EMPTY_OBJ = {};\n\nexport function useCollectionLocalization(\n\turn: PicapicaUrn | string | undefined | null\n): Partial<CollectionLocalization> {\n\tconst l: Readonly<Record<string, CollectionLocalization | undefined>> = useLocalization(knownCollections);\n\n\tconst parsed = typeof urn === \"string\" ? PicapicaUrn.tryParse(urn) : urn;\n\tif (parsed && parsed.type === \"collection\") {\n\t\tconst known = l[parsed.collectionId];\n\t\tif (known) {\n\t\t\treturn known;\n\t\t}\n\t}\n\n\treturn EMPTY_OBJ;\n}\n","import React from \"react\";\nimport { Collection } from \"../lib/generated/v1/types_pb\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { PicapicaCollectionUrn, PicapicaUrn, Urn } from \"../lib/session/urn\";\nimport { useCollectionLocalization } from \"../lib/use-collection-localization\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { DeepReadonly } from \"../lib/util\";\nimport { PicaIcon, PicaIconKind } from \"./icon\";\nimport \"./labels.scss\";\n\nexport interface LabelProps {\n\treadonly icon?: PicaIconKind;\n\treadonly text: string;\n}\n\nexport function Label(props: LabelProps): JSX.Element {\n\treturn (\n\t\t<span className=\"Label\">\n\t\t\t{props.icon && <PicaIcon kind={props.icon} />}\n\t\t\t<span className=\"text\">{props.text}</span>\n\t\t</span>\n\t);\n}\n\nexport function SubmittedFilesLabel(): JSX.Element {\n\tconst l = useLocalization(locales);\n\treturn <Label icon=\"upload\" text={l.submittedFiles} />;\n}\n\nexport type CollectionProps =\n\t| {\n\t\t\treadonly collectionUrn: string | PicapicaCollectionUrn;\n\t\t\treadonly collections?: DeepReadonly<Collection.AsObject[]>;\n\t  }\n\t| {\n\t\t\treadonly collection: DeepReadonly<Collection.AsObject>;\n\t  };\n\nexport function CollectionLabel(props: CollectionProps): JSX.Element {\n\tconst { urn, collection } = processProps(props);\n\tconst { title } = useCollectionLocalization(urn);\n\n\tif (title) {\n\t\treturn <Label text={title} />;\n\t} else if (collection?.properties) {\n\t\treturn <Label text={`${collection.properties.name} - ${collection.properties.description}`} />;\n\t} else {\n\t\treturn <UnknownCollectionLabel />;\n\t}\n}\ninterface ProcessedProps {\n\turn: PicapicaCollectionUrn | undefined;\n\tcollection: DeepReadonly<Collection.AsObject> | undefined;\n}\nfunction processProps(props: CollectionProps): ProcessedProps {\n\tif (\"collection\" in props) {\n\t\treturn {\n\t\t\turn: PicapicaUrn.parse(props.collection.urn as Urn<\"collection\">),\n\t\t\tcollection: props.collection,\n\t\t};\n\t} else {\n\t\tlet urn: PicapicaCollectionUrn;\n\t\tlet urnString: string;\n\t\tif (typeof props.collectionUrn === \"string\") {\n\t\t\tconst parsed = PicapicaUrn.tryParse(props.collectionUrn);\n\t\t\tif (!parsed || parsed.type !== \"collection\") {\n\t\t\t\treturn { urn: undefined, collection: undefined };\n\t\t\t}\n\t\t\turn = parsed;\n\t\t\turnString = props.collectionUrn;\n\t\t} else {\n\t\t\turn = props.collectionUrn;\n\t\t\turnString = PicapicaUrn.stringify(urn);\n\t\t}\n\n\t\tconst collection = props.collections?.find(c => c.urn === urnString);\n\n\t\treturn { urn, collection };\n\t}\n}\n\nfunction UnknownCollectionLabel(): JSX.Element {\n\tconst l = useLocalization(locales);\n\treturn <Label text={l.unknown} />;\n}\n\nconst locales: Locales<SimpleString<\"submittedFiles\" | \"unknown\">> = {\n\ten: {\n\t\tsubmittedFiles: \"Your submitted files\",\n\t\tunknown: \"Unknown\",\n\t},\n\tde: {\n\t\tsubmittedFiles: \"Ihre eingereichten Dateien\",\n\t\tunknown: \"Unbekannt\",\n\t},\n};\n","import React from \"react\";\nimport \"./step-action-bar.scss\";\n\nexport interface StepActionBarProps {\n\tleft: React.ReactNode;\n\tright: React.ReactNode;\n\tinstruction: string;\n}\n\nexport function StepActionBar({ left, right, instruction }: StepActionBarProps): JSX.Element {\n\treturn (\n\t\t<div className=\"StepActionBar\">\n\t\t\t<div className=\"left\">\n\t\t\t\t<div>{left}</div>\n\t\t\t</div>\n\t\t\t<div className=\"instruction\">{instruction}</div>\n\t\t\t<div className=\"right\">\n\t\t\t\t<div>{right}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { Buttons } from \"./buttons\";\nimport { PicaIcon } from \"./icon\";\nimport \"./step-buttons.scss\";\n\nexport interface StepButtonProps {\n\tto: string;\n}\n\nexport function NextButton({ to }: StepButtonProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\tconst title = l.next;\n\n\treturn (\n\t\t<Link to={to} className={`NextButton ${Buttons.BUTTON}`} title={title}>\n\t\t\t<span className=\"text\">{title}</span>\n\t\t\t<PicaIcon kind=\"next\" />\n\t\t</Link>\n\t);\n}\n\nexport function BackButton({ to }: StepButtonProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\tconst title = l.back;\n\n\treturn (\n\t\t<Link to={to} className={`BackButton ${Buttons.BUTTON}`} title={title}>\n\t\t\t<PicaIcon kind=\"back\" />\n\t\t\t<span className=\"text\">{title}</span>\n\t\t</Link>\n\t);\n}\n\nexport function StartButton({ to }: StepButtonProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\tconst title = l.start;\n\n\treturn (\n\t\t<Link to={to} className={`StartButton ${Buttons.BUTTON} ${Buttons.GREEN}`} title={title}>\n\t\t\t<span className=\"text\">{title}</span>\n\t\t\t<PicaIcon kind=\"next\" />\n\t\t</Link>\n\t);\n}\n\nconst locales: Locales<SimpleString<\"next\" | \"back\" | \"start\">> = {\n\ten: {\n\t\tnext: \"Next\",\n\t\tback: \"Back\",\n\t\tstart: \"Start\",\n\t},\n\tde: {\n\t\tnext: \"Weiter\",\n\t\tback: \"Zurück\",\n\t\tstart: \"Start\",\n\t},\n};\n","import React from \"react\";\nimport \"./group.scss\";\n\nexport interface GroupProps {\n\treadonly heading: React.ReactNode;\n}\n\nexport function Group({ heading, children }: React.PropsWithChildren<GroupProps>): JSX.Element {\n\treturn (\n\t\t<div className=\"Group\">\n\t\t\t<div className=\"group-heading\">{heading}</div>\n\t\t\t<div className=\"group-container\">{children}</div>\n\t\t</div>\n\t);\n}\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { toAnalysis, toResults, toSubmit } from \"../lib/page-links\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { assertNever } from \"../lib/util\";\nimport { Buttons } from \"./buttons\";\nimport { Group } from \"./group\";\nimport { PicaIcon, PicaIconKind } from \"./icon\";\nimport \"./step-selector.scss\";\n\nexport type StepKind = \"submit\" | \"analysis\" | \"checkout\" | \"results\";\n\nexport function getLinkToStep(step: StepKind, sessionUrn: string): string {\n\tswitch (step) {\n\t\tcase \"submit\":\n\t\t\treturn toSubmit({ urn: sessionUrn });\n\t\tcase \"analysis\":\n\t\t\treturn toAnalysis({ urn: sessionUrn });\n\t\tcase \"checkout\":\n\t\t\treturn \"/checkout/\";\n\t\tcase \"results\":\n\t\t\treturn toResults({ urn: sessionUrn });\n\t\tdefault:\n\t\t\tassertNever(step);\n\t}\n}\n\nconst STEPS = [\"submit\", \"analysis\", \"checkout\", \"results\"] as const;\n\nexport interface StepSelectorProps {\n\treadonly sessionUrn: string;\n\treadonly current: StepKind;\n\treadonly disableOthers?: boolean;\n}\n\nconst ICONS: Readonly<Record<StepKind, PicaIconKind>> = {\n\tsubmit: \"upload\",\n\tanalysis: \"analyse\",\n\tcheckout: \"checkout\",\n\tresults: \"results\",\n};\n\nconst ENABLE_CHECKOUT = false;\n\nexport function StepSelector({ current, sessionUrn, disableOthers }: StepSelectorProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\treturn (\n\t\t<span className={`StepSelector ${Buttons.BUTTON_GROUP}`}>\n\t\t\t{STEPS.filter(step => ENABLE_CHECKOUT || step !== \"checkout\").map(step => {\n\t\t\t\tconst title = l[step];\n\n\t\t\t\tconst disabled = disableOthers && step !== current;\n\t\t\t\tif (disabled) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span key={step} className={`${Buttons.BUTTON} ${Buttons.DISABLED}`} title={title}>\n\t\t\t\t\t\t\t<PicaIcon kind={ICONS[step]} />\n\t\t\t\t\t\t\t<span className=\"text\">{title}</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tkey={step}\n\t\t\t\t\t\tto={getLinkToStep(step, sessionUrn)}\n\t\t\t\t\t\tclassName={`${Buttons.BUTTON}${step === current ? \" \" + Buttons.ACTIVE : \"\"}`}\n\t\t\t\t\t\ttitle={title}>\n\t\t\t\t\t\t<PicaIcon kind={ICONS[step]} />\n\t\t\t\t\t\t<span className=\"text\">{title}</span>\n\t\t\t\t\t</Link>\n\t\t\t\t);\n\t\t\t})}\n\t\t</span>\n\t);\n}\n\nexport function StepSelectorGroup({\n\tcurrent,\n\tsessionUrn,\n\tdisableOthers,\n\tchildren,\n}: React.PropsWithChildren<StepSelectorProps>): JSX.Element {\n\treturn (\n\t\t<div className=\"StepSelectorGroup\">\n\t\t\t<Group\n\t\t\t\theading={\n\t\t\t\t\t<div className=\"heading-wrapper\">\n\t\t\t\t\t\t<StepSelector current={current} sessionUrn={sessionUrn} disableOthers={disableOthers} />\n\t\t\t\t\t</div>\n\t\t\t\t}>\n\t\t\t\t{children}\n\t\t\t</Group>\n\t\t</div>\n\t);\n}\n\nconst locales: Locales<SimpleString<StepKind>> = {\n\ten: {\n\t\tsubmit: \"Upload\",\n\t\tanalysis: \"Analysis\",\n\t\tcheckout: \"Checkout\",\n\t\tresults: \"Results\",\n\t},\n\tde: {\n\t\tsubmit: \"Hochladen\",\n\t\tanalysis: \"Analyse\",\n\t\tcheckout: \"Kasse\",\n\t\tresults: \"Ergebnisse\",\n\t},\n};\n","import { DeleteItemRequest, Session, UpdateComparisonSetRequest, UpdateItemRequest } from \"../generated/v1/services_pb\";\nimport { Item } from \"../generated/v1/types_pb\";\nimport { DeepReadonly } from \"../util\";\nimport { AnalysisConfig } from \"./analysis-config\";\nimport { SessionMutator } from \"./mutator\";\nimport { cloneSession } from \"./util\";\n\nexport interface ActionResult<Req> {\n\tmutate: SessionMutator;\n\trequest: Req;\n}\n\nexport function deleteItemAction(\n\tsession: DeepReadonly<Session.AsObject>,\n\titemUrn: string\n): ActionResult<DeleteItemRequest> {\n\tconst request = new DeleteItemRequest();\n\trequest.setSessionUrn(session.urn);\n\trequest.setItemUrn(itemUrn);\n\n\treturn {\n\t\trequest,\n\t\tmutate(oldSession) {\n\t\t\tconst session = cloneSession(oldSession);\n\t\t\tsession.itemsList = session.itemsList.filter(item => item.urn !== itemUrn);\n\t\t\treturn session;\n\t\t},\n\t};\n}\n\nexport function updateItemAction(\n\tsession: DeepReadonly<Session.AsObject>,\n\titemUrn: string,\n\tmeta: Item.Metadata\n): ActionResult<UpdateItemRequest> {\n\tconst metaObject = meta.toObject();\n\n\tconst request = new UpdateItemRequest();\n\trequest.setSessionUrn(session.urn);\n\trequest.setItemUrn(itemUrn);\n\trequest.setMeta(meta);\n\n\treturn {\n\t\trequest,\n\t\tmutate(oldSession) {\n\t\t\tconst session = cloneSession(oldSession);\n\t\t\tconst item = session.itemsList.find(item => item.urn === itemUrn);\n\t\t\tif (item) {\n\t\t\t\titem.meta = metaObject;\n\t\t\t}\n\t\t\treturn session;\n\t\t},\n\t};\n}\n\nexport function updateComparisonSetAction(\n\tsession: DeepReadonly<Session.AsObject>,\n\tanalysisConfig: AnalysisConfig\n): ActionResult<UpdateComparisonSetRequest> {\n\tconst pairs = analysisConfig.getResourcePairs();\n\tconst pairingsList = pairs.map(p => p.toObject());\n\n\tconst request = new UpdateComparisonSetRequest();\n\trequest.setSessionUrn(session.urn);\n\trequest.setComparisonsList(pairs);\n\n\treturn {\n\t\trequest,\n\t\tmutate(oldSession) {\n\t\t\tconst session = cloneSession(oldSession);\n\t\t\tsession.comparisonsList = pairingsList;\n\t\t\treturn session;\n\t\t},\n\t};\n}\n","import { Session } from \"../generated/v1/services_pb\";\nimport { Item, Timestamp } from \"../generated/v1/types_pb\";\nimport { DeepReadonly } from \"../util\";\n\nexport function cloneSession(session: DeepReadonly<Session.AsObject>): Session.AsObject {\n\treturn JSON.parse(JSON.stringify(session));\n}\n\nexport function createTimestamp(): Timestamp.AsObject {\n\tconst ms = Date.now();\n\treturn {\n\t\tseconds: Math.floor(ms / 1000),\n\t\tnanos: (ms % 1000) * 1000_0000,\n\t};\n}\n\nexport function compareTimestamps(a: Timestamp.AsObject, b: Timestamp.AsObject): number {\n\tif (a.seconds === b.seconds) return a.nanos - b.nanos;\n\treturn a.seconds - b.seconds;\n}\n\nexport function sortSessionItems(items: readonly DeepReadonly<Item.AsObject>[]): DeepReadonly<Item.AsObject>[] {\n\treturn [...items].sort((a, b) => {\n\t\tconst aCreated = a.createdAt;\n\t\tconst bCreated = b.createdAt;\n\n\t\tif (!aCreated && !bCreated) return 0;\n\t\tif (!aCreated) return -1; // a < b\n\t\tif (!bCreated) return +1; // b < a\n\n\t\treturn compareTimestamps(aCreated, bCreated) || a.urn.localeCompare(b.urn);\n\t});\n}\n","import { useQuery } from \"react-query\";\nimport { GetCollectionsRequest } from \"./generated/v1/services_pb\";\nimport { Collection } from \"./generated/v1/types_pb\";\nimport { getSessionClient } from \"./session/client\";\nimport { DeepReadonly } from \"./util\";\n\nexport function useCollections(sessionUrn: string): [collections: DeepReadonly<Collection.AsObject[]> | undefined] {\n\tconst query = useQuery([\"collections\", sessionUrn] as const, {\n\t\t// collections are an immutable resource, so we don't need to refetch\n\t\trefetchInterval: false,\n\t\trefetchOnMount: false,\n\t\trefetchOnReconnect: false,\n\t\trefetchOnWindowFocus: false,\n\n\t\tqueryFn: async () => {\n\t\t\tconst req = new GetCollectionsRequest();\n\t\t\treq.setSessionUrn(sessionUrn);\n\n\t\t\tconst resp = await getSessionClient().getCollections(req, null);\n\t\t\treturn resp.toObject().collectionsList;\n\t\t},\n\t});\n\n\treturn [query.data];\n}\n","import { ResourcePair } from \"../generated/v1/types_pb\";\nimport { EMPTY_MAP, EMPTY_SET } from \"../util\";\nimport { NONE_URN, PicapicaUrn } from \"./urn\";\n\nexport type ItemUrn = string & { readonly __itemUrn?: never };\nexport type CollectionUrn = string & { readonly __itemUrn?: never };\n\nexport class AnalysisConfig {\n\treadonly groupA: ReadonlySet<ItemUrn>;\n\treadonly groupB: ReadonlySet<ItemUrn>;\n\treadonly collections: ReadonlyMap<CollectionUrn, ReadonlySet<ItemUrn>>;\n\n\tconstructor(\n\t\tgroupA: ReadonlySet<ItemUrn>,\n\t\tgroupB: ReadonlySet<ItemUrn>,\n\t\tcollections: ReadonlyMap<CollectionUrn, ReadonlySet<ItemUrn>>\n\t) {\n\t\tthis.groupA = groupA;\n\t\tthis.groupB = groupB;\n\t\tthis.collections = collections;\n\t}\n\n\twithGroupA(groupA: ReadonlySet<ItemUrn>): AnalysisConfig {\n\t\treturn new AnalysisConfig(groupA, this.groupB, this.collections);\n\t}\n\twithGroupB(groupB: ReadonlySet<ItemUrn>): AnalysisConfig {\n\t\treturn new AnalysisConfig(this.groupA, groupB, this.collections);\n\t}\n\twithCollections(collections: ReadonlyMap<CollectionUrn, ReadonlySet<ItemUrn>>): AnalysisConfig {\n\t\treturn new AnalysisConfig(this.groupA, this.groupB, collections);\n\t}\n\twithCollection(collection: CollectionUrn, items: ReadonlySet<ItemUrn>): AnalysisConfig {\n\t\tconst copy = new Map(this.collections);\n\t\tcopy.set(collection, items);\n\t\treturn this.withCollections(copy);\n\t}\n\n\t/**\n\t * Creates a new analysis config from the given collection of resource pairs.\n\t *\n\t * The approach implemented to compress O(n^2) item combinations into 2 O(n) groups is very\n\t * simplistic and works as follows: If a resource pair contains 2 item URNs, then the `a` URN\n\t * will be in group A and the `b` URN will be in group B.\n\t *\n\t * Disappointingly simple, right? Well, it does have a few advantages: It's fast and it doesn't\n\t * lose any combination as a byproduct of the lossy conversion. However, it might cause some\n\t * combinations to be added.\n\t *\n\t * This approach also has the very nice property that:\n\t * `a == fromResourcePairs(a.getResourcePairs())`.\n\t *\n\t * @param pairs\n\t */\n\tstatic fromResourcePairs(\n\t\tpairs: Iterable<ResourcePair | ResourcePair.AsObject>,\n\t\tallItems: ReadonlyArray<ItemUrn>\n\t): AnalysisConfig {\n\t\tconst groupA = new Set<ItemUrn>();\n\t\tconst groupB = new Set<ItemUrn>();\n\t\tconst collections = new Map<CollectionUrn, Set<ItemUrn>>();\n\n\t\tfunction addCollection(collection: CollectionUrn, item: ItemUrn): void {\n\t\t\tlet set = collections.get(collection);\n\t\t\tif (set === undefined) {\n\t\t\t\tset = new Set();\n\t\t\t\tcollections.set(collection, set);\n\t\t\t}\n\t\t\tset.add(item);\n\t\t}\n\t\tfunction toItemUrns(urn: string): ReadonlyArray<ItemUrn> {\n\t\t\tconst type = getPicapicaUrnType(urn);\n\n\t\t\tif (type === \"item\") {\n\t\t\t\treturn [urn];\n\t\t\t} else if (type === \"session\") {\n\t\t\t\treturn allItems;\n\t\t\t} else {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\tfor (const pair of pairs) {\n\t\t\tconst [a, b] = pair instanceof ResourcePair ? [pair.getUrnA(), pair.getUrnB()] : [pair.urnA, pair.urnB];\n\n\t\t\tconst aType = getPicapicaUrnType(a);\n\t\t\tconst bType = getPicapicaUrnType(b);\n\n\t\t\tif (aType === \"collection\") {\n\t\t\t\ttoItemUrns(b).forEach(item => addCollection(a, item));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (bType === \"collection\") {\n\t\t\t\ttoItemUrns(a).forEach(item => addCollection(b, item));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttoItemUrns(a).forEach(item => groupA.add(item));\n\t\t\ttoItemUrns(b).forEach(item => groupB.add(item));\n\t\t}\n\n\t\treturn new AnalysisConfig(groupA, groupB, collections);\n\t}\n\n\t/**\n\t * Returns a list of resource pairs that represents this config.\n\t *\n\t * @returns\n\t */\n\tgetResourcePairs(): ResourcePair[] {\n\t\tconst pairs: ResourcePair[] = [];\n\n\t\tconst pairsA = new Set<ItemUrn>();\n\t\tconst pairsB = new Set<ItemUrn>();\n\n\t\t// add group combinations\n\t\tfor (const a of this.groupA) {\n\t\t\tfor (const b of this.groupB) {\n\t\t\t\tif (a === b) {\n\t\t\t\t\t// same item\n\t\t\t\t} else {\n\t\t\t\t\tpairsA.add(a);\n\t\t\t\t\tpairsB.add(b);\n\t\t\t\t\tpairs.push(new ResourcePair().setUrnA(a).setUrnB(b));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// add items from groups that aren't in any pair\n\t\tfor (const a of this.groupA) {\n\t\t\tif (!pairsA.has(a)) {\n\t\t\t\tpairs.push(new ResourcePair().setUrnA(a).setUrnB(NONE_URN));\n\t\t\t}\n\t\t}\n\t\tfor (const b of this.groupB) {\n\t\t\tif (!pairsB.has(b)) {\n\t\t\t\tpairs.push(new ResourcePair().setUrnA(NONE_URN).setUrnB(b));\n\t\t\t}\n\t\t}\n\n\t\t// add collections\n\t\tfor (const [collection, items] of this.collections) {\n\t\t\tfor (const item of items) {\n\t\t\t\tpairs.push(new ResourcePair().setUrnA(collection).setUrnB(item));\n\t\t\t}\n\t\t}\n\n\t\treturn pairs;\n\t}\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace AnalysisConfig {\n\texport const EMPTY = new AnalysisConfig(EMPTY_SET, EMPTY_SET, EMPTY_MAP);\n}\n\nfunction getPicapicaUrnType(urn: string): PicapicaUrn[\"type\"] | undefined {\n\ttry {\n\t\treturn PicapicaUrn.parse(urn).type;\n\t} catch (error) {\n\t\treturn undefined;\n\t}\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { Buttons } from \"../elements/buttons\";\nimport { Icon, ItemTypeIcon } from \"../elements/icon\";\nimport { CollectionLabel, SubmittedFilesLabel } from \"../elements/labels\";\nimport { Page } from \"../elements/page\";\nimport { SessionState } from \"../elements/session-creating-loading\";\nimport { SharedHead } from \"../elements/shared-header\";\nimport { StepActionBar } from \"../elements/step-action-bar\";\nimport { BackButton, StartButton } from \"../elements/step-buttons\";\nimport { getLinkToStep, StepSelectorGroup } from \"../elements/step-selector\";\nimport { Session } from \"../lib/generated/v1/services_pb\";\nimport { Collection, Item } from \"../lib/generated/v1/types_pb\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { dynamicComponent } from \"../lib/react-util\";\nimport { updateComparisonSetAction } from \"../lib/session/actions\";\nimport { AnalysisConfig, ItemUrn } from \"../lib/session/analysis-config\";\nimport { getSessionClient } from \"../lib/session/client\";\nimport { sortSessionItems } from \"../lib/session/util\";\nimport { useCollections } from \"../lib/use-collections\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { getSessionUrn, Ready, useLoadSession } from \"../lib/use-session\";\nimport { DeepReadonly, EMPTY_ARRAY, EMPTY_SET, noop } from \"../lib/util\";\nimport \"./analysis.scss\";\n\nexport const Head = (): JSX.Element => (\n\t<>\n\t\t<title>Picapica</title>\n\t\t<SharedHead />\n\t</>\n);\n\nexport default dynamicComponent(Analysis);\n\nfunction Analysis(): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst [state, update] = useLoadSession();\n\tconst [collections] = useCollections(getSessionUrn(state));\n\n\tconst updateConfig = useCallback(\n\t\t(config: AnalysisConfig) => {\n\t\t\tif (state.type === \"Ready\") {\n\t\t\t\tconst { mutate, request } = updateComparisonSetAction(state.session, config);\n\t\t\t\t// TODO: Handle errors\n\t\t\t\tupdate(getSessionClient().updateComparisonSet(request, null).then(noop), mutate);\n\t\t\t}\n\t\t},\n\t\t[state, update]\n\t);\n\n\tconst config = useMemo(() => {\n\t\tif (state.type === \"Ready\") {\n\t\t\treturn AnalysisConfig.fromResourcePairs(\n\t\t\t\tstate.session.comparisonsList ?? EMPTY_ARRAY,\n\t\t\t\tstate.session.itemsList.map(i => i.urn)\n\t\t\t);\n\t\t} else {\n\t\t\treturn AnalysisConfig.EMPTY;\n\t\t}\n\t}, [state]);\n\n\tconst onReady = ({ session }: Ready): JSX.Element => (\n\t\t<>\n\t\t\t<StepActionBar\n\t\t\t\tleft={<BackButton to={getLinkToStep(\"submit\", session.urn)} />}\n\t\t\t\tright={<StartButton to={getLinkToStep(\"results\", session.urn)} />}\n\t\t\t\tinstruction={l.instruction}\n\t\t\t/>\n\n\t\t\t<ItemConfig session={session} config={config} update={updateConfig} />\n\n\t\t\t{(collections ?? []).map(collection => {\n\t\t\t\treturn (\n\t\t\t\t\t<CollectionConfig\n\t\t\t\t\t\tkey={collection.urn}\n\t\t\t\t\t\tsession={session}\n\t\t\t\t\t\tconfig={config}\n\t\t\t\t\t\tupdate={updateConfig}\n\t\t\t\t\t\tcollection={collection}\n\t\t\t\t\t\tinstruction={l.wikipediaInstruction}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\n\t\t\t<StepActionBar\n\t\t\t\tleft={<BackButton to={getLinkToStep(\"submit\", session.urn)} />}\n\t\t\t\tright={<StartButton to={getLinkToStep(\"results\", session.urn)} />}\n\t\t\t\tinstruction={\"\"}\n\t\t\t/>\n\t\t</>\n\t);\n\n\treturn (\n\t\t<Page className=\"Analysis\" header=\"small\">\n\t\t\t<StepSelectorGroup sessionUrn={getSessionUrn(state)} current=\"analysis\">\n\t\t\t\t<SessionState state={state} onReady={onReady} />\n\t\t\t</StepSelectorGroup>\n\t\t</Page>\n\t);\n}\n\ninterface ItemConfigProps {\n\tsession: DeepReadonly<Session.AsObject>;\n\tconfig: AnalysisConfig;\n\tupdate: (config: AnalysisConfig) => void;\n}\n\nfunction ItemConfig({ session, config, update }: ItemConfigProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst items = sortSessionItems(session.itemsList);\n\n\tconst allUrns: ItemUrn[] = items.map(i => i.urn);\n\tconst allA = allUrns.every(urn => config.groupA.has(urn));\n\tconst allB = allUrns.every(urn => config.groupB.has(urn));\n\tconst all = allA && allB;\n\tconst none = allUrns.every(urn => !config.groupA.has(urn) && !config.groupB.has(urn));\n\n\tconst INACTIVE = \"inactive\";\n\n\tfunction setAll(): void {\n\t\tconst newConfig = config.withGroupA(new Set(allUrns)).withGroupB(new Set(allUrns));\n\t\tupdate(newConfig);\n\t}\n\tfunction setNone(): void {\n\t\tconst newConfig = config.withGroupA(EMPTY_SET).withGroupB(EMPTY_SET);\n\t\tupdate(newConfig);\n\t}\n\tfunction setAllA(): void {\n\t\tconst newConfig = config.withGroupA(new Set(allUrns));\n\t\tupdate(newConfig);\n\t}\n\tfunction setAllB(): void {\n\t\tconst newConfig = config.withGroupB(new Set(allUrns));\n\t\tupdate(newConfig);\n\t}\n\tfunction toggleA(urn: ItemUrn): void {\n\t\tconst newConfig = config.withGroupA(toggleSetValue(config.groupA, urn));\n\t\tupdate(newConfig);\n\t}\n\tfunction toggleB(urn: ItemUrn): void {\n\t\tconst newConfig = config.withGroupB(toggleSetValue(config.groupB, urn));\n\t\tupdate(newConfig);\n\t}\n\n\treturn (\n\t\t<div className=\"ItemConfig\">\n\t\t\t<div className=\"heading\">\n\t\t\t\t<span className=\"title\">\n\t\t\t\t\t<SubmittedFilesLabel />\n\t\t\t\t</span>\n\t\t\t\t<span className=\"buttons\">\n\t\t\t\t\t<span className={Buttons.BUTTON_GROUP}>\n\t\t\t\t\t\t<button className={`${Buttons.BUTTON} ${all ? Buttons.ACTIVE : INACTIVE}`} onClick={setAll}>\n\t\t\t\t\t\t\t{l.all}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className={`${Buttons.BUTTON} ${none ? Buttons.ACTIVE : INACTIVE}`} onClick={setNone}>\n\t\t\t\t\t\t\t{l.none}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"content\">\n\t\t\t\t<div className=\"instruction\">{l.itemInstruction}</div>\n\t\t\t\t<div className=\"table\">\n\t\t\t\t\t<div className={Buttons.BUTTON_GROUP}>\n\t\t\t\t\t\t<span className={Buttons.NON_BUTTON}>{l.file}</span>\n\t\t\t\t\t\t<button className={`${Buttons.BUTTON} ${allA ? Buttons.ACTIVE : INACTIVE}`} onClick={setAllA}>\n\t\t\t\t\t\t\tA\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className={`${Buttons.BUTTON} ${allB ? Buttons.ACTIVE : INACTIVE}`} onClick={setAllB}>\n\t\t\t\t\t\t\tB\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t{items.map(item => {\n\t\t\t\t\t\tconst a = config.groupA.has(item.urn);\n\t\t\t\t\t\tconst b = config.groupB.has(item.urn);\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={item.urn} className={Buttons.BUTTON_GROUP}>\n\t\t\t\t\t\t\t\t<span className={Buttons.NON_BUTTON}>\n\t\t\t\t\t\t\t\t\t<ItemTypeIcon type={item.resource?.type ?? Item.Resource.Type.TYPE_UNSPECIFIED} />\n\t\t\t\t\t\t\t\t\t{item.meta?.name}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={`${Buttons.BUTTON} ${a ? Buttons.ACTIVE : INACTIVE}`}\n\t\t\t\t\t\t\t\t\tonClick={() => toggleA(item.urn)}>\n\t\t\t\t\t\t\t\t\tA\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={`${Buttons.BUTTON} ${b ? Buttons.ACTIVE : INACTIVE}`}\n\t\t\t\t\t\t\t\t\tonClick={() => toggleB(item.urn)}>\n\t\t\t\t\t\t\t\t\tB\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\ninterface CollectionConfigProps {\n\tsession: DeepReadonly<Session.AsObject>;\n\tconfig: AnalysisConfig;\n\tcollection: DeepReadonly<Collection.AsObject>;\n\tinstruction: string;\n\tupdate: (config: AnalysisConfig) => void;\n}\n\nfunction CollectionConfig({ session, config, collection, instruction, update }: CollectionConfigProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst set = config.collections.get(collection.urn) ?? EMPTY_SET;\n\tconst items = sortSessionItems(session.itemsList);\n\n\tconst allUrns: ItemUrn[] = items.map(i => i.urn);\n\tconst all = allUrns.every(urn => set.has(urn));\n\tconst none = allUrns.every(urn => !set.has(urn));\n\n\tconst INACTIVE = \"inactive\";\n\n\tfunction setAll(): void {\n\t\tconst newConfig = config.withCollection(collection.urn, new Set(allUrns));\n\t\tupdate(newConfig);\n\t}\n\tfunction setNone(): void {\n\t\tconst newConfig = config.withCollection(collection.urn, EMPTY_SET);\n\t\tupdate(newConfig);\n\t}\n\tfunction toggleHas(urn: ItemUrn): void {\n\t\tconst newConfig = config.withCollection(collection.urn, toggleSetValue(set, urn));\n\t\tupdate(newConfig);\n\t}\n\n\treturn (\n\t\t<div className=\"CollectionConfig\">\n\t\t\t<div className=\"heading\">\n\t\t\t\t<span className=\"title\">\n\t\t\t\t\t<CollectionLabel collectionUrn={collection.urn} />\n\t\t\t\t</span>\n\t\t\t\t<span className=\"buttons\">\n\t\t\t\t\t<span className={Buttons.BUTTON_GROUP}>\n\t\t\t\t\t\t<button className={`${Buttons.BUTTON} ${all ? Buttons.ACTIVE : INACTIVE}`} onClick={setAll}>\n\t\t\t\t\t\t\t{l.all}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className={`${Buttons.BUTTON} ${none ? Buttons.ACTIVE : INACTIVE}`} onClick={setNone}>\n\t\t\t\t\t\t\t{l.none}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"content\">\n\t\t\t\t<div className=\"instruction\">{instruction}</div>\n\t\t\t\t<div className=\"table\">\n\t\t\t\t\t<div className={Buttons.BUTTON_GROUP}>\n\t\t\t\t\t\t<span className={Buttons.NON_BUTTON}>{l.file}</span>\n\t\t\t\t\t\t<button className={`${Buttons.BUTTON} ${all ? Buttons.ACTIVE : INACTIVE}`} onClick={setAll}>\n\t\t\t\t\t\t\t<Icon kind=\"check-line\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className={`${Buttons.BUTTON} ${none ? Buttons.ACTIVE : INACTIVE}`} onClick={setNone}>\n\t\t\t\t\t\t\t<Icon kind=\"close-line\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t{items.map(item => {\n\t\t\t\t\t\tconst has = set.has(item.urn);\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={item.urn} className={Buttons.BUTTON_GROUP}>\n\t\t\t\t\t\t\t\t<span className={Buttons.NON_BUTTON}>\n\t\t\t\t\t\t\t\t\t<ItemTypeIcon type={item.resource?.type ?? Item.Resource.Type.TYPE_UNSPECIFIED} />\n\t\t\t\t\t\t\t\t\t{item.meta?.name}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={`${Buttons.BUTTON} ${has ? Buttons.ACTIVE : INACTIVE}`}\n\t\t\t\t\t\t\t\t\tonClick={() => toggleHas(item.urn)}>\n\t\t\t\t\t\t\t\t\t<Icon kind=\"check-line\" />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={`${Buttons.BUTTON} ${!has ? Buttons.ACTIVE : INACTIVE}`}\n\t\t\t\t\t\t\t\t\tonClick={() => toggleHas(item.urn)}>\n\t\t\t\t\t\t\t\t\t<Icon kind=\"close-line\" />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction toggleSetValue<T>(set: ReadonlySet<T>, value: T): Set<T> {\n\tconst result = new Set(set);\n\tif (set.has(value)) {\n\t\tresult.delete(value);\n\t} else {\n\t\tresult.add(value);\n\t}\n\treturn result;\n}\n\nconst locales: Locales<\n\tSimpleString<\"instruction\" | \"all\" | \"none\" | \"file\" | \"itemInstruction\" | \"wikipediaInstruction\">\n> = {\n\ten: {\n\t\tinstruction: \"Select analysis options\",\n\n\t\tall: \"All\",\n\t\tnone: \"None\",\n\t\tfile: \"File\",\n\n\t\titemInstruction: \"Compare your submitted files among each other. Group A will be compared with Group B.\",\n\t\twikipediaInstruction: \"Compare your submitted files with all of Wikipedia.\",\n\t},\n\tde: {\n\t\tinstruction: \"Analyseoptionen auswählen\",\n\n\t\tall: \"Alles\",\n\t\tnone: \"Nichts\",\n\t\tfile: \"Datei\",\n\n\t\titemInstruction:\n\t\t\t\"Vergleichen Sie Ihre eingereichten Dateien miteinander. Gruppe A wird mit Gruppe B verglichen.\",\n\t\twikipediaInstruction: \"Vergleichen Sie Ihre eingereichten Dateien mit der gesamten Wikipedia.\",\n\t},\n};\n"],"names":["knownCollections","en","core_fulltext_languagenameenglish","title","de","EMPTY_OBJ","Label","props","className","kind","SubmittedFilesLabel","l","useLocalization","icon","text","CollectionLabel","urn","PicapicaUrn","collection","urnString","parsed","c","processProps","known","useCollectionLocalization","name","description","locales","submittedFiles","unknown","StepActionBar","NextButton","to","Buttons","BackButton","StartButton","next","back","start","Group","getLinkToStep","step","toSubmit","toAnalysis","toResults","assertNever","STEPS","ICONS","submit","analysis","checkout","results","StepSelector","disableOthers","key","StepSelectorGroup","heading","current","sessionUrn","deleteItemAction","request","session","mutate","oldSession","cloneSession","item","updateItemAction","metaObject","meta","updateComparisonSetAction","pairs","analysisConfig","pairingsList","p","JSON","createTimestamp","ms","Date","seconds","Math","nanos","compareTimestamps","a","b","sortSessionItems","items","aCreated","bCreated","useCollections","useQuery","refetchInterval","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","queryFn","async","req","getSessionClient","resp","AnalysisConfig","constructor","this","groupA","groupB","collections","withGroupA","withGroupB","withCollections","withCollection","copy","Map","addCollection","set","type","getPicapicaUrnType","allItems","pair","aType","bType","toItemUrns","getResourcePairs","pairsA","pairsB","Head","dynamicComponent","state","update","useLoadSession","getSessionUrn","updateConfig","useCallback","config","useMemo","fromResourcePairs","i","EMPTY","header","onReady","left","right","instruction","wikipediaInstruction","ItemConfig","allUrns","allA","allB","all","none","INACTIVE","onClick","newConfig","Set","Item","toggleSetValue","toggleA","toggleB","CollectionConfig","setAll","setNone","toggleHas","collectionUrn","has","result","file","itemInstruction"],"sourceRoot":""}