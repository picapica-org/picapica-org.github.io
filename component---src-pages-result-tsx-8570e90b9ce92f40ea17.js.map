{"version":3,"file":"component---src-pages-result-tsx-8570e90b9ce92f40ea17.js","mappings":"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","sources":["webpack://picapica-web-client/./src/elements/alignment-view.tsx","webpack://picapica-web-client/./src/elements/center-align-two.tsx","webpack://picapica-web-client/./src/lib/use-collection-localization.ts","webpack://picapica-web-client/./src/elements/labels.tsx","webpack://picapica-web-client/./src/elements/loader-animation.tsx","webpack://picapica-web-client/./src/lib/session/result-categories.ts","webpack://picapica-web-client/./src/elements/badge.tsx","webpack://picapica-web-client/./src/elements/results-overview.tsx","webpack://picapica-web-client/./src/lib/lru-cache.ts","webpack://picapica-web-client/./src/lib/use-alignment.ts","webpack://picapica-web-client/./src/lib/use-collection-document.ts","webpack://picapica-web-client/./src/lib/use-result-text.ts","webpack://picapica-web-client/./src/pages/result.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport { LeftChange, RightChange } from \"../lib/alignment\";\nimport { Locales } from \"../lib/localization\";\nimport { useAlignment } from \"../lib/use-alignment\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport \"./alignment-view.scss\";\n\nexport interface Props {\n\treadonly left: string;\n\treadonly right: string;\n\treadonly alignmentKey: string;\n}\n\nexport const AlignmentView = memo((props: Props): JSX.Element => {\n\tconst [alignments] = useAlignment(props.alignmentKey, [props]);\n\n\tconst diff = alignments[0]?.diff?.diff;\n\n\treturn (\n\t\t<div className=\"AlignmentView\">\n\t\t\t{diff ? (\n\t\t\t\t<>\n\t\t\t\t\t{diff.map(({ left }, i) => {\n\t\t\t\t\t\treturn <DiffView key={\"l\" + i} left={left} index={i} total={diff.length} />;\n\t\t\t\t\t})}\n\t\t\t\t\t{diff.map(({ right }, i) => {\n\t\t\t\t\t\treturn <DiffView key={\"r\" + i} right={right} index={i} total={diff.length} />;\n\t\t\t\t\t})}\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"left\" style={{ gridRow: 1 }}>\n\t\t\t\t\t\t<span>{props.left}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"right\" style={{ gridRow: 1 }}>\n\t\t\t\t\t\t<span>{props.right}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n});\n\ninterface DiffLineProps {\n\tindex: number;\n\ttotal: number;\n}\nfunction DiffView(props: ({ left: LeftChange<string> } | { right: RightChange<string> }) & DiffLineProps): JSX.Element {\n\tlet equal: string;\n\tlet changed: string;\n\tlet type: \"left\" | \"right\";\n\tif (\"left\" in props) {\n\t\tequal = props.left.equal;\n\t\tchanged = props.left.removed;\n\t\ttype = \"left\";\n\t} else {\n\t\tequal = props.right.equal;\n\t\tchanged = props.right.added;\n\t\ttype = \"right\";\n\t}\n\n\tconst changedClass = type === \"left\" ? \"removed\" : \"added\";\n\n\treturn (\n\t\t<div className={type} style={{ gridRow: props.index + 1 }}>\n\t\t\t{equal !== \"\" ? (\n\t\t\t\t<>\n\t\t\t\t\t<span className=\"unchanged\">{equal.trim()}</span>\n\t\t\t\t\t{/\\s$/.test(equal) ? \" \" : \"\"}\n\t\t\t\t\t<Change {...props} type={changedClass} text={changed} isFirst={false} />\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<Change {...props} type={changedClass} text={changed} isFirst={true} />\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\ninterface ChangeProps {\n\ttext: string;\n\ttype: \"added\" | \"removed\";\n\tindex: number;\n\ttotal: number;\n\tisFirst: boolean;\n}\nfunction Change(props: ChangeProps): JSX.Element {\n\tconst text = props.text;\n\n\tconst context = 500;\n\tconst minOmitted = 20;\n\n\tconst isLast = props.index === props.total - 1;\n\tif (isLast && text.length > context) {\n\t\tconst tokens = tokenizeWords(text);\n\t\tconst rest = splitRest(tokens, context);\n\t\tif (rest.length > minOmitted) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<span className={props.type}>\n\t\t\t\t\t\t<FadeText text={tokens.join(\" \").trim()} position=\"end\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<Omitted words={rest.length} />\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\t} else if (props.isFirst && text.length > context) {\n\t\tconst tokens = tokenizeWords(text).reverse();\n\t\tconst rest = splitRest(tokens, context);\n\t\tif (rest.length > minOmitted) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Omitted words={rest.length} />\n\t\t\t\t\t<span className={props.type}>\n\t\t\t\t\t\t<FadeText text={tokens.reverse().join(\" \").trim()} position=\"start\" />\n\t\t\t\t\t</span>\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\t} else if (text.length > context * 2) {\n\t\tconst start = tokenizeWords(text);\n\t\tconst end = splitRest(start, context).reverse();\n\t\tconst rest = splitRest(end, context);\n\n\t\tif (rest.length > minOmitted) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<span className={props.type}>\n\t\t\t\t\t\t<FadeText text={start.join(\" \").trim()} position=\"end\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<Omitted words={rest.length} />\n\t\t\t\t\t<span className={props.type}>\n\t\t\t\t\t\t<FadeText text={end.reverse().join(\" \").trim()} position=\"start\" />\n\t\t\t\t\t</span>\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn <span className={props.type}>{props.text}</span>;\n}\nfunction tokenizeWords(text: string): string[] {\n\treturn text.split(/ /g);\n}\nfunction splitRest(tokens: string[], stringLength: number): string[] {\n\tlet length = 0;\n\tfor (let i = 0; i < tokens.length; i++) {\n\t\tlength += tokens[i].length;\n\t\tif (length >= stringLength) {\n\t\t\treturn tokens.splice(i + 1, tokens.length - i - 1);\n\t\t}\n\t}\n\n\treturn [];\n}\n\ninterface FadeTextProps {\n\ttext: string;\n\tposition: \"start\" | \"end\";\n}\nfunction FadeText(props: FadeTextProps): JSX.Element {\n\tconst fadeLength = 10;\n\n\tconst chars = [...props.text];\n\tif (chars.length < fadeLength) {\n\t\t// fail safe\n\t\treturn <>{props.text}</>;\n\t}\n\n\tconst fade =\n\t\tprops.position === \"start\" ? chars.splice(0, fadeLength) : chars.splice(chars.length - fadeLength, fadeLength);\n\tconst text = chars.join(\"\");\n\n\tif (props.position === \"start\") {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{fade.map((c, i) => (\n\t\t\t\t\t<span key={i} className=\"fade\" style={{ opacity: i / fadeLength }}>\n\t\t\t\t\t\t{c}\n\t\t\t\t\t</span>\n\t\t\t\t))}\n\t\t\t\t{text}\n\t\t\t</>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{text}\n\t\t\t\t{fade.map((c, i) => (\n\t\t\t\t\t<span key={i} className=\"fade\" style={{ opacity: (fadeLength - i) / fadeLength }}>\n\t\t\t\t\t\t{c}\n\t\t\t\t\t</span>\n\t\t\t\t))}\n\t\t\t</>\n\t\t);\n\t}\n}\n\ninterface OmittedProps {\n\twords: number;\n}\nfunction Omitted(props: OmittedProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\treturn <span className=\"Omitted\"> [{l.omitted(props.words)}] </span>;\n}\n\nconst locales: Locales<{\n\tomitted: (words: number) => JSX.Element;\n}> = {\n\ten: {\n\t\tomitted(words) {\n\t\t\treturn <>… {words} words omitted</>;\n\t\t},\n\t},\n\tde: {\n\t\tomitted(words) {\n\t\t\treturn <>… {words} Wörter weggelassen</>;\n\t\t},\n\t},\n};\n","import React from \"react\";\nimport \"./center-align-two.scss\";\n\nexport interface CenterAlignTwoProps {\n\treadonly className?: string;\n\treadonly grow: \"left\" | \"right\";\n\treadonly left: React.ReactNode;\n\treadonly right: React.ReactNode;\n}\n\nexport function CenterAlignTwo({ className, grow, left, right }: CenterAlignTwoProps): JSX.Element {\n\treturn (\n\t\t<div className={\"CenterAlignTwo\" + (className ? \" \" + className : \"\")}>\n\t\t\t<div className={`left${grow === \"left\" ? \" grow\" : \"\"}`}>{left}</div>\n\t\t\t<div className={`right${grow === \"right\" ? \" grow\" : \"\"}`}>{right}</div>\n\t\t</div>\n\t);\n}\n","import { Locales } from \"./localization\";\nimport { PicapicaUrn } from \"./session/urn\";\nimport { useLocalization } from \"./use-localization\";\n\nexport interface CollectionLocalization {\n\treadonly title: string;\n}\n\ntype KnownCollections = \"core_fulltext_languagenameenglish\";\n\nconst knownCollections: Locales<Record<KnownCollections, CollectionLocalization>> = {\n\ten: {\n\t\tcore_fulltext_languagenameenglish: {\n\t\t\ttitle: \"CORE - The world's largest collection of open-access research papers\",\n\t\t},\n\t},\n\tde: {\n\t\tcore_fulltext_languagenameenglish: {\n\t\t\ttitle: \"CORE - The world's largest collection of open-access research papers\",\n\t\t},\n\t},\n};\n\nconst EMPTY_OBJ = {};\n\nexport function useCollectionLocalization(\n\turn: PicapicaUrn | string | undefined | null\n): Partial<CollectionLocalization> {\n\tconst l: Readonly<Record<string, CollectionLocalization | undefined>> = useLocalization(knownCollections);\n\n\tconst parsed = typeof urn === \"string\" ? PicapicaUrn.tryParse(urn) : urn;\n\tif (parsed && parsed.type === \"collection\") {\n\t\tconst known = l[parsed.collectionId];\n\t\tif (known) {\n\t\t\treturn known;\n\t\t}\n\t}\n\n\treturn EMPTY_OBJ;\n}\n","import React from \"react\";\nimport { Collection } from \"../lib/generated/v1/types_pb\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { PicapicaCollectionUrn, PicapicaUrn, Urn } from \"../lib/session/urn\";\nimport { useCollectionLocalization } from \"../lib/use-collection-localization\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { DeepReadonly } from \"../lib/util\";\nimport { PicaIcon, PicaIconKind } from \"./icon\";\nimport \"./labels.scss\";\n\nexport interface LabelProps {\n\treadonly icon?: PicaIconKind;\n\treadonly text: string;\n}\n\nexport function Label(props: LabelProps): JSX.Element {\n\treturn (\n\t\t<span className=\"Label\">\n\t\t\t{props.icon && <PicaIcon kind={props.icon} />}\n\t\t\t<span className=\"text\">{props.text}</span>\n\t\t</span>\n\t);\n}\n\nexport function SubmittedFilesLabel(): JSX.Element {\n\tconst l = useLocalization(locales);\n\treturn <Label icon=\"upload\" text={l.submittedFiles} />;\n}\n\nexport type CollectionProps =\n\t| {\n\t\t\treadonly collectionUrn: string | PicapicaCollectionUrn;\n\t\t\treadonly collections?: DeepReadonly<Collection.AsObject[]>;\n\t  }\n\t| {\n\t\t\treadonly collection: DeepReadonly<Collection.AsObject>;\n\t  };\n\nexport function CollectionLabel(props: CollectionProps): JSX.Element {\n\tconst { urn, collection } = processProps(props);\n\tconst { title } = useCollectionLocalization(urn);\n\n\tif (title) {\n\t\treturn <Label text={title} />;\n\t} else if (collection?.properties) {\n\t\treturn <Label text={`${collection.properties.name} - ${collection.properties.description}`} />;\n\t} else {\n\t\treturn <UnknownCollectionLabel />;\n\t}\n}\ninterface ProcessedProps {\n\turn: PicapicaCollectionUrn | undefined;\n\tcollection: DeepReadonly<Collection.AsObject> | undefined;\n}\nfunction processProps(props: CollectionProps): ProcessedProps {\n\tif (\"collection\" in props) {\n\t\treturn {\n\t\t\turn: PicapicaUrn.parse(props.collection.urn as Urn<\"collection\">),\n\t\t\tcollection: props.collection,\n\t\t};\n\t} else {\n\t\tlet urn: PicapicaCollectionUrn;\n\t\tlet urnString: string;\n\t\tif (typeof props.collectionUrn === \"string\") {\n\t\t\tconst parsed = PicapicaUrn.tryParse(props.collectionUrn);\n\t\t\tif (!parsed || parsed.type !== \"collection\") {\n\t\t\t\treturn { urn: undefined, collection: undefined };\n\t\t\t}\n\t\t\turn = parsed;\n\t\t\turnString = props.collectionUrn;\n\t\t} else {\n\t\t\turn = props.collectionUrn;\n\t\t\turnString = PicapicaUrn.stringify(urn);\n\t\t}\n\n\t\tconst collection = props.collections?.find(c => c.urn === urnString);\n\n\t\treturn { urn, collection };\n\t}\n}\n\nfunction UnknownCollectionLabel(): JSX.Element {\n\tconst l = useLocalization(locales);\n\treturn <Label text={l.unknown} />;\n}\n\nconst locales: Locales<SimpleString<\"submittedFiles\" | \"unknown\">> = {\n\ten: {\n\t\tsubmittedFiles: \"Your submitted files\",\n\t\tunknown: \"Unknown\",\n\t},\n\tde: {\n\t\tsubmittedFiles: \"Ihre eingereichten Dateien\",\n\t\tunknown: \"Unbekannt\",\n\t},\n};\n","import React from \"react\";\nimport { Icon } from \"./icon\";\nimport \"./loader-animation.scss\";\n\nexport interface LoaderAnimationProps {\n\treadonly id?: string;\n}\n\nexport function LoaderAnimation({ id }: LoaderAnimationProps): JSX.Element {\n\treturn (\n\t\t<span className=\"LoaderAnimation\" id={id}>\n\t\t\t{\" \"}\n\t\t\t<Icon kind=\"loader-5-line\" />\n\t\t\t<Icon kind=\"loader-5-line\" />\n\t\t</span>\n\t);\n}\n","import { Result } from \"../generated/v1/types_pb\";\nimport { DeepReadonly } from \"../util\";\nimport { PicapicaDocumentUrn, PicapicaItemUrn, PicapicaUrn, Urn } from \"./urn\";\n\nexport interface ItemResult {\n\treadonly a: PicapicaItemUrn;\n\treadonly b: PicapicaItemUrn;\n\treadonly result: DeepReadonly<Result.AsObject>;\n}\nexport interface CollectionResult {\n\treadonly item: PicapicaItemUrn;\n\treadonly document: PicapicaDocumentUrn;\n\treadonly result: DeepReadonly<Result.AsObject>;\n}\n\nexport interface ResultCategories {\n\t/**\n\t * A list of all results between items.\n\t */\n\titems: ItemResult[];\n\t/**\n\t * A map from a collections URN to a non-empty list of results between an item and a document from key collection.\n\t */\n\tcollections: Map<Urn<\"collection\">, CollectionResult[]>;\n\t/**\n\t * A list of results that are invalid by not having valid URNs.\n\t */\n\tinvalid: DeepReadonly<Result.AsObject>[];\n}\n\nexport function categorizeResults(results: Iterable<DeepReadonly<Result.AsObject>>): ResultCategories {\n\tconst categories: ResultCategories = { items: [], collections: new Map(), invalid: [] };\n\n\tfunction addDocument(\n\t\titem: PicapicaItemUrn,\n\t\tdocument: PicapicaDocumentUrn,\n\t\tresult: DeepReadonly<Result.AsObject>\n\t): void {\n\t\tconst collectionUrn = PicapicaUrn.stringify({ type: \"collection\", collectionId: document.collectionId });\n\n\t\tlet list = categories.collections.get(collectionUrn);\n\t\tif (list === undefined) {\n\t\t\tlist = [];\n\t\t\tcategories.collections.set(collectionUrn, list);\n\t\t}\n\t\tlist.push({ item, document, result });\n\t}\n\n\tfor (const result of results) {\n\t\tconst a = PicapicaUrn.tryParse(result.resources?.urnA ?? \"\");\n\t\tconst b = PicapicaUrn.tryParse(result.resources?.urnB ?? \"\");\n\n\t\tif (!a || !b) {\n\t\t\tcategories.invalid.push(result);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (a.type === \"item\" && b.type === \"item\") {\n\t\t\tcategories.items.push({ a, b, result });\n\t\t} else if (a.type === \"item\" && b.type === \"document\") {\n\t\t\taddDocument(a, b, result);\n\t\t} else if (a.type === \"document\" && b.type === \"item\") {\n\t\t\taddDocument(b, a, result);\n\t\t} else {\n\t\t\tcategories.invalid.push(result);\n\t\t}\n\t}\n\n\treturn categories;\n}\n","import React from \"react\";\nimport \"./badge.scss\";\n\nexport type BadgeKind = \"Dark\" | \"Light\";\n\nexport interface BadgeProps {\n\treadonly kind: BadgeKind;\n}\n\nexport function Badge({ kind, children }: React.PropsWithChildren<BadgeProps>): JSX.Element {\n\treturn <span className={`Badge ${kind}`}>{children}</span>;\n}\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { Session } from \"../lib/generated/v1/services_pb\";\nimport { Collection, Result } from \"../lib/generated/v1/types_pb\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { categorizeResults, CollectionResult } from \"../lib/session/result-categories\";\nimport { PicapicaUrn, Urn } from \"../lib/session/urn\";\nimport { useCollectionDocument, usePreloadCollectionDocuments } from \"../lib/use-collection-document\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { DeepReadonly } from \"../lib/util\";\nimport { Badge } from \"./badge\";\nimport { Buttons } from \"./buttons\";\nimport { CenterAlignTwo } from \"./center-align-two\";\nimport { PicaIcon } from \"./icon\";\nimport { CollectionLabel, Label, SubmittedFilesLabel } from \"./labels\";\nimport { LoaderAnimation } from \"./loader-animation\";\nimport \"./results-overview.scss\";\n\nexport interface OverviewContainerProps {\n\treadonly backTo?: string;\n\treadonly title: React.ReactNode;\n}\n\nexport function OverviewContainer({\n\tbackTo,\n\ttitle,\n\tchildren,\n}: React.PropsWithChildren<OverviewContainerProps>): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\treturn (\n\t\t<div className=\"OverviewContainer\">\n\t\t\t<div className=\"head\">\n\t\t\t\t{backTo && (\n\t\t\t\t\t<Link className={Buttons.BUTTON} to={backTo} title={l.back}>\n\t\t\t\t\t\t<PicaIcon kind=\"back\" />\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t\t<div>{title}</div>\n\t\t\t</div>\n\t\t\t<div className=\"content\">{children}</div>\n\t\t</div>\n\t);\n}\n\nexport interface ResultsOverviewProps {\n\treadonly session: DeepReadonly<Session.AsObject>;\n\treadonly collections?: DeepReadonly<Collection.AsObject[]>;\n\treadonly backTo: string;\n\treadonly itemTo: string;\n\treadonly collectionTo: (collectionUrn: string) => string;\n}\n\nexport function ResultsOverview({\n\tsession,\n\tcollections,\n\tbackTo,\n\titemTo,\n\tcollectionTo,\n}: ResultsOverviewProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst categories = categorizeResults(session.resultsList);\n\n\tif (categories.invalid.length) {\n\t\tconsole.error(\"Not displaying the following results:\");\n\t\tconsole.error(categories.invalid);\n\t}\n\n\tconst title = (\n\t\t<CenterAlignTwo\n\t\t\tgrow=\"left\"\n\t\t\tleft={<Label icon=\"results\" text={l.analysisResults} />}\n\t\t\tright={<Badge kind=\"Dark\">{l.results}</Badge>}\n\t\t/>\n\t);\n\n\tconst running = session.status === Session.ComputeStatus.STATUS_RUNNING;\n\n\treturn (\n\t\t<div className=\"ResultsOverview\">\n\t\t\t<OverviewContainer backTo={backTo} title={title}>\n\t\t\t\t<div>\n\t\t\t\t\t<Link className={Buttons.BUTTON} to={itemTo}>\n\t\t\t\t\t\t<CenterAlignTwo\n\t\t\t\t\t\t\tgrow=\"left\"\n\t\t\t\t\t\t\tleft={<SubmittedFilesLabel />}\n\t\t\t\t\t\t\tright={\n\t\t\t\t\t\t\t\t<Badge kind=\"Light\">\n\t\t\t\t\t\t\t\t\t{running && <LoaderAnimation />}\n\t\t\t\t\t\t\t\t\t{categories.items.length}\n\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t{[...categories.collections].map(([urn, results]) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={urn}>\n\t\t\t\t\t\t\t<PreloadDocument sessionUrn={session.urn} results={results} />\n\t\t\t\t\t\t\t<Link className={Buttons.BUTTON} to={collectionTo(urn)}>\n\t\t\t\t\t\t\t\t<CenterAlignTwo\n\t\t\t\t\t\t\t\t\tgrow=\"left\"\n\t\t\t\t\t\t\t\t\tleft={<CollectionLabel collectionUrn={urn} collections={collections} />}\n\t\t\t\t\t\t\t\t\tright={<Badge kind=\"Light\">{results.length}</Badge>}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</OverviewContainer>\n\t\t</div>\n\t);\n}\n\nfunction PreloadDocument({ sessionUrn, results }: { sessionUrn: string; results: CollectionResult[] }): JSX.Element {\n\tusePreloadCollectionDocuments(\n\t\tsessionUrn,\n\t\tresults.map(r => PicapicaUrn.stringify(r.document))\n\t);\n\treturn <></>;\n}\n\nexport interface ItemResultsOverviewProps {\n\treadonly session: DeepReadonly<Session.AsObject>;\n\treadonly backTo: string;\n\treadonly resultTo: (result: DeepReadonly<Result.AsObject>) => string;\n}\n\nexport function ItemResultsOverview({ session, backTo, resultTo }: ItemResultsOverviewProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst { items } = categorizeResults(session.resultsList);\n\n\tconst title = (\n\t\t<CenterAlignTwo grow=\"left\" left={<SubmittedFilesLabel />} right={<Badge kind=\"Dark\">{l.matches}</Badge>} />\n\t);\n\n\tconst itemNameMap = new Map(session.itemsList.map(item => [item.urn, item.meta?.name]));\n\n\treturn (\n\t\t<div className=\"ItemResultsOverview\">\n\t\t\t<OverviewContainer backTo={backTo} title={title}>\n\t\t\t\t{items.map(({ result }) => {\n\t\t\t\t\tconst leftName = itemNameMap.get(result.resources?.urnA ?? \"\") ?? l.unknownItem;\n\t\t\t\t\tconst rightName = itemNameMap.get(result.resources?.urnB ?? \"\") ?? l.unknownItem;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={result.urn}>\n\t\t\t\t\t\t\t<Link className={Buttons.BUTTON} to={resultTo(result)}>\n\t\t\t\t\t\t\t\t<CenterAlignTwo\n\t\t\t\t\t\t\t\t\tgrow=\"left\"\n\t\t\t\t\t\t\t\t\tleft={\n\t\t\t\t\t\t\t\t\t\t<span className=\"item-vs\">\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"left\">{leftName}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"vs\">vs.</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"right\">{rightName}</span>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tright={\n\t\t\t\t\t\t\t\t\t\tsession.status === Session.ComputeStatus.STATUS_COMPLETED ? (\n\t\t\t\t\t\t\t\t\t\t\t<Badge kind=\"Light\">{result.seedsList.length}</Badge>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<LoaderAnimation />\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\n\t\t\t\t{items.length === 0 && <div className=\"no-results\">{l.noResults}</div>}\n\t\t\t</OverviewContainer>\n\t\t</div>\n\t);\n}\n\nexport interface CollectionResultsOverviewProps {\n\treadonly collectionUrn: string;\n\treadonly session: DeepReadonly<Session.AsObject>;\n\treadonly collections?: DeepReadonly<Collection.AsObject[]>;\n\treadonly backTo: string;\n\treadonly resultTo: (result: DeepReadonly<Result.AsObject>) => string;\n}\n\nexport function CollectionResultsOverview({\n\tsession,\n\tcollectionUrn,\n\tcollections,\n\tbackTo,\n\tresultTo,\n}: CollectionResultsOverviewProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst results = categorizeResults(session.resultsList).collections.get(collectionUrn as Urn<\"collection\">) ?? [];\n\n\tconst title = (\n\t\t<CenterAlignTwo\n\t\t\tgrow=\"left\"\n\t\t\tleft={<CollectionLabel collectionUrn={collectionUrn} collections={collections} />}\n\t\t\tright={<Badge kind=\"Dark\">{l.matches}</Badge>}\n\t\t/>\n\t);\n\n\tconst itemNameMap = new Map(session.itemsList.map(item => [item.urn, item.meta?.name]));\n\n\treturn (\n\t\t<div className=\"CollectionResultsOverview\">\n\t\t\t<OverviewContainer backTo={backTo} title={title}>\n\t\t\t\t{results.map(({ item, document, result }) => {\n\t\t\t\t\tconst itemName = itemNameMap.get(PicapicaUrn.stringify(item)) ?? l.unknownItem;\n\t\t\t\t\tconst documentName = (\n\t\t\t\t\t\t<DocumentName sessionUrn={session.urn} urn={PicapicaUrn.stringify(document)} />\n\t\t\t\t\t);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={result.urn}>\n\t\t\t\t\t\t\t<Link className={Buttons.BUTTON} to={resultTo(result)}>\n\t\t\t\t\t\t\t\t<CenterAlignTwo\n\t\t\t\t\t\t\t\t\tgrow=\"left\"\n\t\t\t\t\t\t\t\t\tleft={\n\t\t\t\t\t\t\t\t\t\t<span className=\"item-vs\">\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"left\">{itemName}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"vs\">vs.</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"right\">{documentName}</span>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tright={\n\t\t\t\t\t\t\t\t\t\tsession.status === Session.ComputeStatus.STATUS_COMPLETED ? (\n\t\t\t\t\t\t\t\t\t\t\t<Badge kind=\"Light\">{result.seedsList.length}</Badge>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<LoaderAnimation />\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\n\t\t\t\t{results.length === 0 && <div className=\"no-results\">{l.noResults}</div>}\n\t\t\t</OverviewContainer>\n\t\t</div>\n\t);\n}\n\nfunction DocumentName({ sessionUrn, urn }: { sessionUrn: string; urn: Urn<\"document\"> }): JSX.Element {\n\tconst document = useCollectionDocument(sessionUrn, urn);\n\tif (document?.properties) {\n\t\treturn <>{document.properties?.title}</>;\n\t}\n\treturn <LoaderAnimation />;\n}\n\nconst locales: Locales<SimpleString<\"back\" | \"analysisResults\" | \"results\" | \"matches\" | \"noResults\" | \"unknownItem\">> =\n\t{\n\t\ten: {\n\t\t\tback: \"Back\",\n\n\t\t\tanalysisResults: \"Analysis results\",\n\t\t\tresults: \"Results\",\n\t\t\tmatches: \"Matches\",\n\t\t\tnoResults: \"No results\",\n\n\t\t\tunknownItem: \"<unknown>\",\n\t\t},\n\t\tde: {\n\t\t\tback: \"Zurück\",\n\n\t\t\tanalysisResults: \"Analyse\\xADergebnisse\",\n\t\t\tresults: \"Ergebnisse\",\n\t\t\tmatches: \"Treffer\",\n\t\t\tnoResults: \"Keine Ergebnisse\",\n\n\t\t\tunknownItem: \"<unbekannt>\",\n\t\t},\n\t};\n","/**\n * Shuffles the given array.\n */\nfunction shuffle<T>(array: T[]): void {\n\tlet j, x, i;\n\tfor (i = array.length - 1; i > 0; i--) {\n\t\tj = Math.floor(Math.random() * (i + 1));\n\t\tx = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = x;\n\t}\n}\n\n/**\n * Returns a random subset of the given values with `min(count, values.length)` elements.\n *\n * @param values\n * @param count\n * @returns\n */\nfunction randomValues<T>(values: readonly T[], count: number): T[] {\n\tif (values.length <= count) return values.slice(0);\n\tif (count === 1) return [values[Math.floor(Math.random() * values.length)]];\n\n\tconst copy = values.slice(0);\n\tshuffle(copy);\n\treturn copy.slice(0, count);\n}\n\n/**\n * A least recently used cache.\n */\nexport class LRUCache<V> {\n\tsize: number;\n\n\tprivate _length: number;\n\tprivate _head: CacheNode<string, V>;\n\tprivate _tail: CacheNode<string, V>;\n\tprivate _map: Record<string, CacheNode<string, V>> = {};\n\n\t/**\n\t * Creates an instance of LRUCache.\n\t *\n\t * @param size The maximum size of the cache.\n\t */\n\tconstructor(size = 100) {\n\t\tthis.size = size;\n\t\tthis._length = 0;\n\n\t\tthis._head = new CacheNode<string, V>(null as any, null as any);\n\t\tthis._tail = new CacheNode<string, V>(null as any, null as any);\n\t\tthis._head.next = this._tail;\n\t\tthis._tail.prev = this._head;\n\t}\n\n\t/**\n\t * Adds a new element to the cache.\n\t *\n\t * @param key The key of the element.\n\t * @param obj The element.\n\t */\n\tadd(key: string, obj: V): void {\n\t\treturn this.addAll({ [key]: obj });\n\t}\n\t/**\n\t * Adds any number of key-value-pairs to the cache.\n\t *\n\t * @param map The collection of key-value-pairs.\n\t */\n\taddAll(map: Record<string, V>): void {\n\t\tlet keys = Object.keys(map);\n\t\tif (keys.length === 0) return;\n\t\tif (keys.length > this.size) keys = keys.slice(0, this.size);\n\n\t\tconst toRemove = keys.length + this._length - this.size;\n\t\tif (toRemove > 0) {\n\t\t\trandomValues(Object.keys(this._map), toRemove).forEach(key => {\n\t\t\t\tthis.remove(key);\n\t\t\t});\n\t\t}\n\n\t\tfor (const key of keys) {\n\t\t\tconst node = new CacheNode<string, V>(key, map[key]);\n\t\t\tthis._tail.insertBefore(node);\n\t\t\tthis._map[key] = node;\n\t\t\tthis._length++;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the cached value.\n\t *\n\t * @param key The key of the cached element.\n\t * @param defaultValue The default value.\n\t * @returns The cached element of the default value.\n\t */\n\tget(key: string, defaultValue: V): V;\n\tget(key: string, defaultValue?: V): V | undefined;\n\tget(key: string, defaultValue?: V): V | undefined {\n\t\tconst node = this._map[key];\n\t\tif (node) {\n\t\t\tnode.remove();\n\t\t\tthis._head.insertAfter(node);\n\t\t\treturn node.obj;\n\t\t} else {\n\t\t\treturn defaultValue;\n\t\t}\n\t}\n\n\t/**\n\t * Returns whether an element with the given key is cached.\n\t *\n\t * @param key The key of the cached element.\n\t * @returns\n\t */\n\tcontains(key: string): boolean {\n\t\treturn Boolean(this._map[key]);\n\t}\n\n\t/**\n\t * Removes the cached element with the given key.\n\t *\n\t * @param key The key of the cached element.\n\t * @returns Whether there was an element cached.\n\t */\n\tremove(key: string): boolean {\n\t\tconst node = this._map[key];\n\t\tif (!node) return false;\n\t\tthis._removeNode(node);\n\t\treturn true;\n\t}\n\n\t_removeNode(node: CacheNode<string, V>): void {\n\t\tthis._length--;\n\t\tdelete this._map[node.key];\n\t\tnode.remove();\n\t}\n}\n\n/**\n * A node used by the internal implementation of the LRU cache.\n */\nclass CacheNode<K, V> {\n\tkey: K;\n\tobj: V;\n\n\tprev: CacheNode<K, V> | undefined = undefined;\n\tnext: CacheNode<K, V> | undefined = undefined;\n\n\tconstructor(key: K, obj: V) {\n\t\tthis.key = key;\n\t\tthis.obj = obj;\n\t}\n\n\tremove(): void {\n\t\tthis.prev!.next = this.next;\n\t\tthis.next!.prev = this.prev;\n\t}\n\n\tinsertAfter(afterNode: CacheNode<K, V>): void {\n\t\tafterNode.next = this.next;\n\t\tafterNode.prev = this;\n\n\t\tthis.next!.prev = afterNode;\n\t\tthis.next = afterNode;\n\t}\n\tinsertBefore(beforeNode: CacheNode<K, V>): void {\n\t\treturn this.prev!.insertAfter(beforeNode);\n\t}\n}\n","import { useEffect, useState } from \"react\";\nimport { SimpleCombinedDiff } from \"./alignment\";\nimport { LRUCache } from \"./lru-cache\";\nimport { useAsyncEffect } from \"./react-util\";\nimport { lazy, noop } from \"./util\";\n\nlet pendingResolvesCounter = 0;\nconst pendingResolves = new Map<number, (diff: SimpleCombinedDiff) => void>();\n\nconst getWorker = lazy(() => {\n\tconst worker = new Worker(new URL(\"./alignment.worker.ts\", import.meta.url));\n\tworker.onmessage = ({ data: { diff, id } }) => {\n\t\tconst resolve = pendingResolves.get(id);\n\t\tpendingResolves.delete(id);\n\t\tif (resolve) {\n\t\t\tresolve(diff);\n\t\t}\n\t};\n\treturn worker;\n});\n\nconst promiseCache = new LRUCache<Promise<SimpleCombinedDiff>>(500);\nconst resultCache = new LRUCache<SimpleCombinedDiff>(500);\n\nfunction getCacheKey(left: string, right: string): string {\n\treturn left + \"\\0\" + right;\n}\nfunction getSimpleCombinedDiff(left: string, right: string): Promise<SimpleCombinedDiff> {\n\tconst key = getCacheKey(left, right);\n\tlet promise = promiseCache.get(key);\n\tif (promise === undefined) {\n\t\tpromise = new Promise<SimpleCombinedDiff>(resolve => {\n\t\t\tconst id = pendingResolvesCounter++;\n\t\t\tpendingResolves.set(id, resolve);\n\t\t\tgetWorker().postMessage({ left, right, id });\n\t\t});\n\t\tpromiseCache.add(key, promise);\n\t\tpromise.then(diff => resultCache.add(key, diff));\n\t}\n\treturn promise;\n}\nfunction getCachedSimpleCombinedDiff(left: string, right: string): SimpleCombinedDiff | undefined {\n\tconst key = getCacheKey(left, right);\n\treturn resultCache.get(key);\n}\n\nexport interface AlignmentRequest {\n\tleft: string;\n\tright: string;\n}\nexport interface Alignment {\n\treadonly left: string;\n\treadonly right: string;\n\tdiff: SimpleCombinedDiff | undefined;\n}\n\n/**\n * Returns the alignments for some strings.\n *\n * The purpose of this hooks is to provide a convenient way to use a web worker to compute the alignment.\n *\n * @param key\n * @param requests\n * @returns\n */\nexport function useAlignment(key: string, requests: readonly AlignmentRequest[]): [readonly Alignment[]] {\n\tconst [requestsKey, setRequestsKey] = useState(key);\n\tconst [state, setState] = useState<readonly Alignment[]>(() => GetInitialAlignments(requests));\n\n\tuseEffect(() => {\n\t\tif (key !== requestsKey) {\n\t\t\tsetRequestsKey(key);\n\t\t\tsetState(GetInitialAlignments(requests));\n\t\t}\n\t}, [key, requestsKey, requests]);\n\n\tuseAsyncEffect<readonly Alignment[] | undefined>(\n\t\tasync token => {\n\t\t\t// all alignments are computed\n\t\t\tif (state.every(a => a.diff !== undefined)) return;\n\n\t\t\tconst newState = [...state];\n\n\t\t\t// try to fill-in as many cached results as possible\n\t\t\tfor (let i = 0; i < state.length; i++) {\n\t\t\t\tconst alignment = state[i];\n\t\t\t\tif (alignment.diff === undefined) {\n\t\t\t\t\tconst diff = getCachedSimpleCombinedDiff(alignment.left, alignment.right);\n\t\t\t\t\tif (diff !== undefined) {\n\t\t\t\t\t\tnewState[i] = { ...alignment, diff };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// compute at most one diff\n\t\t\tfor (let i = 0; i < state.length; i++) {\n\t\t\t\tconst alignment = state[i];\n\t\t\t\tif (alignment.diff === undefined) {\n\t\t\t\t\tnewState[i] = { ...alignment, diff: await getSimpleCombinedDiff(alignment.left, alignment.right) };\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn newState;\n\t\t},\n\t\tnewState => {\n\t\t\tif (newState) {\n\t\t\t\tsetState(newState);\n\t\t\t}\n\t\t},\n\t\tnoop,\n\t\t[state]\n\t);\n\n\treturn [state];\n}\n\nfunction GetInitialAlignments(requests: readonly AlignmentRequest[]): readonly Alignment[] {\n\treturn requests.map(r => {\n\t\treturn { left: r.left, right: r.right, diff: getCachedSimpleCombinedDiff(r.left, r.right) };\n\t});\n}\n","import { QueryFunctionContext, useQueries, useQuery, UseQueryOptions } from \"react-query\";\nimport { GetDocumentRequest } from \"./generated/v1/services_pb\";\nimport { Document } from \"./generated/v1/types_pb\";\nimport { getSessionClient } from \"./session/client\";\nimport { Urn } from \"./session/urn\";\nimport { DeepReadonly } from \"./util\";\n\ntype QueryData = Document.AsObject | undefined;\ntype QueryKey = readonly [\"collection-document\", string, Urn<\"document\">];\n\nasync function fetchDocument(context: QueryFunctionContext<QueryKey>): Promise<QueryData> {\n\tconst [, sessionUrn, documentUrn] = context.queryKey;\n\n\tconst req = new GetDocumentRequest();\n\treq.setSessionUrn(sessionUrn);\n\treq.setDocumentUrn(documentUrn);\n\n\tconst resp = await getSessionClient().getDocument(req, null);\n\treturn resp.toObject().document;\n}\nfunction getQueryOptions(\n\tsessionUrn: string,\n\tdocumentUrn: Urn<\"document\">\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n): UseQueryOptions<QueryData, unknown, QueryData, QueryKey> & { queryKey: {} } {\n\treturn {\n\t\tqueryKey: [\"collection-document\", sessionUrn, documentUrn],\n\t\tqueryFn: fetchDocument,\n\t\t// collections are an immutable resource, so we don't need to refetch\n\t\trefetchInterval: false,\n\t\trefetchOnMount: false,\n\t\trefetchOnReconnect: false,\n\t\trefetchOnWindowFocus: false,\n\t};\n}\n\nexport function useCollectionDocument(\n\tsessionUrn: string,\n\tdocumentUrn: Urn<\"document\">\n): DeepReadonly<Document.AsObject> | undefined {\n\tconst options = getQueryOptions(sessionUrn, documentUrn);\n\tconst query = useQuery(options.queryKey, options);\n\treturn query.data;\n}\n\nexport function usePreloadCollectionDocuments(sessionUrn: string, documentUrns: readonly Urn<\"document\">[]): void {\n\tuseQueries(documentUrns.map(urn => getQueryOptions(sessionUrn, urn)));\n}\n","import { useQuery } from \"react-query\";\nimport { GetTextRequest, GetTextResponse } from \"./generated/v1/services_pb\";\nimport { Result, Span } from \"./generated/v1/types_pb\";\nimport { getSessionClient } from \"./session/client\";\nimport { PicapicaUrn } from \"./session/urn\";\nimport { DeepReadonly } from \"./util\";\n\nexport interface SeedText {\n\treadonly a: ResultText;\n\treadonly b: ResultText;\n}\nexport interface ResultText {\n\treadonly resourceUrn: string;\n\treadonly span: DeepReadonly<Span.AsObject>;\n\treadonly text: string;\n}\n\nexport function useResultText(result: DeepReadonly<Result.AsObject>): [readonly SeedText[] | undefined] {\n\tconst query = useQuery([\"result-text\", result.urn] as const, {\n\t\t// text is an immutable resource, so we don't need to refetch\n\t\trefetchInterval: false,\n\t\trefetchOnMount: false,\n\t\trefetchOnReconnect: false,\n\t\trefetchOnWindowFocus: false,\n\n\t\tqueryFn: async () => {\n\t\t\tconst data = getSpanData(result);\n\t\t\tconst client = getSessionClient();\n\n\t\t\tconst resultUrn = PicapicaUrn.parse(result.urn);\n\t\t\tif (resultUrn.type !== \"result\") throw new Error(\"Invalid result urn.\");\n\t\t\tconst sessionUrn = PicapicaUrn.stringify({ type: \"session\", sessionId: resultUrn.sessionId });\n\n\t\t\tconst texts = await Promise.all(\n\t\t\t\tdata.map(({ resourceUrn, span }) => {\n\t\t\t\t\tconst s = new Span();\n\t\t\t\t\ts.setBegin(span.begin);\n\t\t\t\t\ts.setEnd(span.end);\n\t\t\t\t\ts.setIndex(span.index);\n\n\t\t\t\t\tconst req = new GetTextRequest();\n\t\t\t\t\treq.setSessionUrn(sessionUrn);\n\t\t\t\t\treq.setResourceUrn(resourceUrn);\n\t\t\t\t\treq.setSpan(s);\n\n\t\t\t\t\treturn client.getText(req, null);\n\t\t\t\t})\n\t\t\t);\n\n\t\t\treturn getSeedTexts(data, texts);\n\t\t},\n\t});\n\n\treturn [query.data];\n}\n\ninterface SpanData {\n\tresourceUrn: string;\n\tspan: DeepReadonly<Span.AsObject>;\n}\nfunction getSpanData(result: DeepReadonly<Result.AsObject>): SpanData[] {\n\tconst data: SpanData[] = [];\n\n\tif (!result.resources) throw new Error(\"Invalid result object: Undefined resources\");\n\tconst { urnA, urnB } = result.resources;\n\n\tfor (const { span1, span2 } of result.seedsList) {\n\t\tif (!span1 || !span2) throw new Error(\"Invalid result object: Undefined span in seed list\");\n\t\tdata.push({ resourceUrn: urnA, span: span1 });\n\t\tdata.push({ resourceUrn: urnB, span: span2 });\n\t}\n\n\treturn data;\n}\n\nfunction getSeedTexts(data: readonly SpanData[], texts: readonly GetTextResponse[]): SeedText[] {\n\tconst result: SeedText[] = [];\n\n\tfor (let i = 0; i < data.length; i += 2) {\n\t\tresult.push({\n\t\t\ta: { ...data[i + 0], text: texts[i + 0].getTextSpan()?.getText() ?? \"\" },\n\t\t\tb: { ...data[i + 1], text: texts[i + 1].getTextSpan()?.getText() ?? \"\" },\n\t\t});\n\t}\n\n\treturn result;\n}\n","import React from \"react\";\nimport { AlignmentView } from \"../elements/alignment-view\";\nimport { CenterAlignTwo } from \"../elements/center-align-two\";\nimport { ItemTypeIcon } from \"../elements/icon\";\nimport { Page } from \"../elements/page\";\nimport { OverviewContainer } from \"../elements/results-overview\";\nimport { SessionState } from \"../elements/session-creating-loading\";\nimport { SharedHead } from \"../elements/shared-header\";\nimport { Session } from \"../lib/generated/v1/services_pb\";\nimport * as types from \"../lib/generated/v1/types_pb\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { toResults } from \"../lib/page-links\";\nimport { dynamicComponent } from \"../lib/react-util\";\nimport { PicapicaUrn, Urn } from \"../lib/session/urn\";\nimport { getLocationSearchParams } from \"../lib/url-params\";\nimport { useAlignment } from \"../lib/use-alignment\";\nimport { useCollectionDocument } from \"../lib/use-collection-document\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { SeedText, useResultText } from \"../lib/use-result-text\";\nimport { Ready, useLoadSession } from \"../lib/use-session\";\nimport { debugAssert, DeepReadonly } from \"../lib/util\";\nimport \"./result.scss\";\n\nexport const Head = (): JSX.Element => (\n\t<>\n\t\t<title>Picapica</title>\n\t\t<SharedHead />\n\t</>\n);\n\nexport default dynamicComponent(Result);\n\nfunction Result(): JSX.Element {\n\tconst [state] = useLoadSession();\n\n\tconst onReady = ({ session }: Ready): JSX.Element => {\n\t\treturn (\n\t\t\t<OverviewContainer\n\t\t\t\ttitle=\"Text alignment\"\n\t\t\t\tbackTo={toResults({\n\t\t\t\t\turn: session.urn,\n\t\t\t\t\tview: getLocationSearchParams().get(\"view\") ?? undefined,\n\t\t\t\t})}>\n\t\t\t\t<ResultValidity session={session} />\n\t\t\t</OverviewContainer>\n\t\t);\n\t};\n\n\treturn (\n\t\t<Page className=\"Result\" header=\"small\">\n\t\t\t<SessionState state={state} onReady={onReady} />\n\t\t</Page>\n\t);\n}\n\nfunction ResultValidity({ session }: { session: DeepReadonly<Session.AsObject> }): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst pageUrn = getLocationSearchParams().get(\"urn\");\n\tconst result = session.resultsList.find(r => r.urn === pageUrn);\n\n\tif (!result) {\n\t\treturn (\n\t\t\t<div className=\"invalid-result-error\">\n\t\t\t\t<p>{l.invalidUrn}</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (result.status !== types.Result.ResultStatusCode.STATUS_OK) {\n\t\treturn <div className=\"invalid-result-error\">{l.failedResult(result.status)}</div>;\n\t}\n\n\tdebugAssert(result.resources !== undefined, \"Expected that the result object has resources\");\n\tconst left = getResultResource(result.resources.urnA, session);\n\tconst right = getResultResource(result.resources.urnB, session);\n\n\tconst error = left.type === \"error\" ? left : right.type === \"error\" ? right : undefined;\n\tif (error) {\n\t\tthrow new Error(\"\");\n\t}\n\n\tif (left.type === \"error\") {\n\t\treturn (\n\t\t\t<div className=\"invalid-result-error\">\n\t\t\t\t<p>{l[`resultError${left.error}`]}</p>\n\t\t\t</div>\n\t\t);\n\t}\n\tif (right.type === \"error\") {\n\t\treturn (\n\t\t\t<div className=\"invalid-result-error\">\n\t\t\t\t<p>{l[`resultError${right.error}`]}</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn <ResultView left={left} right={right} result={result} />;\n}\n\ntype ResultResource = ResultResourceSessionItem | ResultResourceCollectionDocument;\ninterface ResultResourceSessionItem {\n\ttype: \"item\";\n\titem: DeepReadonly<types.Item.AsObject>;\n}\ninterface ResultResourceCollectionDocument {\n\ttype: \"document\";\n\tsessionUrn: string;\n\tcollectionUrn: Urn<\"collection\">;\n\tdocumentUrn: Urn<\"document\">;\n}\ninterface ResultResourceError {\n\ttype: \"error\";\n\terror: \"InvalidUrnType\" | \"UnknownItem\";\n}\nfunction getResultResource(urn: string, session: DeepReadonly<Session.AsObject>): ResultResource | ResultResourceError {\n\tconst parsed = PicapicaUrn.parse(urn);\n\n\tif (parsed.type === \"item\") {\n\t\tconst item = session.itemsList.find(i => i.urn === urn);\n\t\tif (!item) return { type: \"error\", error: \"UnknownItem\" };\n\t\treturn { type: \"item\", item };\n\t}\n\n\tif (parsed.type === \"document\") {\n\t\tconst collectionUrn = PicapicaUrn.stringify({ type: \"collection\", collectionId: parsed.collectionId });\n\t\treturn { type: \"document\", documentUrn: PicapicaUrn.stringify(parsed), sessionUrn: session.urn, collectionUrn };\n\t}\n\n\treturn { type: \"error\", error: \"InvalidUrnType\" };\n}\n\ninterface ResultViewProps {\n\treadonly result: DeepReadonly<types.Result.AsObject>;\n\treadonly left: ResultResource;\n\treadonly right: ResultResource;\n}\n\nfunction ResultView({ result, left, right }: ResultViewProps): JSX.Element {\n\tconst [texts] = useResultText(result);\n\n\treturn (\n\t\t<>\n\t\t\t<ResultSummary result={result} />\n\t\t\t{texts?.map((text, i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ResultSeedView key={i} alignmentKey={`${i}:${result.urn}`} left={left} right={right} text={text} />\n\t\t\t\t);\n\t\t\t})}\n\t\t</>\n\t);\n}\n\ninterface ResultSummaryProps {\n\treadonly result: DeepReadonly<types.Result.AsObject>;\n}\nfunction ResultSummary({ result }: ResultSummaryProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst [texts] = useResultText(result);\n\n\tconst [alignments] = useAlignment(\n\t\t`${texts?.length}:${result.urn}`,\n\t\ttexts?.map(t => ({ left: t.a.text, right: t.b.text })) ?? []\n\t);\n\n\tlet sharedWords = 0;\n\tlet incomplete = texts === undefined;\n\tif (texts) {\n\t\tfor (const alignment of alignments) {\n\t\t\tsharedWords += alignment.diff?.sharedWords ?? 0;\n\t\t\tincomplete ||= alignment.diff === undefined;\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"ResultSummary\">\n\t\t\t<p className=\"summary\">{l.reusedPassages(result.seedsList.length)}</p>\n\t\t\t<p className=\"details\">{l.detailed(result.seedsList.length, sharedWords, incomplete)}</p>\n\t\t</div>\n\t);\n}\n\ninterface ResultSeedViewProps {\n\treadonly left: ResultResource;\n\treadonly right: ResultResource;\n\treadonly text: SeedText;\n\treadonly alignmentKey: string;\n}\nfunction ResultSeedView({ left, right, text, alignmentKey }: ResultSeedViewProps): JSX.Element {\n\treturn (\n\t\t<div className=\"ResultSeedView\">\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"left\">\n\t\t\t\t\t<ResultLabel resource={left} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right\">\n\t\t\t\t\t<ResultLabel resource={right} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"alignment\">\n\t\t\t\t<AlignmentView alignmentKey={alignmentKey} left={text.a.text} right={text.b.text} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\ninterface ResultLabelProps {\n\tresource: ResultResource;\n}\nfunction ResultLabel({ resource }: ResultLabelProps): JSX.Element {\n\treturn (\n\t\t<span className=\"ResultLabel\">\n\t\t\t{resource.type === \"item\" ? (\n\t\t\t\t<ItemResultLabel resource={resource} />\n\t\t\t) : (\n\t\t\t\t<DocumentResultLabel resource={resource} />\n\t\t\t)}\n\t\t</span>\n\t);\n}\nfunction ItemResultLabel({ resource }: { resource: ResultResourceSessionItem }): JSX.Element {\n\tconst { item } = resource;\n\n\treturn (\n\t\t<CenterAlignTwo\n\t\t\tclassName=\"ItemResultLabel\"\n\t\t\tgrow=\"right\"\n\t\t\tleft={<ItemTypeIcon type={item.resource?.type ?? types.Item.Resource.Type.TYPE_UNSPECIFIED} />}\n\t\t\tright={<span className=\"text\">{item.meta?.name ?? \"\"}</span>}\n\t\t/>\n\t);\n}\nfunction DocumentResultLabel({ resource }: { resource: ResultResourceCollectionDocument }): JSX.Element {\n\tconst { documentUrn, sessionUrn } = resource;\n\n\tconst document = useCollectionDocument(sessionUrn, documentUrn);\n\n\treturn (\n\t\t<span className=\"DocumentResultLabel\">\n\t\t\t<span className=\"text\">{document?.properties?.title ?? \"\"}</span>\n\t\t</span>\n\t);\n}\n\nconst locales: Locales<\n\tSimpleString<\"invalidUrn\" | `resultError${ResultResourceError[\"error\"]}`> & {\n\t\tfailedResult: (status: types.Result.ResultStatusCode) => JSX.Element;\n\t\treusedPassages: (reused: number) => JSX.Element;\n\t\tdetailed: (reused: number, sharedWords: number, incomplete: boolean) => JSX.Element;\n\t}\n> = {\n\ten: {\n\t\tinvalidUrn: \"Invalid link. The result you are trying to access is not available.\",\n\t\tfailedResult(status) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<p>Picapica was unable to calculate this result due to a server error.</p>\n\t\t\t\t\t<p>Status code: {status}</p>\n\t\t\t\t</>\n\t\t\t);\n\t\t},\n\n\t\tresultErrorInvalidUrnType:\n\t\t\t\"Invalid URN type in result. This is a problem with Picapica itself. Please report this bug.\",\n\t\tresultErrorUnknownItem:\n\t\t\t\"Invalid item in result. The item has likely been deleted which means that this result can no longer be viewed.\",\n\n\t\treusedPassages(reused) {\n\t\t\tif (reused === 1) {\n\t\t\t\treturn <>Found 1 reused passage.</>;\n\t\t\t}\n\t\t\treturn <>Found {reused} reused passages.</>;\n\t\t},\n\t\tdetailed(reused, sharedWords, incomplete) {\n\t\t\tconst details: string[] = [];\n\n\t\t\tdetails.push(reused === 1 ? `1 reused passage` : `${reused} reused passages`);\n\n\t\t\tconst atLeast = incomplete ? \">\" : \"\";\n\t\t\tdetails.push(sharedWords === 1 ? `${atLeast}1 shared word` : `${atLeast}${sharedWords} shared words`);\n\n\t\t\treturn <>Detailed comparison of your submitted document: {details.join(\", \")}</>;\n\t\t},\n\t},\n\tde: {\n\t\tinvalidUrn: \"Falscher Link. Das Ergebnis ist nicht verfügbar.\",\n\t\tfailedResult(status) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<p>Picapica konnte dieses Ergebnis nicht berechnen wegen eines Serverproblems.</p>\n\t\t\t\t\t<p>Statuscode: {status}</p>\n\t\t\t\t</>\n\t\t\t);\n\t\t},\n\n\t\tresultErrorInvalidUrnType:\n\t\t\t\"Flascher URN-Type im Ergebnis. Dies ist ein Problem in der Picapica Software. Bitte melden Sie diesen Fehler.\",\n\t\tresultErrorUnknownItem:\n\t\t\t\"Invalid item in result. The item has likely been deleted which means that this result can no longer be viewed.\",\n\n\t\treusedPassages(reused) {\n\t\t\tif (reused === 1) {\n\t\t\t\treturn <>1 wiederverwendete Passage gefunden.</>;\n\t\t\t}\n\t\t\treturn <>{reused} wiederverwendete Passagen gefunden.</>;\n\t\t},\n\t\tdetailed(reused, sharedWords, incomplete) {\n\t\t\tconst details: string[] = [];\n\n\t\t\tdetails.push(reused === 1 ? `1 wiederverwendete Passage` : `${reused} wiederverwendete Passagen`);\n\n\t\t\tconst atLeast = incomplete ? \">\" : \"\";\n\t\t\tdetails.push(\n\t\t\t\tsharedWords === 1 ? `${atLeast}1 gemeinsames Wort` : `${atLeast}${sharedWords} gemeinsame Wörter`\n\t\t\t);\n\n\t\t\treturn <>Detailierter Vergleich Ihres eingereichten Dokuments: {details.join(\", \")}</>;\n\t\t},\n\t},\n};\n"],"names":["AlignmentView","memo","props","alignments","useAlignment","diff","className","key","left","index","total","right","style","gridRow","DiffView","equal","changed","type","changedClass","test","text","isFirst","context","tokens","tokenizeWords","rest","splitRest","position","words","start","end","length","i","fadeLength","chars","fade","c","opacity","l","useLocalization","locales","en","omitted","de","CenterAlignTwo","grow","knownCollections","core_fulltext_languagenameenglish","title","EMPTY_OBJ","Label","kind","SubmittedFilesLabel","icon","CollectionLabel","urn","PicapicaUrn","collection","urnString","parsed","processProps","known","useCollectionLocalization","name","description","submittedFiles","unknown","LoaderAnimation","id","categorizeResults","results","categories","items","collections","invalid","addDocument","collectionUrn","collectionId","document","list","a","result","b","Badge","OverviewContainer","backTo","Buttons","to","ResultsOverview","session","console","running","Session","sessionUrn","collectionTo","usePreloadCollectionDocuments","r","ItemResultsOverview","itemNameMap","Map","item","leftName","rightName","resultTo","CollectionResultsOverview","itemName","documentName","useCollectionDocument","back","analysisResults","matches","noResults","unknownItem","randomValues","values","count","Math","copy","j","array","x","shuffle","LRUCache","_map","constructor","size","this","_length","_head","CacheNode","_tail","next","prev","add","addAll","map","keys","Object","toRemove","remove","node","insertBefore","get","insertAfter","defaultValue","contains","Boolean","_removeNode","obj","afterNode","beforeNode","pendingResolvesCounter","pendingResolves","getWorker","lazy","worker","Worker","URL","data","resolve","promiseCache","resultCache","getCacheKey","promise","Promise","requestsKey","useState","state","GetInitialAlignments","useEffect","setRequestsKey","setState","async","newState","alignment","getCachedSimpleCombinedDiff","getSimpleCombinedDiff","requests","fetchDocument","req","getSessionClient","resp","queryKey","queryFn","refetchInterval","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","options","getQueryOptions","useQuery","useQueries","documentUrns","useResultText","query","span1","resourceUrn","span","getSpanData","client","resultUrn","sessionId","texts","s","getSeedTexts","Head","dynamicComponent","useLoadSession","header","onReady","toResults","view","getLocationSearchParams","undefined","ResultValidity","pageUrn","types","debugAssert","getResultResource","Error","error","documentUrn","ResultView","alignmentKey","ResultSummary","t","sharedWords","incomplete","ResultSeedView","resource","ResultLabel","ItemResultLabel","DocumentResultLabel","invalidUrn","failedResult","status","resultErrorInvalidUrnType","resultErrorUnknownItem","reusedPassages","reused","detailed","details","atLeast"],"sourceRoot":""}