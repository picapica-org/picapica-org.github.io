{"version":3,"file":"component---src-pages-results-tsx-3aad9a42786afd64357d.js","mappings":"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","sources":["webpack://picapica-web-client/./src/elements/center-align-two.tsx","webpack://picapica-web-client/./src/lib/use-collection-localization.ts","webpack://picapica-web-client/./src/elements/labels.tsx","webpack://picapica-web-client/./src/elements/loader-animation.tsx","webpack://picapica-web-client/./src/lib/session/result-categories.ts","webpack://picapica-web-client/./src/elements/badge.tsx","webpack://picapica-web-client/./src/elements/results-overview.tsx","webpack://picapica-web-client/./src/elements/group.tsx","webpack://picapica-web-client/./src/elements/step-selector.tsx","webpack://picapica-web-client/./src/lib/session/util.ts","webpack://picapica-web-client/./src/lib/use-collection-document.ts","webpack://picapica-web-client/./src/lib/use-collections.ts","webpack://picapica-web-client/./src/lib/last-compute.ts","webpack://picapica-web-client/./src/lib/use-compute-results.ts","webpack://picapica-web-client/./src/pages/results.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./center-align-two.scss\";\n\nexport interface CenterAlignTwoProps {\n\treadonly className?: string;\n\treadonly grow: \"left\" | \"right\";\n\treadonly left: React.ReactNode;\n\treadonly right: React.ReactNode;\n}\n\nexport function CenterAlignTwo({ className, grow, left, right }: CenterAlignTwoProps): JSX.Element {\n\treturn (\n\t\t<div className={\"CenterAlignTwo\" + (className ? \" \" + className : \"\")}>\n\t\t\t<div className={`left${grow === \"left\" ? \" grow\" : \"\"}`}>{left}</div>\n\t\t\t<div className={`right${grow === \"right\" ? \" grow\" : \"\"}`}>{right}</div>\n\t\t</div>\n\t);\n}\n","import { Locales } from \"./localization\";\nimport { PicapicaUrn } from \"./session/urn\";\nimport { useLocalization } from \"./use-localization\";\n\nexport interface CollectionLocalization {\n\treadonly title: string;\n}\n\ntype KnownCollections = \"core_fulltext_languagenameenglish\";\n\nconst knownCollections: Locales<Record<KnownCollections, CollectionLocalization>> = {\n\ten: {\n\t\tcore_fulltext_languagenameenglish: {\n\t\t\ttitle: \"CORE - The world's largest collection of open-access research papers\",\n\t\t},\n\t},\n\tde: {\n\t\tcore_fulltext_languagenameenglish: {\n\t\t\ttitle: \"CORE - The world's largest collection of open-access research papers\",\n\t\t},\n\t},\n};\n\nconst EMPTY_OBJ = {};\n\nexport function useCollectionLocalization(\n\turn: PicapicaUrn | string | undefined | null\n): Partial<CollectionLocalization> {\n\tconst l: Readonly<Record<string, CollectionLocalization | undefined>> = useLocalization(knownCollections);\n\n\tconst parsed = typeof urn === \"string\" ? PicapicaUrn.tryParse(urn) : urn;\n\tif (parsed && parsed.type === \"collection\") {\n\t\tconst known = l[parsed.collectionId];\n\t\tif (known) {\n\t\t\treturn known;\n\t\t}\n\t}\n\n\treturn EMPTY_OBJ;\n}\n","import React from \"react\";\nimport { Collection } from \"../lib/generated/v1/types_pb\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { PicapicaCollectionUrn, PicapicaUrn, Urn } from \"../lib/session/urn\";\nimport { useCollectionLocalization } from \"../lib/use-collection-localization\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { DeepReadonly } from \"../lib/util\";\nimport { PicaIcon, PicaIconKind } from \"./icon\";\nimport \"./labels.scss\";\n\nexport interface LabelProps {\n\treadonly icon?: PicaIconKind;\n\treadonly text: string;\n}\n\nexport function Label(props: LabelProps): JSX.Element {\n\treturn (\n\t\t<span className=\"Label\">\n\t\t\t{props.icon && <PicaIcon kind={props.icon} />}\n\t\t\t<span className=\"text\">{props.text}</span>\n\t\t</span>\n\t);\n}\n\nexport function SubmittedFilesLabel(): JSX.Element {\n\tconst l = useLocalization(locales);\n\treturn <Label icon=\"upload\" text={l.submittedFiles} />;\n}\n\nexport type CollectionProps =\n\t| {\n\t\t\treadonly collectionUrn: string | PicapicaCollectionUrn;\n\t\t\treadonly collections?: DeepReadonly<Collection.AsObject[]>;\n\t  }\n\t| {\n\t\t\treadonly collection: DeepReadonly<Collection.AsObject>;\n\t  };\n\nexport function CollectionLabel(props: CollectionProps): JSX.Element {\n\tconst { urn, collection } = processProps(props);\n\tconst { title } = useCollectionLocalization(urn);\n\n\tif (title) {\n\t\treturn <Label text={title} />;\n\t} else if (collection?.properties) {\n\t\treturn <Label text={`${collection.properties.name} - ${collection.properties.description}`} />;\n\t} else {\n\t\treturn <UnknownCollectionLabel />;\n\t}\n}\ninterface ProcessedProps {\n\turn: PicapicaCollectionUrn | undefined;\n\tcollection: DeepReadonly<Collection.AsObject> | undefined;\n}\nfunction processProps(props: CollectionProps): ProcessedProps {\n\tif (\"collection\" in props) {\n\t\treturn {\n\t\t\turn: PicapicaUrn.parse(props.collection.urn as Urn<\"collection\">),\n\t\t\tcollection: props.collection,\n\t\t};\n\t} else {\n\t\tlet urn: PicapicaCollectionUrn;\n\t\tlet urnString: string;\n\t\tif (typeof props.collectionUrn === \"string\") {\n\t\t\tconst parsed = PicapicaUrn.tryParse(props.collectionUrn);\n\t\t\tif (!parsed || parsed.type !== \"collection\") {\n\t\t\t\treturn { urn: undefined, collection: undefined };\n\t\t\t}\n\t\t\turn = parsed;\n\t\t\turnString = props.collectionUrn;\n\t\t} else {\n\t\t\turn = props.collectionUrn;\n\t\t\turnString = PicapicaUrn.stringify(urn);\n\t\t}\n\n\t\tconst collection = props.collections?.find(c => c.urn === urnString);\n\n\t\treturn { urn, collection };\n\t}\n}\n\nfunction UnknownCollectionLabel(): JSX.Element {\n\tconst l = useLocalization(locales);\n\treturn <Label text={l.unknown} />;\n}\n\nconst locales: Locales<SimpleString<\"submittedFiles\" | \"unknown\">> = {\n\ten: {\n\t\tsubmittedFiles: \"Your submitted files\",\n\t\tunknown: \"Unknown\",\n\t},\n\tde: {\n\t\tsubmittedFiles: \"Ihre eingereichten Dateien\",\n\t\tunknown: \"Unbekannt\",\n\t},\n};\n","import React from \"react\";\nimport { Icon } from \"./icon\";\nimport \"./loader-animation.scss\";\n\nexport interface LoaderAnimationProps {\n\treadonly id?: string;\n}\n\nexport function LoaderAnimation({ id }: LoaderAnimationProps): JSX.Element {\n\treturn (\n\t\t<span className=\"LoaderAnimation\" id={id}>\n\t\t\t{\" \"}\n\t\t\t<Icon kind=\"loader-5-line\" />\n\t\t\t<Icon kind=\"loader-5-line\" />\n\t\t</span>\n\t);\n}\n","import { Result } from \"../generated/v1/types_pb\";\nimport { DeepReadonly } from \"../util\";\nimport { PicapicaDocumentUrn, PicapicaItemUrn, PicapicaUrn, Urn } from \"./urn\";\n\nexport interface ItemResult {\n\treadonly a: PicapicaItemUrn;\n\treadonly b: PicapicaItemUrn;\n\treadonly result: DeepReadonly<Result.AsObject>;\n}\nexport interface CollectionResult {\n\treadonly item: PicapicaItemUrn;\n\treadonly document: PicapicaDocumentUrn;\n\treadonly result: DeepReadonly<Result.AsObject>;\n}\n\nexport interface ResultCategories {\n\t/**\n\t * A list of all results between items.\n\t */\n\titems: ItemResult[];\n\t/**\n\t * A map from a collections URN to a non-empty list of results between an item and a document from key collection.\n\t */\n\tcollections: Map<Urn<\"collection\">, CollectionResult[]>;\n\t/**\n\t * A list of results that are invalid by not having valid URNs.\n\t */\n\tinvalid: DeepReadonly<Result.AsObject>[];\n}\n\nexport function categorizeResults(results: Iterable<DeepReadonly<Result.AsObject>>): ResultCategories {\n\tconst categories: ResultCategories = { items: [], collections: new Map(), invalid: [] };\n\n\tfunction addDocument(\n\t\titem: PicapicaItemUrn,\n\t\tdocument: PicapicaDocumentUrn,\n\t\tresult: DeepReadonly<Result.AsObject>\n\t): void {\n\t\tconst collectionUrn = PicapicaUrn.stringify({ type: \"collection\", collectionId: document.collectionId });\n\n\t\tlet list = categories.collections.get(collectionUrn);\n\t\tif (list === undefined) {\n\t\t\tlist = [];\n\t\t\tcategories.collections.set(collectionUrn, list);\n\t\t}\n\t\tlist.push({ item, document, result });\n\t}\n\n\tfor (const result of results) {\n\t\tconst a = PicapicaUrn.tryParse(result.resources?.urnA ?? \"\");\n\t\tconst b = PicapicaUrn.tryParse(result.resources?.urnB ?? \"\");\n\n\t\tif (!a || !b) {\n\t\t\tcategories.invalid.push(result);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (a.type === \"item\" && b.type === \"item\") {\n\t\t\tcategories.items.push({ a, b, result });\n\t\t} else if (a.type === \"item\" && b.type === \"document\") {\n\t\t\taddDocument(a, b, result);\n\t\t} else if (a.type === \"document\" && b.type === \"item\") {\n\t\t\taddDocument(b, a, result);\n\t\t} else {\n\t\t\tcategories.invalid.push(result);\n\t\t}\n\t}\n\n\treturn categories;\n}\n","import React from \"react\";\nimport \"./badge.scss\";\n\nexport type BadgeKind = \"Dark\" | \"Light\";\n\nexport interface BadgeProps {\n\treadonly kind: BadgeKind;\n}\n\nexport function Badge({ kind, children }: React.PropsWithChildren<BadgeProps>): JSX.Element {\n\treturn <span className={`Badge ${kind}`}>{children}</span>;\n}\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { Session } from \"../lib/generated/v1/services_pb\";\nimport { Collection, Result } from \"../lib/generated/v1/types_pb\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { categorizeResults, CollectionResult } from \"../lib/session/result-categories\";\nimport { PicapicaUrn, Urn } from \"../lib/session/urn\";\nimport { useCollectionDocument, usePreloadCollectionDocuments } from \"../lib/use-collection-document\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { DeepReadonly } from \"../lib/util\";\nimport { Badge } from \"./badge\";\nimport { Buttons } from \"./buttons\";\nimport { CenterAlignTwo } from \"./center-align-two\";\nimport { PicaIcon } from \"./icon\";\nimport { CollectionLabel, Label, SubmittedFilesLabel } from \"./labels\";\nimport { LoaderAnimation } from \"./loader-animation\";\nimport \"./results-overview.scss\";\n\nexport interface OverviewContainerProps {\n\treadonly backTo?: string;\n\treadonly title: React.ReactNode;\n}\n\nexport function OverviewContainer({\n\tbackTo,\n\ttitle,\n\tchildren,\n}: React.PropsWithChildren<OverviewContainerProps>): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\treturn (\n\t\t<div className=\"OverviewContainer\">\n\t\t\t<div className=\"head\">\n\t\t\t\t{backTo && (\n\t\t\t\t\t<Link className={Buttons.BUTTON} to={backTo} title={l.back}>\n\t\t\t\t\t\t<PicaIcon kind=\"back\" />\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t\t<div>{title}</div>\n\t\t\t</div>\n\t\t\t<div className=\"content\">{children}</div>\n\t\t</div>\n\t);\n}\n\nexport interface ResultsOverviewProps {\n\treadonly session: DeepReadonly<Session.AsObject>;\n\treadonly collections?: DeepReadonly<Collection.AsObject[]>;\n\treadonly backTo: string;\n\treadonly itemTo: string;\n\treadonly collectionTo: (collectionUrn: string) => string;\n}\n\nexport function ResultsOverview({\n\tsession,\n\tcollections,\n\tbackTo,\n\titemTo,\n\tcollectionTo,\n}: ResultsOverviewProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst categories = categorizeResults(session.resultsList);\n\n\tif (categories.invalid.length) {\n\t\tconsole.error(\"Not displaying the following results:\");\n\t\tconsole.error(categories.invalid);\n\t}\n\n\tconst title = (\n\t\t<CenterAlignTwo\n\t\t\tgrow=\"left\"\n\t\t\tleft={<Label icon=\"results\" text={l.analysisResults} />}\n\t\t\tright={<Badge kind=\"Dark\">{l.results}</Badge>}\n\t\t/>\n\t);\n\n\tconst running = session.status === Session.ComputeStatus.STATUS_RUNNING;\n\n\treturn (\n\t\t<div className=\"ResultsOverview\">\n\t\t\t<OverviewContainer backTo={backTo} title={title}>\n\t\t\t\t<div>\n\t\t\t\t\t<Link className={Buttons.BUTTON} to={itemTo}>\n\t\t\t\t\t\t<CenterAlignTwo\n\t\t\t\t\t\t\tgrow=\"left\"\n\t\t\t\t\t\t\tleft={<SubmittedFilesLabel />}\n\t\t\t\t\t\t\tright={\n\t\t\t\t\t\t\t\t<Badge kind=\"Light\">\n\t\t\t\t\t\t\t\t\t{running && <LoaderAnimation />}\n\t\t\t\t\t\t\t\t\t{categories.items.length}\n\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t{[...categories.collections].map(([urn, results]) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={urn}>\n\t\t\t\t\t\t\t<PreloadDocument sessionUrn={session.urn} results={results} />\n\t\t\t\t\t\t\t<Link className={Buttons.BUTTON} to={collectionTo(urn)}>\n\t\t\t\t\t\t\t\t<CenterAlignTwo\n\t\t\t\t\t\t\t\t\tgrow=\"left\"\n\t\t\t\t\t\t\t\t\tleft={<CollectionLabel collectionUrn={urn} collections={collections} />}\n\t\t\t\t\t\t\t\t\tright={<Badge kind=\"Light\">{results.length}</Badge>}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</OverviewContainer>\n\t\t</div>\n\t);\n}\n\nfunction PreloadDocument({ sessionUrn, results }: { sessionUrn: string; results: CollectionResult[] }): JSX.Element {\n\tusePreloadCollectionDocuments(\n\t\tsessionUrn,\n\t\tresults.map(r => PicapicaUrn.stringify(r.document))\n\t);\n\treturn <></>;\n}\n\nexport interface ItemResultsOverviewProps {\n\treadonly session: DeepReadonly<Session.AsObject>;\n\treadonly backTo: string;\n\treadonly resultTo: (result: DeepReadonly<Result.AsObject>) => string;\n}\n\nexport function ItemResultsOverview({ session, backTo, resultTo }: ItemResultsOverviewProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst { items } = categorizeResults(session.resultsList);\n\n\tconst title = (\n\t\t<CenterAlignTwo grow=\"left\" left={<SubmittedFilesLabel />} right={<Badge kind=\"Dark\">{l.matches}</Badge>} />\n\t);\n\n\tconst itemNameMap = new Map(session.itemsList.map(item => [item.urn, item.meta?.name]));\n\n\treturn (\n\t\t<div className=\"ItemResultsOverview\">\n\t\t\t<OverviewContainer backTo={backTo} title={title}>\n\t\t\t\t{items.map(({ result }) => {\n\t\t\t\t\tconst leftName = itemNameMap.get(result.resources?.urnA ?? \"\") ?? l.unknownItem;\n\t\t\t\t\tconst rightName = itemNameMap.get(result.resources?.urnB ?? \"\") ?? l.unknownItem;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={result.urn}>\n\t\t\t\t\t\t\t<Link className={Buttons.BUTTON} to={resultTo(result)}>\n\t\t\t\t\t\t\t\t<CenterAlignTwo\n\t\t\t\t\t\t\t\t\tgrow=\"left\"\n\t\t\t\t\t\t\t\t\tleft={\n\t\t\t\t\t\t\t\t\t\t<span className=\"item-vs\">\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"left\">{leftName}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"vs\">vs.</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"right\">{rightName}</span>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tright={\n\t\t\t\t\t\t\t\t\t\tsession.status === Session.ComputeStatus.STATUS_COMPLETED ? (\n\t\t\t\t\t\t\t\t\t\t\t<Badge kind=\"Light\">{result.seedsList.length}</Badge>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<LoaderAnimation />\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\n\t\t\t\t{items.length === 0 && <div className=\"no-results\">{l.noResults}</div>}\n\t\t\t</OverviewContainer>\n\t\t</div>\n\t);\n}\n\nexport interface CollectionResultsOverviewProps {\n\treadonly collectionUrn: string;\n\treadonly session: DeepReadonly<Session.AsObject>;\n\treadonly collections?: DeepReadonly<Collection.AsObject[]>;\n\treadonly backTo: string;\n\treadonly resultTo: (result: DeepReadonly<Result.AsObject>) => string;\n}\n\nexport function CollectionResultsOverview({\n\tsession,\n\tcollectionUrn,\n\tcollections,\n\tbackTo,\n\tresultTo,\n}: CollectionResultsOverviewProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst results = categorizeResults(session.resultsList).collections.get(collectionUrn as Urn<\"collection\">) ?? [];\n\n\tconst title = (\n\t\t<CenterAlignTwo\n\t\t\tgrow=\"left\"\n\t\t\tleft={<CollectionLabel collectionUrn={collectionUrn} collections={collections} />}\n\t\t\tright={<Badge kind=\"Dark\">{l.matches}</Badge>}\n\t\t/>\n\t);\n\n\tconst itemNameMap = new Map(session.itemsList.map(item => [item.urn, item.meta?.name]));\n\n\treturn (\n\t\t<div className=\"CollectionResultsOverview\">\n\t\t\t<OverviewContainer backTo={backTo} title={title}>\n\t\t\t\t{results.map(({ item, document, result }) => {\n\t\t\t\t\tconst itemName = itemNameMap.get(PicapicaUrn.stringify(item)) ?? l.unknownItem;\n\t\t\t\t\tconst documentName = (\n\t\t\t\t\t\t<DocumentName sessionUrn={session.urn} urn={PicapicaUrn.stringify(document)} />\n\t\t\t\t\t);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={result.urn}>\n\t\t\t\t\t\t\t<Link className={Buttons.BUTTON} to={resultTo(result)}>\n\t\t\t\t\t\t\t\t<CenterAlignTwo\n\t\t\t\t\t\t\t\t\tgrow=\"left\"\n\t\t\t\t\t\t\t\t\tleft={\n\t\t\t\t\t\t\t\t\t\t<span className=\"item-vs\">\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"left\">{itemName}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"vs\">vs.</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"right\">{documentName}</span>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tright={\n\t\t\t\t\t\t\t\t\t\tsession.status === Session.ComputeStatus.STATUS_COMPLETED ? (\n\t\t\t\t\t\t\t\t\t\t\t<Badge kind=\"Light\">{result.seedsList.length}</Badge>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<LoaderAnimation />\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\n\t\t\t\t{results.length === 0 && <div className=\"no-results\">{l.noResults}</div>}\n\t\t\t</OverviewContainer>\n\t\t</div>\n\t);\n}\n\nfunction DocumentName({ sessionUrn, urn }: { sessionUrn: string; urn: Urn<\"document\"> }): JSX.Element {\n\tconst document = useCollectionDocument(sessionUrn, urn);\n\tif (document?.properties) {\n\t\treturn <>{document.properties?.title}</>;\n\t}\n\treturn <LoaderAnimation />;\n}\n\nconst locales: Locales<SimpleString<\"back\" | \"analysisResults\" | \"results\" | \"matches\" | \"noResults\" | \"unknownItem\">> =\n\t{\n\t\ten: {\n\t\t\tback: \"Back\",\n\n\t\t\tanalysisResults: \"Analysis results\",\n\t\t\tresults: \"Results\",\n\t\t\tmatches: \"Matches\",\n\t\t\tnoResults: \"No results\",\n\n\t\t\tunknownItem: \"<unknown>\",\n\t\t},\n\t\tde: {\n\t\t\tback: \"Zurück\",\n\n\t\t\tanalysisResults: \"Analyse\\xADergebnisse\",\n\t\t\tresults: \"Ergebnisse\",\n\t\t\tmatches: \"Treffer\",\n\t\t\tnoResults: \"Keine Ergebnisse\",\n\n\t\t\tunknownItem: \"<unbekannt>\",\n\t\t},\n\t};\n","import React from \"react\";\nimport \"./group.scss\";\n\nexport interface GroupProps {\n\treadonly heading: React.ReactNode;\n}\n\nexport function Group({ heading, children }: React.PropsWithChildren<GroupProps>): JSX.Element {\n\treturn (\n\t\t<div className=\"Group\">\n\t\t\t<div className=\"group-heading\">{heading}</div>\n\t\t\t<div className=\"group-container\">{children}</div>\n\t\t</div>\n\t);\n}\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { toAnalysis, toResults, toSubmit } from \"../lib/page-links\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { assertNever } from \"../lib/util\";\nimport { Buttons } from \"./buttons\";\nimport { Group } from \"./group\";\nimport { PicaIcon, PicaIconKind } from \"./icon\";\nimport \"./step-selector.scss\";\n\nexport type StepKind = \"submit\" | \"analysis\" | \"checkout\" | \"results\";\n\nexport function getLinkToStep(step: StepKind, sessionUrn: string): string {\n\tswitch (step) {\n\t\tcase \"submit\":\n\t\t\treturn toSubmit({ urn: sessionUrn });\n\t\tcase \"analysis\":\n\t\t\treturn toAnalysis({ urn: sessionUrn });\n\t\tcase \"checkout\":\n\t\t\treturn \"/checkout/\";\n\t\tcase \"results\":\n\t\t\treturn toResults({ urn: sessionUrn });\n\t\tdefault:\n\t\t\tassertNever(step);\n\t}\n}\n\nconst STEPS = [\"submit\", \"analysis\", \"checkout\", \"results\"] as const;\n\nexport interface StepSelectorProps {\n\treadonly sessionUrn: string;\n\treadonly current: StepKind;\n\treadonly disableOthers?: boolean;\n}\n\nconst ICONS: Readonly<Record<StepKind, PicaIconKind>> = {\n\tsubmit: \"upload\",\n\tanalysis: \"analyse\",\n\tcheckout: \"checkout\",\n\tresults: \"results\",\n};\n\nconst ENABLE_CHECKOUT = false;\n\nexport function StepSelector({ current, sessionUrn, disableOthers }: StepSelectorProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\treturn (\n\t\t<span className={`StepSelector ${Buttons.BUTTON_GROUP}`}>\n\t\t\t{STEPS.filter(step => ENABLE_CHECKOUT || step !== \"checkout\").map(step => {\n\t\t\t\tconst title = l[step];\n\n\t\t\t\tconst disabled = disableOthers && step !== current;\n\t\t\t\tif (disabled) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span key={step} className={`${Buttons.BUTTON} ${Buttons.DISABLED}`} title={title}>\n\t\t\t\t\t\t\t<PicaIcon kind={ICONS[step]} />\n\t\t\t\t\t\t\t<span className=\"text\">{title}</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tkey={step}\n\t\t\t\t\t\tto={getLinkToStep(step, sessionUrn)}\n\t\t\t\t\t\tclassName={`${Buttons.BUTTON}${step === current ? \" \" + Buttons.ACTIVE : \"\"}`}\n\t\t\t\t\t\ttitle={title}>\n\t\t\t\t\t\t<PicaIcon kind={ICONS[step]} />\n\t\t\t\t\t\t<span className=\"text\">{title}</span>\n\t\t\t\t\t</Link>\n\t\t\t\t);\n\t\t\t})}\n\t\t</span>\n\t);\n}\n\nexport function StepSelectorGroup({\n\tcurrent,\n\tsessionUrn,\n\tdisableOthers,\n\tchildren,\n}: React.PropsWithChildren<StepSelectorProps>): JSX.Element {\n\treturn (\n\t\t<div className=\"StepSelectorGroup\">\n\t\t\t<Group\n\t\t\t\theading={\n\t\t\t\t\t<div className=\"heading-wrapper\">\n\t\t\t\t\t\t<StepSelector current={current} sessionUrn={sessionUrn} disableOthers={disableOthers} />\n\t\t\t\t\t</div>\n\t\t\t\t}>\n\t\t\t\t{children}\n\t\t\t</Group>\n\t\t</div>\n\t);\n}\n\nconst locales: Locales<SimpleString<StepKind>> = {\n\ten: {\n\t\tsubmit: \"Upload\",\n\t\tanalysis: \"Analysis\",\n\t\tcheckout: \"Checkout\",\n\t\tresults: \"Results\",\n\t},\n\tde: {\n\t\tsubmit: \"Hochladen\",\n\t\tanalysis: \"Analyse\",\n\t\tcheckout: \"Kasse\",\n\t\tresults: \"Ergebnisse\",\n\t},\n};\n","import { Session } from \"../generated/v1/services_pb\";\nimport { Item, Timestamp } from \"../generated/v1/types_pb\";\nimport { DeepReadonly } from \"../util\";\n\nexport function cloneSession(session: DeepReadonly<Session.AsObject>): Session.AsObject {\n\treturn JSON.parse(JSON.stringify(session));\n}\n\nexport function createTimestamp(): Timestamp.AsObject {\n\tconst ms = Date.now();\n\treturn {\n\t\tseconds: Math.floor(ms / 1000),\n\t\tnanos: (ms % 1000) * 1000_0000,\n\t};\n}\n\nexport function compareTimestamps(a: Timestamp.AsObject, b: Timestamp.AsObject): number {\n\tif (a.seconds === b.seconds) return a.nanos - b.nanos;\n\treturn a.seconds - b.seconds;\n}\n\nexport function sortSessionItems(items: readonly DeepReadonly<Item.AsObject>[]): DeepReadonly<Item.AsObject>[] {\n\treturn [...items].sort((a, b) => {\n\t\tconst aCreated = a.createdAt;\n\t\tconst bCreated = b.createdAt;\n\n\t\tif (!aCreated && !bCreated) return 0;\n\t\tif (!aCreated) return -1; // a < b\n\t\tif (!bCreated) return +1; // b < a\n\n\t\treturn compareTimestamps(aCreated, bCreated) || a.urn.localeCompare(b.urn);\n\t});\n}\n","import { QueryFunctionContext, useQueries, useQuery, UseQueryOptions } from \"react-query\";\nimport { GetDocumentRequest } from \"./generated/v1/services_pb\";\nimport { Document } from \"./generated/v1/types_pb\";\nimport { getSessionClient } from \"./session/client\";\nimport { Urn } from \"./session/urn\";\nimport { DeepReadonly } from \"./util\";\n\ntype QueryData = Document.AsObject | undefined;\ntype QueryKey = readonly [\"collection-document\", string, Urn<\"document\">];\n\nasync function fetchDocument(context: QueryFunctionContext<QueryKey>): Promise<QueryData> {\n\tconst [, sessionUrn, documentUrn] = context.queryKey;\n\n\tconst req = new GetDocumentRequest();\n\treq.setSessionUrn(sessionUrn);\n\treq.setDocumentUrn(documentUrn);\n\n\tconst resp = await getSessionClient().getDocument(req, null);\n\treturn resp.toObject().document;\n}\nfunction getQueryOptions(\n\tsessionUrn: string,\n\tdocumentUrn: Urn<\"document\">\n\t// eslint-disable-next-line @typescript-eslint/ban-types\n): UseQueryOptions<QueryData, unknown, QueryData, QueryKey> & { queryKey: {} } {\n\treturn {\n\t\tqueryKey: [\"collection-document\", sessionUrn, documentUrn],\n\t\tqueryFn: fetchDocument,\n\t\t// collections are an immutable resource, so we don't need to refetch\n\t\trefetchInterval: false,\n\t\trefetchOnMount: false,\n\t\trefetchOnReconnect: false,\n\t\trefetchOnWindowFocus: false,\n\t};\n}\n\nexport function useCollectionDocument(\n\tsessionUrn: string,\n\tdocumentUrn: Urn<\"document\">\n): DeepReadonly<Document.AsObject> | undefined {\n\tconst options = getQueryOptions(sessionUrn, documentUrn);\n\tconst query = useQuery(options.queryKey, options);\n\treturn query.data;\n}\n\nexport function usePreloadCollectionDocuments(sessionUrn: string, documentUrns: readonly Urn<\"document\">[]): void {\n\tuseQueries(documentUrns.map(urn => getQueryOptions(sessionUrn, urn)));\n}\n","import { useQuery } from \"react-query\";\nimport { GetCollectionsRequest } from \"./generated/v1/services_pb\";\nimport { Collection } from \"./generated/v1/types_pb\";\nimport { getSessionClient } from \"./session/client\";\nimport { DeepReadonly } from \"./util\";\n\nexport function useCollections(sessionUrn: string): [collections: DeepReadonly<Collection.AsObject[]> | undefined] {\n\tconst query = useQuery([\"collections\", sessionUrn] as const, {\n\t\t// collections are an immutable resource, so we don't need to refetch\n\t\trefetchInterval: false,\n\t\trefetchOnMount: false,\n\t\trefetchOnReconnect: false,\n\t\trefetchOnWindowFocus: false,\n\n\t\tqueryFn: async () => {\n\t\t\tconst req = new GetCollectionsRequest();\n\t\t\treq.setSessionUrn(sessionUrn);\n\n\t\t\tconst resp = await getSessionClient().getCollections(req, null);\n\t\t\treturn resp.toObject().collectionsList;\n\t\t},\n\t});\n\n\treturn [query.data];\n}\n","import { Session } from \"./generated/v1/services_pb\";\nimport { StorageCache } from \"./storage-cache\";\nimport { DeepReadonly } from \"./util\";\n\ninterface CacheItem {\n\treadonly id: string;\n\treadonly when: number;\n}\nconst lastComputeCache = new StorageCache<string, CacheItem>(\"last-compute-cache\");\n\nfunction getComputeIdentity(session: DeepReadonly<Session.AsObject>): string {\n\treturn JSON.stringify(session.config ?? {});\n}\n\nexport function getLastCompute(session: DeepReadonly<Session.AsObject>): Date | undefined {\n\tconst currentId = getComputeIdentity(session);\n\n\tconst last = lastComputeCache.get(session.urn);\n\tif (last?.id === currentId) {\n\t\treturn new Date(last.when);\n\t}\n\treturn undefined;\n}\n\nexport function setLastCompute(session: DeepReadonly<Session.AsObject>): void {\n\tlastComputeCache.set(session.urn, {\n\t\tid: getComputeIdentity(session),\n\t\twhen: Date.now(),\n\t});\n}\n","import { useState } from \"react\";\nimport { ComputeResultsRequest, Session } from \"./generated/v1/services_pb\";\nimport { getLastCompute, setLastCompute } from \"./last-compute\";\nimport { useAsyncEffect } from \"./react-util\";\nimport { getSessionClient } from \"./session/client\";\nimport { SessionMutator } from \"./session/mutator\";\nimport { cloneSession } from \"./session/util\";\nimport { State, UseSessionArray } from \"./use-session\";\nimport { delay, noop } from \"./util\";\n\nconst mutator: SessionMutator = session => {\n\tif (session.status === Session.ComputeStatus.STATUS_UNDEFINED) {\n\t\t// we want to set the state to RUNNING as soon as possible to indicate progress.\n\t\tconst newSession = cloneSession(session);\n\t\tnewSession.status = Session.ComputeStatus.STATUS_RUNNING;\n\t\treturn newSession;\n\t}\n\n\treturn session;\n};\n\nexport function useComputerResults(state: State, update: UseSessionArray[1]): void {\n\tconst [retryCount, setRetryCount] = useState(0);\n\n\tuseAsyncEffect(\n\t\tasync token => {\n\t\t\tif (state.type !== \"Ready\") return;\n\n\t\t\tconst { session } = state;\n\t\t\tif (session.status === Session.ComputeStatus.STATUS_RUNNING) return;\n\t\t\tif (getLastCompute(session) !== undefined) return;\n\n\t\t\tif (retryCount > 0) {\n\t\t\t\t// wait some time and retry\n\t\t\t\tawait delay(3_000);\n\t\t\t\ttoken.checkCanceled();\n\t\t\t}\n\n\t\t\tconst req = new ComputeResultsRequest();\n\t\t\treq.setSessionUrn(session.urn);\n\n\t\t\tconsole.log(\"Compute results\");\n\t\t\tconst action = getSessionClient()\n\t\t\t\t.computeResults(req, null)\n\t\t\t\t.then(\n\t\t\t\t\t() => {\n\t\t\t\t\t\tsetLastCompute(session);\n\t\t\t\t\t\tsetRetryCount(0);\n\t\t\t\t\t},\n\t\t\t\t\te => {\n\t\t\t\t\t\tsetRetryCount(prev => prev + 1);\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\tupdate(action, mutator);\n\t\t},\n\t\tnoop,\n\t\tnoop,\n\t\t[state, update, retryCount, setRetryCount]\n\t);\n}\n","import React from \"react\";\nimport { Page } from \"../elements/page\";\nimport { CollectionResultsOverview, ItemResultsOverview, ResultsOverview } from \"../elements/results-overview\";\nimport { SessionState } from \"../elements/session-creating-loading\";\nimport { SharedHead } from \"../elements/shared-header\";\nimport { getLinkToStep } from \"../elements/step-selector\";\nimport { Session } from \"../lib/generated/v1/services_pb\";\nimport { Result } from \"../lib/generated/v1/types_pb\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { toResult, toResults } from \"../lib/page-links\";\nimport { dynamicComponent } from \"../lib/react-util\";\nimport { getLocationSearchParams } from \"../lib/url-params\";\nimport { useCollections } from \"../lib/use-collections\";\nimport { useComputerResults } from \"../lib/use-compute-results\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { getSessionUrn, Ready, useLoadSession } from \"../lib/use-session\";\nimport { DeepReadonly, visitType } from \"../lib/util\";\nimport \"./results.scss\";\n\nexport const Head = (): JSX.Element => (\n\t<>\n\t\t<title>Picapica</title>\n\t\t<meta name=\"robots\" content=\"noindex\"></meta>\n\t\t<SharedHead />\n\t</>\n);\n\nexport default dynamicComponent(Results);\n\nfunction Results(): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst [state, update] = useLoadSession();\n\n\t// request computation\n\tuseComputerResults(state, update);\n\n\t// display result\n\tconst [collections] = useCollections(getSessionUrn(state));\n\n\tconst view = getCurrentView();\n\tconst getLinkToResult = (result: DeepReadonly<Result.AsObject>): string => {\n\t\treturn toResult({ urn: result.urn, view: stringifyView(view) });\n\t};\n\n\tconst onReady = ({ session }: Ready): JSX.Element => {\n\t\tconst current: JSX.Element = visitType(view, {\n\t\t\toverview: () => (\n\t\t\t\t<ResultsOverview\n\t\t\t\t\tsession={session}\n\t\t\t\t\tcollections={collections}\n\t\t\t\t\tbackTo={getLinkToStep(\"analysis\", session.urn)}\n\t\t\t\t\titemTo={getLinkToView(session.urn, VIEW_ITEMS)}\n\t\t\t\t\tcollectionTo={collectionUrn => getLinkToView(session.urn, { type: \"collection\", collectionUrn })}\n\t\t\t\t/>\n\t\t\t),\n\t\t\titems: () => (\n\t\t\t\t<ItemResultsOverview\n\t\t\t\t\tsession={session}\n\t\t\t\t\tbackTo={getLinkToView(session.urn, VIEW_OVERVIEW)}\n\t\t\t\t\tresultTo={getLinkToResult}\n\t\t\t\t/>\n\t\t\t),\n\t\t\tcollection: ({ collectionUrn }) => (\n\t\t\t\t<CollectionResultsOverview\n\t\t\t\t\tcollectionUrn={collectionUrn}\n\t\t\t\t\tsession={session}\n\t\t\t\t\tcollections={collections}\n\t\t\t\t\tbackTo={getLinkToView(session.urn, VIEW_OVERVIEW)}\n\t\t\t\t\tresultTo={getLinkToResult}\n\t\t\t\t/>\n\t\t\t),\n\t\t});\n\n\t\tconst running = session.status === Session.ComputeStatus.STATUS_RUNNING;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{current}\n\n\t\t\t\t<p className=\"loading\" style={running ? {} : { opacity: 0, userSelect: \"none\" }}>\n\t\t\t\t\t{l.running}\n\t\t\t\t</p>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<Page className=\"Results\" title={l.title} header=\"small\">\n\t\t\t<SessionState state={state} onReady={onReady} />\n\t\t</Page>\n\t);\n}\n\ntype View =\n\t| { readonly type: \"overview\" }\n\t| { readonly type: \"items\" }\n\t| { readonly type: \"collection\"; readonly collectionUrn: string };\nconst VIEW_OVERVIEW: View = { type: \"overview\" };\nconst VIEW_ITEMS: View = { type: \"items\" };\n\nfunction parseView(view: string): View {\n\tif (view) {\n\t\tif (view === \"items\") {\n\t\t\treturn VIEW_ITEMS;\n\t\t}\n\n\t\tconst m = /^collection:([^]+)$/.exec(view);\n\t\tif (m) {\n\t\t\treturn { type: \"collection\", collectionUrn: m[1] };\n\t\t}\n\t}\n\n\treturn VIEW_OVERVIEW;\n}\nfunction stringifyView(view: View): string | undefined {\n\tif (view.type === \"items\") {\n\t\treturn \"items\";\n\t} else if (view.type === \"collection\") {\n\t\treturn `collection:${view.collectionUrn}`;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nfunction getCurrentView(): View {\n\tconst view = getLocationSearchParams().get(\"view\");\n\treturn view ? parseView(view) : VIEW_OVERVIEW;\n}\nfunction getLinkToView(sessionUrn: string, view: View): string {\n\treturn toResults({ urn: sessionUrn, view: stringifyView(view) });\n}\n\nconst locales: Locales<SimpleString<\"title\" | \"running\">> = {\n\ten: {\n\t\ttitle: \"Results - Picapica\",\n\n\t\trunning: \"Your submitted files are currently being processed. This might take a few seconds.\",\n\t},\n\tde: {\n\t\ttitle: \"Ergebnisse - Picapica\",\n\n\t\trunning: \"Ihre Eingabe wird bearbeitet. Dies kann ein paar Sekunden dauern.\",\n\t},\n};\n"],"names":["CenterAlignTwo","className","grow","knownCollections","en","core_fulltext_languagenameenglish","title","de","EMPTY_OBJ","Label","props","kind","SubmittedFilesLabel","l","useLocalization","icon","text","CollectionLabel","urn","PicapicaUrn","collection","urnString","parsed","c","processProps","known","useCollectionLocalization","name","description","locales","submittedFiles","unknown","LoaderAnimation","id","categorizeResults","results","categories","items","collections","invalid","addDocument","collectionUrn","type","collectionId","document","list","a","result","b","Badge","OverviewContainer","backTo","Buttons","to","ResultsOverview","session","console","left","right","running","Session","key","sessionUrn","collectionTo","usePreloadCollectionDocuments","r","ItemResultsOverview","itemNameMap","Map","item","leftName","rightName","resultTo","CollectionResultsOverview","itemName","documentName","useCollectionDocument","back","analysisResults","matches","noResults","unknownItem","Group","getLinkToStep","step","toSubmit","toAnalysis","toResults","assertNever","STEPS","ICONS","submit","analysis","checkout","StepSelector","disableOthers","StepSelectorGroup","heading","current","cloneSession","JSON","createTimestamp","ms","Date","seconds","Math","nanos","compareTimestamps","sortSessionItems","aCreated","bCreated","async","fetchDocument","context","req","getSessionClient","resp","queryKey","queryFn","refetchInterval","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","options","getQueryOptions","useQuery","useQueries","documentUrns","useCollections","lastComputeCache","getComputeIdentity","mutator","newSession","useComputerResults","state","retryCount","useState","useAsyncEffect","currentId","last","getLastCompute","delay","token","action","when","setLastCompute","setRetryCount","e","prev","update","Head","content","dynamicComponent","useLoadSession","getSessionUrn","view","getLocationSearchParams","VIEW_ITEMS","m","exec","VIEW_OVERVIEW","parseView","getCurrentView","getLinkToResult","toResult","stringifyView","header","onReady","visitType","overview","itemTo","getLinkToView","style","opacity","userSelect"],"sourceRoot":""}