{"version":3,"file":"component---src-pages-analysis-tsx-9676c47528b08f83ba74.js","mappings":"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","sources":["webpack://picapica-web-client/./src/lib/use-collection-localization.ts","webpack://picapica-web-client/./src/elements/labels.tsx","webpack://picapica-web-client/./src/elements/step-action-bar.tsx","webpack://picapica-web-client/./src/elements/step-buttons.tsx","webpack://picapica-web-client/./src/elements/group.tsx","webpack://picapica-web-client/./src/elements/step-selector.tsx","webpack://picapica-web-client/./src/lib/session/actions.ts","webpack://picapica-web-client/./src/lib/session/util.ts","webpack://picapica-web-client/./src/lib/use-collections.ts","webpack://picapica-web-client/./src/lib/session/analysis-config.ts","webpack://picapica-web-client/./src/pages/analysis.tsx"],"sourcesContent":["import { Locales } from \"./localization\";\nimport { PicapicaUrn } from \"./session/urn\";\nimport { useLocalization } from \"./use-localization\";\n\nexport interface CollectionLocalization {\n\treadonly title: string;\n}\n\ntype KnownCollections = \"core_fulltext_languagenameenglish\";\n\nconst knownCollections: Locales<Record<KnownCollections, CollectionLocalization>> = {\n\ten: {\n\t\tcore_fulltext_languagenameenglish: {\n\t\t\ttitle: \"CORE - The world's largest collection of open-access research papers\",\n\t\t},\n\t},\n\tde: {\n\t\tcore_fulltext_languagenameenglish: {\n\t\t\ttitle: \"CORE - The world's largest collection of open-access research papers\",\n\t\t},\n\t},\n};\n\nconst EMPTY_OBJ = {};\n\nexport function useCollectionLocalization(\n\turn: PicapicaUrn | string | undefined | null\n): Partial<CollectionLocalization> {\n\tconst l: Readonly<Record<string, CollectionLocalization | undefined>> = useLocalization(knownCollections);\n\n\tconst parsed = typeof urn === \"string\" ? PicapicaUrn.tryParse(urn) : urn;\n\tif (parsed && parsed.type === \"collection\") {\n\t\tconst known = l[parsed.collectionId];\n\t\tif (known) {\n\t\t\treturn known;\n\t\t}\n\t}\n\n\treturn EMPTY_OBJ;\n}\n","import React from \"react\";\nimport { Collection } from \"../lib/generated/v1/types_pb\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { PicapicaCollectionUrn, PicapicaUrn, Urn } from \"../lib/session/urn\";\nimport { useCollectionLocalization } from \"../lib/use-collection-localization\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { DeepReadonly } from \"../lib/util\";\nimport { PicaIcon, PicaIconKind } from \"./icon\";\nimport \"./labels.scss\";\n\nexport interface LabelProps {\n\treadonly icon?: PicaIconKind;\n\treadonly text: string;\n}\n\nexport function Label(props: LabelProps): JSX.Element {\n\treturn (\n\t\t<span className=\"Label\">\n\t\t\t{props.icon && <PicaIcon kind={props.icon} />}\n\t\t\t<span className=\"text\">{props.text}</span>\n\t\t</span>\n\t);\n}\n\nexport function SubmittedFilesLabel(): JSX.Element {\n\tconst l = useLocalization(locales);\n\treturn <Label icon=\"upload\" text={l.submittedFiles} />;\n}\n\nexport type CollectionProps =\n\t| {\n\t\t\treadonly collectionUrn: string | PicapicaCollectionUrn;\n\t\t\treadonly collections?: DeepReadonly<Collection.AsObject[]>;\n\t  }\n\t| {\n\t\t\treadonly collection: DeepReadonly<Collection.AsObject>;\n\t  };\n\nexport function CollectionLabel(props: CollectionProps): JSX.Element {\n\tconst { urn, collection } = processProps(props);\n\tconst { title } = useCollectionLocalization(urn);\n\n\tif (title) {\n\t\treturn <Label text={title} />;\n\t} else if (collection?.properties) {\n\t\treturn <Label text={`${collection.properties.name} - ${collection.properties.description}`} />;\n\t} else {\n\t\treturn <UnknownCollectionLabel />;\n\t}\n}\ninterface ProcessedProps {\n\turn: PicapicaCollectionUrn | undefined;\n\tcollection: DeepReadonly<Collection.AsObject> | undefined;\n}\nfunction processProps(props: CollectionProps): ProcessedProps {\n\tif (\"collection\" in props) {\n\t\treturn {\n\t\t\turn: PicapicaUrn.parse(props.collection.urn as Urn<\"collection\">),\n\t\t\tcollection: props.collection,\n\t\t};\n\t} else {\n\t\tlet urn: PicapicaCollectionUrn;\n\t\tlet urnString: string;\n\t\tif (typeof props.collectionUrn === \"string\") {\n\t\t\tconst parsed = PicapicaUrn.tryParse(props.collectionUrn);\n\t\t\tif (!parsed || parsed.type !== \"collection\") {\n\t\t\t\treturn { urn: undefined, collection: undefined };\n\t\t\t}\n\t\t\turn = parsed;\n\t\t\turnString = props.collectionUrn;\n\t\t} else {\n\t\t\turn = props.collectionUrn;\n\t\t\turnString = PicapicaUrn.stringify(urn);\n\t\t}\n\n\t\tconst collection = props.collections?.find(c => c.urn === urnString);\n\n\t\treturn { urn, collection };\n\t}\n}\n\nfunction UnknownCollectionLabel(): JSX.Element {\n\tconst l = useLocalization(locales);\n\treturn <Label text={l.unknown} />;\n}\n\nconst locales: Locales<SimpleString<\"submittedFiles\" | \"unknown\">> = {\n\ten: {\n\t\tsubmittedFiles: \"Your submitted files\",\n\t\tunknown: \"Unknown\",\n\t},\n\tde: {\n\t\tsubmittedFiles: \"Ihre eingereichten Dateien\",\n\t\tunknown: \"Unbekannt\",\n\t},\n};\n","import React from \"react\";\nimport \"./step-action-bar.scss\";\n\nexport interface StepActionBarProps {\n\tleft: React.ReactNode;\n\tright: React.ReactNode;\n\tinstruction: string;\n}\n\nexport function StepActionBar({ left, right, instruction }: StepActionBarProps): JSX.Element {\n\treturn (\n\t\t<div className=\"StepActionBar\">\n\t\t\t<div className=\"left\">\n\t\t\t\t<div>{left}</div>\n\t\t\t</div>\n\t\t\t<div className=\"instruction\">{instruction}</div>\n\t\t\t<div className=\"right\">\n\t\t\t\t<div>{right}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { Buttons } from \"./buttons\";\nimport { PicaIcon } from \"./icon\";\nimport \"./step-buttons.scss\";\n\nexport interface StepButtonProps {\n\tto: string;\n}\n\nexport function NextButton({ to }: StepButtonProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\tconst title = l.next;\n\n\treturn (\n\t\t<Link to={to} className={`NextButton ${Buttons.BUTTON}`} title={title}>\n\t\t\t<span className=\"text\">{title}</span>\n\t\t\t<PicaIcon kind=\"next\" />\n\t\t</Link>\n\t);\n}\n\nexport function BackButton({ to }: StepButtonProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\tconst title = l.back;\n\n\treturn (\n\t\t<Link to={to} className={`BackButton ${Buttons.BUTTON}`} title={title}>\n\t\t\t<PicaIcon kind=\"back\" />\n\t\t\t<span className=\"text\">{title}</span>\n\t\t</Link>\n\t);\n}\n\nexport function StartButton({ to }: StepButtonProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\tconst title = l.start;\n\n\treturn (\n\t\t<Link to={to} className={`StartButton ${Buttons.BUTTON} ${Buttons.GREEN}`} title={title}>\n\t\t\t<span className=\"text\">{title}</span>\n\t\t\t<PicaIcon kind=\"next\" />\n\t\t</Link>\n\t);\n}\n\nconst locales: Locales<SimpleString<\"next\" | \"back\" | \"start\">> = {\n\ten: {\n\t\tnext: \"Next\",\n\t\tback: \"Back\",\n\t\tstart: \"Start\",\n\t},\n\tde: {\n\t\tnext: \"Weiter\",\n\t\tback: \"Zurück\",\n\t\tstart: \"Start\",\n\t},\n};\n","import React from \"react\";\nimport \"./group.scss\";\n\nexport interface GroupProps {\n\treadonly heading: React.ReactNode;\n}\n\nexport function Group({ heading, children }: React.PropsWithChildren<GroupProps>): JSX.Element {\n\treturn (\n\t\t<div className=\"Group\">\n\t\t\t<div className=\"group-heading\">{heading}</div>\n\t\t\t<div className=\"group-container\">{children}</div>\n\t\t</div>\n\t);\n}\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { toAnalysis, toResults, toSubmit } from \"../lib/page-links\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { assertNever } from \"../lib/util\";\nimport { Buttons } from \"./buttons\";\nimport { Group } from \"./group\";\nimport { PicaIcon, PicaIconKind } from \"./icon\";\nimport \"./step-selector.scss\";\n\nexport type StepKind = \"submit\" | \"analysis\" | \"checkout\" | \"results\";\n\nexport function getLinkToStep(step: StepKind, sessionUrn: string): string {\n\tswitch (step) {\n\t\tcase \"submit\":\n\t\t\treturn toSubmit({ urn: sessionUrn });\n\t\tcase \"analysis\":\n\t\t\treturn toAnalysis({ urn: sessionUrn });\n\t\tcase \"checkout\":\n\t\t\treturn \"/checkout/\";\n\t\tcase \"results\":\n\t\t\treturn toResults({ urn: sessionUrn });\n\t\tdefault:\n\t\t\tassertNever(step);\n\t}\n}\n\nconst STEPS = [\"submit\", \"analysis\", \"checkout\", \"results\"] as const;\n\nexport interface StepSelectorProps {\n\treadonly sessionUrn: string;\n\treadonly current: StepKind;\n\treadonly disableOthers?: boolean;\n}\n\nconst ICONS: Readonly<Record<StepKind, PicaIconKind>> = {\n\tsubmit: \"upload\",\n\tanalysis: \"analyse\",\n\tcheckout: \"checkout\",\n\tresults: \"results\",\n};\n\nconst ENABLE_CHECKOUT = false;\n\nexport function StepSelector({ current, sessionUrn, disableOthers }: StepSelectorProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\treturn (\n\t\t<span className={`StepSelector ${Buttons.BUTTON_GROUP}`}>\n\t\t\t{STEPS.filter(step => ENABLE_CHECKOUT || step !== \"checkout\").map(step => {\n\t\t\t\tconst title = l[step];\n\n\t\t\t\tconst disabled = disableOthers && step !== current;\n\t\t\t\tif (disabled) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span key={step} className={`${Buttons.BUTTON} ${Buttons.DISABLED}`} title={title}>\n\t\t\t\t\t\t\t<PicaIcon kind={ICONS[step]} />\n\t\t\t\t\t\t\t<span className=\"text\">{title}</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tkey={step}\n\t\t\t\t\t\tto={getLinkToStep(step, sessionUrn)}\n\t\t\t\t\t\tclassName={`${Buttons.BUTTON}${step === current ? \" \" + Buttons.ACTIVE : \"\"}`}\n\t\t\t\t\t\ttitle={title}>\n\t\t\t\t\t\t<PicaIcon kind={ICONS[step]} />\n\t\t\t\t\t\t<span className=\"text\">{title}</span>\n\t\t\t\t\t</Link>\n\t\t\t\t);\n\t\t\t})}\n\t\t</span>\n\t);\n}\n\nexport function StepSelectorGroup({\n\tcurrent,\n\tsessionUrn,\n\tdisableOthers,\n\tchildren,\n}: React.PropsWithChildren<StepSelectorProps>): JSX.Element {\n\treturn (\n\t\t<div className=\"StepSelectorGroup\">\n\t\t\t<Group\n\t\t\t\theading={\n\t\t\t\t\t<div className=\"heading-wrapper\">\n\t\t\t\t\t\t<StepSelector current={current} sessionUrn={sessionUrn} disableOthers={disableOthers} />\n\t\t\t\t\t</div>\n\t\t\t\t}>\n\t\t\t\t{children}\n\t\t\t</Group>\n\t\t</div>\n\t);\n}\n\nconst locales: Locales<SimpleString<StepKind>> = {\n\ten: {\n\t\tsubmit: \"Upload\",\n\t\tanalysis: \"Analysis\",\n\t\tcheckout: \"Checkout\",\n\t\tresults: \"Results\",\n\t},\n\tde: {\n\t\tsubmit: \"Hochladen\",\n\t\tanalysis: \"Analyse\",\n\t\tcheckout: \"Kasse\",\n\t\tresults: \"Ergebnisse\",\n\t},\n};\n","import { DeleteItemRequest, Session, UpdateComparisonSetRequest, UpdateItemRequest } from \"../generated/v1/services_pb\";\nimport { Item } from \"../generated/v1/types_pb\";\nimport { DeepReadonly } from \"../util\";\nimport { AnalysisConfig } from \"./analysis-config\";\nimport { SessionMutator } from \"./mutator\";\nimport { cloneSession } from \"./util\";\n\nexport interface ActionResult<Req> {\n\tmutate: SessionMutator;\n\trequest: Req;\n}\n\nexport function deleteItemAction(\n\tsession: DeepReadonly<Session.AsObject>,\n\titemUrn: string\n): ActionResult<DeleteItemRequest> {\n\tconst request = new DeleteItemRequest();\n\trequest.setSessionUrn(session.urn);\n\trequest.setItemUrn(itemUrn);\n\n\treturn {\n\t\trequest,\n\t\tmutate(oldSession) {\n\t\t\tconst session = cloneSession(oldSession);\n\t\t\tsession.itemsList = session.itemsList.filter(item => item.urn !== itemUrn);\n\t\t\treturn session;\n\t\t},\n\t};\n}\n\nexport function updateItemAction(\n\tsession: DeepReadonly<Session.AsObject>,\n\titemUrn: string,\n\tmeta: Item.Metadata\n): ActionResult<UpdateItemRequest> {\n\tconst metaObject = meta.toObject();\n\n\tconst request = new UpdateItemRequest();\n\trequest.setSessionUrn(session.urn);\n\trequest.setItemUrn(itemUrn);\n\trequest.setMeta(meta);\n\n\treturn {\n\t\trequest,\n\t\tmutate(oldSession) {\n\t\t\tconst session = cloneSession(oldSession);\n\t\t\tconst item = session.itemsList.find(item => item.urn === itemUrn);\n\t\t\tif (item) {\n\t\t\t\titem.meta = metaObject;\n\t\t\t}\n\t\t\treturn session;\n\t\t},\n\t};\n}\n\nexport function updateComparisonSetAction(\n\tsession: DeepReadonly<Session.AsObject>,\n\tanalysisConfig: AnalysisConfig\n): ActionResult<UpdateComparisonSetRequest> {\n\tconst pairs = analysisConfig.getResourcePairs();\n\tconst pairingsList = pairs.map(p => p.toObject());\n\n\tconst request = new UpdateComparisonSetRequest();\n\trequest.setSessionUrn(session.urn);\n\trequest.setComparisonsList(pairs);\n\n\treturn {\n\t\trequest,\n\t\tmutate(oldSession) {\n\t\t\tconst session = cloneSession(oldSession);\n\t\t\tsession.comparisonsList = pairingsList;\n\t\t\treturn session;\n\t\t},\n\t};\n}\n","import { Session } from \"../generated/v1/services_pb\";\nimport { Item, Timestamp } from \"../generated/v1/types_pb\";\nimport { DeepReadonly } from \"../util\";\n\nexport function cloneSession(session: DeepReadonly<Session.AsObject>): Session.AsObject {\n\treturn JSON.parse(JSON.stringify(session));\n}\n\nexport function createTimestamp(): Timestamp.AsObject {\n\tconst ms = Date.now();\n\treturn {\n\t\tseconds: Math.floor(ms / 1000),\n\t\tnanos: (ms % 1000) * 1000_0000,\n\t};\n}\n\nexport function compareTimestamps(a: Timestamp.AsObject, b: Timestamp.AsObject): number {\n\tif (a.seconds === b.seconds) return a.nanos - b.nanos;\n\treturn a.seconds - b.seconds;\n}\n\nexport function sortSessionItems(items: readonly DeepReadonly<Item.AsObject>[]): DeepReadonly<Item.AsObject>[] {\n\treturn [...items].sort((a, b) => {\n\t\tconst aCreated = a.createdAt;\n\t\tconst bCreated = b.createdAt;\n\n\t\tif (!aCreated && !bCreated) return 0;\n\t\tif (!aCreated) return -1; // a < b\n\t\tif (!bCreated) return +1; // b < a\n\n\t\treturn compareTimestamps(aCreated, bCreated) || a.urn.localeCompare(b.urn);\n\t});\n}\n","import { useQuery } from \"react-query\";\nimport { GetCollectionsRequest } from \"./generated/v1/services_pb\";\nimport { Collection } from \"./generated/v1/types_pb\";\nimport { getSessionClient } from \"./session/client\";\nimport { DeepReadonly } from \"./util\";\n\nexport function useCollections(sessionUrn: string): [collections: DeepReadonly<Collection.AsObject[]> | undefined] {\n\tconst query = useQuery([\"collections\", sessionUrn] as const, {\n\t\t// collections are an immutable resource, so we don't need to refetch\n\t\trefetchInterval: false,\n\t\trefetchOnMount: false,\n\t\trefetchOnReconnect: false,\n\t\trefetchOnWindowFocus: false,\n\n\t\tqueryFn: async () => {\n\t\t\tconst req = new GetCollectionsRequest();\n\t\t\treq.setSessionUrn(sessionUrn);\n\n\t\t\tconst resp = await getSessionClient().getCollections(req, null);\n\t\t\treturn resp.toObject().collectionsList;\n\t\t},\n\t});\n\n\treturn [query.data];\n}\n","import { ResourcePair } from \"../generated/v1/types_pb\";\nimport { EMPTY_MAP, EMPTY_SET } from \"../util\";\nimport { NONE_URN, PicapicaUrn } from \"./urn\";\n\nexport type ItemUrn = string & { readonly __itemUrn?: never };\nexport type CollectionUrn = string & { readonly __itemUrn?: never };\n\nexport class AnalysisConfig {\n\treadonly groupA: ReadonlySet<ItemUrn>;\n\treadonly groupB: ReadonlySet<ItemUrn>;\n\treadonly collections: ReadonlyMap<CollectionUrn, ReadonlySet<ItemUrn>>;\n\n\tconstructor(\n\t\tgroupA: ReadonlySet<ItemUrn>,\n\t\tgroupB: ReadonlySet<ItemUrn>,\n\t\tcollections: ReadonlyMap<CollectionUrn, ReadonlySet<ItemUrn>>\n\t) {\n\t\tthis.groupA = groupA;\n\t\tthis.groupB = groupB;\n\t\tthis.collections = collections;\n\t}\n\n\twithGroupA(groupA: ReadonlySet<ItemUrn>): AnalysisConfig {\n\t\treturn new AnalysisConfig(groupA, this.groupB, this.collections);\n\t}\n\twithGroupB(groupB: ReadonlySet<ItemUrn>): AnalysisConfig {\n\t\treturn new AnalysisConfig(this.groupA, groupB, this.collections);\n\t}\n\twithCollections(collections: ReadonlyMap<CollectionUrn, ReadonlySet<ItemUrn>>): AnalysisConfig {\n\t\treturn new AnalysisConfig(this.groupA, this.groupB, collections);\n\t}\n\twithCollection(collection: CollectionUrn, items: ReadonlySet<ItemUrn>): AnalysisConfig {\n\t\tconst copy = new Map(this.collections);\n\t\tcopy.set(collection, items);\n\t\treturn this.withCollections(copy);\n\t}\n\n\t/**\n\t * Creates a new analysis config from the given collection of resource pairs.\n\t *\n\t * The approach implemented to compress O(n^2) item combinations into 2 O(n) groups is very\n\t * simplistic and works as follows: If a resource pair contains 2 item URNs, then the `a` URN\n\t * will be in group A and the `b` URN will be in group B.\n\t *\n\t * Disappointingly simple, right? Well, it does have a few advantages: It's fast and it doesn't\n\t * lose any combination as a byproduct of the lossy conversion. However, it might cause some\n\t * combinations to be added.\n\t *\n\t * This approach also has the very nice property that:\n\t * `a == fromResourcePairs(a.getResourcePairs())`.\n\t *\n\t * @param pairs\n\t */\n\tstatic fromResourcePairs(\n\t\tpairs: Iterable<ResourcePair | ResourcePair.AsObject>,\n\t\tallItems: ReadonlyArray<ItemUrn>\n\t): AnalysisConfig {\n\t\tconst groupA = new Set<ItemUrn>();\n\t\tconst groupB = new Set<ItemUrn>();\n\t\tconst collections = new Map<CollectionUrn, Set<ItemUrn>>();\n\n\t\tfunction addCollection(collection: CollectionUrn, item: ItemUrn): void {\n\t\t\tlet set = collections.get(collection);\n\t\t\tif (set === undefined) {\n\t\t\t\tset = new Set();\n\t\t\t\tcollections.set(collection, set);\n\t\t\t}\n\t\t\tset.add(item);\n\t\t}\n\t\tfunction toItemUrns(urn: string): ReadonlyArray<ItemUrn> {\n\t\t\tconst type = getPicapicaUrnType(urn);\n\n\t\t\tif (type === \"item\") {\n\t\t\t\treturn [urn];\n\t\t\t} else if (type === \"session\") {\n\t\t\t\treturn allItems;\n\t\t\t} else {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\tfor (const pair of pairs) {\n\t\t\tconst [a, b] = pair instanceof ResourcePair ? [pair.getUrnA(), pair.getUrnB()] : [pair.urnA, pair.urnB];\n\n\t\t\tconst aType = getPicapicaUrnType(a);\n\t\t\tconst bType = getPicapicaUrnType(b);\n\n\t\t\tif (aType === \"collection\") {\n\t\t\t\ttoItemUrns(b).forEach(item => addCollection(a, item));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (bType === \"collection\") {\n\t\t\t\ttoItemUrns(a).forEach(item => addCollection(b, item));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttoItemUrns(a).forEach(item => groupA.add(item));\n\t\t\ttoItemUrns(b).forEach(item => groupB.add(item));\n\t\t}\n\n\t\treturn new AnalysisConfig(groupA, groupB, collections);\n\t}\n\n\t/**\n\t * Returns a list of resource pairs that represents this config.\n\t *\n\t * @returns\n\t */\n\tgetResourcePairs(): ResourcePair[] {\n\t\tconst pairs: ResourcePair[] = [];\n\n\t\tconst pairsA = new Set<ItemUrn>();\n\t\tconst pairsB = new Set<ItemUrn>();\n\n\t\t// add group combinations\n\t\tfor (const a of this.groupA) {\n\t\t\tfor (const b of this.groupB) {\n\t\t\t\tif (a === b) {\n\t\t\t\t\t// same item\n\t\t\t\t} else {\n\t\t\t\t\tpairsA.add(a);\n\t\t\t\t\tpairsB.add(b);\n\t\t\t\t\tpairs.push(new ResourcePair().setUrnA(a).setUrnB(b));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// add items from groups that aren't in any pair\n\t\tfor (const a of this.groupA) {\n\t\t\tif (!pairsA.has(a)) {\n\t\t\t\tpairs.push(new ResourcePair().setUrnA(a).setUrnB(NONE_URN));\n\t\t\t}\n\t\t}\n\t\tfor (const b of this.groupB) {\n\t\t\tif (!pairsB.has(b)) {\n\t\t\t\tpairs.push(new ResourcePair().setUrnA(NONE_URN).setUrnB(b));\n\t\t\t}\n\t\t}\n\n\t\t// add collections\n\t\tfor (const [collection, items] of this.collections) {\n\t\t\tfor (const item of items) {\n\t\t\t\tpairs.push(new ResourcePair().setUrnA(collection).setUrnB(item));\n\t\t\t}\n\t\t}\n\n\t\treturn pairs;\n\t}\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace AnalysisConfig {\n\texport const EMPTY = new AnalysisConfig(EMPTY_SET, EMPTY_SET, EMPTY_MAP);\n}\n\nfunction getPicapicaUrnType(urn: string): PicapicaUrn[\"type\"] | undefined {\n\ttry {\n\t\treturn PicapicaUrn.parse(urn).type;\n\t} catch (error) {\n\t\treturn undefined;\n\t}\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Buttons } from \"../elements/buttons\";\nimport { Icon, ItemTypeIcon } from \"../elements/icon\";\nimport { CollectionLabel, SubmittedFilesLabel } from \"../elements/labels\";\nimport { Page } from \"../elements/page\";\nimport { SessionState } from \"../elements/session-creating-loading\";\nimport { SharedHead } from \"../elements/shared-header\";\nimport { StepActionBar } from \"../elements/step-action-bar\";\nimport { BackButton, StartButton } from \"../elements/step-buttons\";\nimport { getLinkToStep, StepSelectorGroup } from \"../elements/step-selector\";\nimport { Session } from \"../lib/generated/v1/services_pb\";\nimport { Collection, Item } from \"../lib/generated/v1/types_pb\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { dynamic } from \"../lib/react-util\";\nimport { updateComparisonSetAction } from \"../lib/session/actions\";\nimport { AnalysisConfig, ItemUrn } from \"../lib/session/analysis-config\";\nimport { getSessionClient } from \"../lib/session/client\";\nimport { sortSessionItems } from \"../lib/session/util\";\nimport { useCollections } from \"../lib/use-collections\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { getSessionUrn, Ready, useLoadSession } from \"../lib/use-session\";\nimport { DeepReadonly, EMPTY_ARRAY, EMPTY_SET, noop } from \"../lib/util\";\nimport \"./analysis.scss\";\n\nexport default function AnalysisPage(): JSX.Element {\n\treturn (\n\t\t<>\n\t\t\t{dynamic(() => (\n\t\t\t\t<Analysis />\n\t\t\t))}\n\t\t\t<SharedHead />\n\t\t\t<Helmet>\n\t\t\t\t<title>Picapica</title>\n\t\t\t</Helmet>\n\t\t</>\n\t);\n}\n\nfunction Analysis(): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst [state, update] = useLoadSession();\n\tconst [collections] = useCollections(getSessionUrn(state));\n\n\tconst updateConfig = useCallback(\n\t\t(config: AnalysisConfig) => {\n\t\t\tif (state.type === \"Ready\") {\n\t\t\t\tconst { mutate, request } = updateComparisonSetAction(state.session, config);\n\t\t\t\t// TODO: Handle errors\n\t\t\t\tupdate(getSessionClient().updateComparisonSet(request, null).then(noop), mutate);\n\t\t\t}\n\t\t},\n\t\t[state, update]\n\t);\n\n\tconst config = useMemo(() => {\n\t\tif (state.type === \"Ready\") {\n\t\t\treturn AnalysisConfig.fromResourcePairs(\n\t\t\t\tstate.session.comparisonsList ?? EMPTY_ARRAY,\n\t\t\t\tstate.session.itemsList.map(i => i.urn)\n\t\t\t);\n\t\t} else {\n\t\t\treturn AnalysisConfig.EMPTY;\n\t\t}\n\t}, [state]);\n\n\tconst onReady = ({ session }: Ready): JSX.Element => (\n\t\t<>\n\t\t\t<StepActionBar\n\t\t\t\tleft={<BackButton to={getLinkToStep(\"submit\", session.urn)} />}\n\t\t\t\tright={<StartButton to={getLinkToStep(\"results\", session.urn)} />}\n\t\t\t\tinstruction={l.instruction}\n\t\t\t/>\n\n\t\t\t<ItemConfig session={session} config={config} update={updateConfig} />\n\n\t\t\t{(collections ?? []).map(collection => {\n\t\t\t\treturn (\n\t\t\t\t\t<CollectionConfig\n\t\t\t\t\t\tkey={collection.urn}\n\t\t\t\t\t\tsession={session}\n\t\t\t\t\t\tconfig={config}\n\t\t\t\t\t\tupdate={updateConfig}\n\t\t\t\t\t\tcollection={collection}\n\t\t\t\t\t\tinstruction={l.wikipediaInstruction}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\n\t\t\t<StepActionBar\n\t\t\t\tleft={<BackButton to={getLinkToStep(\"submit\", session.urn)} />}\n\t\t\t\tright={<StartButton to={getLinkToStep(\"results\", session.urn)} />}\n\t\t\t\tinstruction={\"\"}\n\t\t\t/>\n\t\t</>\n\t);\n\n\treturn (\n\t\t<Page className=\"Analysis\" header=\"small\">\n\t\t\t<StepSelectorGroup sessionUrn={getSessionUrn(state)} current=\"analysis\">\n\t\t\t\t<SessionState state={state} onReady={onReady} />\n\t\t\t</StepSelectorGroup>\n\t\t</Page>\n\t);\n}\n\ninterface ItemConfigProps {\n\tsession: DeepReadonly<Session.AsObject>;\n\tconfig: AnalysisConfig;\n\tupdate: (config: AnalysisConfig) => void;\n}\n\nfunction ItemConfig({ session, config, update }: ItemConfigProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst items = sortSessionItems(session.itemsList);\n\n\tconst allUrns: ItemUrn[] = items.map(i => i.urn);\n\tconst allA = allUrns.every(urn => config.groupA.has(urn));\n\tconst allB = allUrns.every(urn => config.groupB.has(urn));\n\tconst all = allA && allB;\n\tconst none = allUrns.every(urn => !config.groupA.has(urn) && !config.groupB.has(urn));\n\n\tconst INACTIVE = \"inactive\";\n\n\tfunction setAll(): void {\n\t\tconst newConfig = config.withGroupA(new Set(allUrns)).withGroupB(new Set(allUrns));\n\t\tupdate(newConfig);\n\t}\n\tfunction setNone(): void {\n\t\tconst newConfig = config.withGroupA(EMPTY_SET).withGroupB(EMPTY_SET);\n\t\tupdate(newConfig);\n\t}\n\tfunction setAllA(): void {\n\t\tconst newConfig = config.withGroupA(new Set(allUrns));\n\t\tupdate(newConfig);\n\t}\n\tfunction setAllB(): void {\n\t\tconst newConfig = config.withGroupB(new Set(allUrns));\n\t\tupdate(newConfig);\n\t}\n\tfunction toggleA(urn: ItemUrn): void {\n\t\tconst newConfig = config.withGroupA(toggleSetValue(config.groupA, urn));\n\t\tupdate(newConfig);\n\t}\n\tfunction toggleB(urn: ItemUrn): void {\n\t\tconst newConfig = config.withGroupB(toggleSetValue(config.groupB, urn));\n\t\tupdate(newConfig);\n\t}\n\n\treturn (\n\t\t<div className=\"ItemConfig\">\n\t\t\t<div className=\"heading\">\n\t\t\t\t<span className=\"title\">\n\t\t\t\t\t<SubmittedFilesLabel />\n\t\t\t\t</span>\n\t\t\t\t<span className=\"buttons\">\n\t\t\t\t\t<span className={Buttons.BUTTON_GROUP}>\n\t\t\t\t\t\t<button className={`${Buttons.BUTTON} ${all ? Buttons.ACTIVE : INACTIVE}`} onClick={setAll}>\n\t\t\t\t\t\t\t{l.all}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className={`${Buttons.BUTTON} ${none ? Buttons.ACTIVE : INACTIVE}`} onClick={setNone}>\n\t\t\t\t\t\t\t{l.none}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"content\">\n\t\t\t\t<div className=\"instruction\">{l.itemInstruction}</div>\n\t\t\t\t<div className=\"table\">\n\t\t\t\t\t<div className={Buttons.BUTTON_GROUP}>\n\t\t\t\t\t\t<span className={Buttons.NON_BUTTON}>{l.file}</span>\n\t\t\t\t\t\t<button className={`${Buttons.BUTTON} ${allA ? Buttons.ACTIVE : INACTIVE}`} onClick={setAllA}>\n\t\t\t\t\t\t\tA\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className={`${Buttons.BUTTON} ${allB ? Buttons.ACTIVE : INACTIVE}`} onClick={setAllB}>\n\t\t\t\t\t\t\tB\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t{items.map(item => {\n\t\t\t\t\t\tconst a = config.groupA.has(item.urn);\n\t\t\t\t\t\tconst b = config.groupB.has(item.urn);\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={item.urn} className={Buttons.BUTTON_GROUP}>\n\t\t\t\t\t\t\t\t<span className={Buttons.NON_BUTTON}>\n\t\t\t\t\t\t\t\t\t<ItemTypeIcon type={item.resource?.type ?? Item.Resource.Type.TYPE_UNSPECIFIED} />\n\t\t\t\t\t\t\t\t\t{item.meta?.name}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={`${Buttons.BUTTON} ${a ? Buttons.ACTIVE : INACTIVE}`}\n\t\t\t\t\t\t\t\t\tonClick={() => toggleA(item.urn)}>\n\t\t\t\t\t\t\t\t\tA\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={`${Buttons.BUTTON} ${b ? Buttons.ACTIVE : INACTIVE}`}\n\t\t\t\t\t\t\t\t\tonClick={() => toggleB(item.urn)}>\n\t\t\t\t\t\t\t\t\tB\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\ninterface CollectionConfigProps {\n\tsession: DeepReadonly<Session.AsObject>;\n\tconfig: AnalysisConfig;\n\tcollection: DeepReadonly<Collection.AsObject>;\n\tinstruction: string;\n\tupdate: (config: AnalysisConfig) => void;\n}\n\nfunction CollectionConfig({ session, config, collection, instruction, update }: CollectionConfigProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst set = config.collections.get(collection.urn) ?? EMPTY_SET;\n\tconst items = sortSessionItems(session.itemsList);\n\n\tconst allUrns: ItemUrn[] = items.map(i => i.urn);\n\tconst all = allUrns.every(urn => set.has(urn));\n\tconst none = allUrns.every(urn => !set.has(urn));\n\n\tconst INACTIVE = \"inactive\";\n\n\tfunction setAll(): void {\n\t\tconst newConfig = config.withCollection(collection.urn, new Set(allUrns));\n\t\tupdate(newConfig);\n\t}\n\tfunction setNone(): void {\n\t\tconst newConfig = config.withCollection(collection.urn, EMPTY_SET);\n\t\tupdate(newConfig);\n\t}\n\tfunction toggleHas(urn: ItemUrn): void {\n\t\tconst newConfig = config.withCollection(collection.urn, toggleSetValue(set, urn));\n\t\tupdate(newConfig);\n\t}\n\n\treturn (\n\t\t<div className=\"CollectionConfig\">\n\t\t\t<div className=\"heading\">\n\t\t\t\t<span className=\"title\">\n\t\t\t\t\t<CollectionLabel collectionUrn={collection.urn} />\n\t\t\t\t</span>\n\t\t\t\t<span className=\"buttons\">\n\t\t\t\t\t<span className={Buttons.BUTTON_GROUP}>\n\t\t\t\t\t\t<button className={`${Buttons.BUTTON} ${all ? Buttons.ACTIVE : INACTIVE}`} onClick={setAll}>\n\t\t\t\t\t\t\t{l.all}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className={`${Buttons.BUTTON} ${none ? Buttons.ACTIVE : INACTIVE}`} onClick={setNone}>\n\t\t\t\t\t\t\t{l.none}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className=\"content\">\n\t\t\t\t<div className=\"instruction\">{instruction}</div>\n\t\t\t\t<div className=\"table\">\n\t\t\t\t\t<div className={Buttons.BUTTON_GROUP}>\n\t\t\t\t\t\t<span className={Buttons.NON_BUTTON}>{l.file}</span>\n\t\t\t\t\t\t<button className={`${Buttons.BUTTON} ${all ? Buttons.ACTIVE : INACTIVE}`} onClick={setAll}>\n\t\t\t\t\t\t\t<Icon kind=\"check-line\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className={`${Buttons.BUTTON} ${none ? Buttons.ACTIVE : INACTIVE}`} onClick={setNone}>\n\t\t\t\t\t\t\t<Icon kind=\"close-line\" />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t{items.map(item => {\n\t\t\t\t\t\tconst has = set.has(item.urn);\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={item.urn} className={Buttons.BUTTON_GROUP}>\n\t\t\t\t\t\t\t\t<span className={Buttons.NON_BUTTON}>\n\t\t\t\t\t\t\t\t\t<ItemTypeIcon type={item.resource?.type ?? Item.Resource.Type.TYPE_UNSPECIFIED} />\n\t\t\t\t\t\t\t\t\t{item.meta?.name}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={`${Buttons.BUTTON} ${has ? Buttons.ACTIVE : INACTIVE}`}\n\t\t\t\t\t\t\t\t\tonClick={() => toggleHas(item.urn)}>\n\t\t\t\t\t\t\t\t\t<Icon kind=\"check-line\" />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={`${Buttons.BUTTON} ${!has ? Buttons.ACTIVE : INACTIVE}`}\n\t\t\t\t\t\t\t\t\tonClick={() => toggleHas(item.urn)}>\n\t\t\t\t\t\t\t\t\t<Icon kind=\"close-line\" />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction toggleSetValue<T>(set: ReadonlySet<T>, value: T): Set<T> {\n\tconst result = new Set(set);\n\tif (set.has(value)) {\n\t\tresult.delete(value);\n\t} else {\n\t\tresult.add(value);\n\t}\n\treturn result;\n}\n\nconst locales: Locales<\n\tSimpleString<\"instruction\" | \"all\" | \"none\" | \"file\" | \"itemInstruction\" | \"wikipediaInstruction\">\n> = {\n\ten: {\n\t\tinstruction: \"Select analysis options\",\n\n\t\tall: \"All\",\n\t\tnone: \"None\",\n\t\tfile: \"File\",\n\n\t\titemInstruction: \"Compare your submitted files among each other. Group A will be compared with Group B.\",\n\t\twikipediaInstruction: \"Compare your submitted files with all of Wikipedia.\",\n\t},\n\tde: {\n\t\tinstruction: \"Analyseoptionen auswählen\",\n\n\t\tall: \"Alles\",\n\t\tnone: \"Nichts\",\n\t\tfile: \"Datei\",\n\n\t\titemInstruction:\n\t\t\t\"Vergleichen Sie Ihre eingereichten Dateien miteinander. Gruppe A wird mit Gruppe B verglichen.\",\n\t\twikipediaInstruction: \"Vergleichen Sie Ihre eingereichten Dateien mit der gesamten Wikipedia.\",\n\t},\n};\n"],"names":["knownCollections","en","core_fulltext_languagenameenglish","title","de","EMPTY_OBJ","Label","props","className","icon","kind","text","SubmittedFilesLabel","l","useLocalization","locales","submittedFiles","CollectionLabel","urn","collection","PicapicaUrn","urnString","collectionUrn","parsed","type","undefined","collections","find","c","processProps","known","collectionId","useCollectionLocalization","properties","name","description","UnknownCollectionLabel","unknown","StepActionBar","left","right","instruction","NextButton","to","next","Buttons","BackButton","back","StartButton","start","Group","heading","children","getLinkToStep","step","sessionUrn","toSubmit","toAnalysis","toResults","assertNever","STEPS","ICONS","submit","analysis","checkout","results","StepSelector","current","disableOthers","filter","map","key","StepSelectorGroup","deleteItemAction","session","itemUrn","request","DeleteItemRequest","setSessionUrn","setItemUrn","mutate","oldSession","cloneSession","itemsList","item","updateItemAction","meta","metaObject","toObject","UpdateItemRequest","setMeta","updateComparisonSetAction","analysisConfig","pairs","getResourcePairs","pairingsList","p","UpdateComparisonSetRequest","setComparisonsList","comparisonsList","JSON","parse","stringify","createTimestamp","ms","Date","now","seconds","Math","floor","nanos","compareTimestamps","a","b","sortSessionItems","items","sort","aCreated","createdAt","bCreated","localeCompare","useCollections","useQuery","refetchInterval","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","queryFn","async","req","GetCollectionsRequest","getSessionClient","getCollections","collectionsList","data","AnalysisConfig","constructor","groupA","groupB","this","withGroupA","withGroupB","withCollections","withCollection","copy","Map","set","allItems","Set","addCollection","get","add","toItemUrns","getPicapicaUrnType","pair","ResourcePair","getUrnA","getUrnB","urnA","urnB","aType","bType","forEach","pairsA","pairsB","push","setUrnA","setUrnB","has","NONE_URN","error","EMPTY_SET","EMPTY_MAP","AnalysisPage","dynamic","Analysis","Helmet","state","update","useLoadSession","getSessionUrn","updateConfig","useCallback","config","updateComparisonSet","then","noop","useMemo","fromResourcePairs","EMPTY_ARRAY","i","EMPTY","header","onReady","ItemConfig","CollectionConfig","wikipediaInstruction","allUrns","allA","every","allB","all","none","INACTIVE","onClick","newConfig","itemInstruction","file","resource","Item","toggleSetValue","toggleA","toggleB","setAll","setNone","toggleHas","value","result","delete"],"sourceRoot":""}