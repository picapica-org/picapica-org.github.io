{"version":3,"file":"component---src-pages-results-tsx-6619594c525da6d2174f.js","mappings":"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","sources":["webpack://picapica-web-client/./src/elements/center-align-two.tsx","webpack://picapica-web-client/./src/lib/use-collection-localization.ts","webpack://picapica-web-client/./src/elements/labels.tsx","webpack://picapica-web-client/./src/elements/loader-animation.tsx","webpack://picapica-web-client/./src/lib/session/result-categories.ts","webpack://picapica-web-client/./src/elements/badge.tsx","webpack://picapica-web-client/./src/elements/results-overview.tsx","webpack://picapica-web-client/./src/elements/group.tsx","webpack://picapica-web-client/./src/elements/step-selector.tsx","webpack://picapica-web-client/./src/lib/session/util.ts","webpack://picapica-web-client/./src/lib/use-collections.ts","webpack://picapica-web-client/./src/lib/last-compute.ts","webpack://picapica-web-client/./src/lib/use-compute-results.ts","webpack://picapica-web-client/./src/pages/results.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./center-align-two.scss\";\n\nexport interface CenterAlignTwoProps {\n\treadonly className?: string;\n\treadonly grow: \"left\" | \"right\";\n\treadonly left: React.ReactNode;\n\treadonly right: React.ReactNode;\n}\n\nexport function CenterAlignTwo({ className, grow, left, right }: CenterAlignTwoProps): JSX.Element {\n\treturn (\n\t\t<div className={\"CenterAlignTwo\" + (className ? \" \" + className : \"\")}>\n\t\t\t<div className={`left${grow === \"left\" ? \" grow\" : \"\"}`}>{left}</div>\n\t\t\t<div className={`right${grow === \"right\" ? \" grow\" : \"\"}`}>{right}</div>\n\t\t</div>\n\t);\n}\n","import { Locales } from \"./localization\";\nimport { PicapicaUrn } from \"./session/urn\";\nimport { useLocalization } from \"./use-localization\";\n\nexport interface CollectionLocalization {\n\treadonly title: string;\n}\n\ntype KnownCollections = \"core_fulltext_languagenameenglish\";\n\nconst knownCollections: Locales<Record<KnownCollections, CollectionLocalization>> = {\n\ten: {\n\t\tcore_fulltext_languagenameenglish: {\n\t\t\ttitle: \"CORE - The world's largest collection of open-access research papers\",\n\t\t},\n\t},\n\tde: {\n\t\tcore_fulltext_languagenameenglish: {\n\t\t\ttitle: \"CORE - The world's largest collection of open-access research papers\",\n\t\t},\n\t},\n};\n\nconst EMPTY_OBJ = {};\n\nexport function useCollectionLocalization(\n\turn: PicapicaUrn | string | undefined | null\n): Partial<CollectionLocalization> {\n\tconst l: Readonly<Record<string, CollectionLocalization | undefined>> = useLocalization(knownCollections);\n\n\tconst parsed = typeof urn === \"string\" ? PicapicaUrn.tryParse(urn) : urn;\n\tif (parsed && parsed.type === \"collection\") {\n\t\tconst known = l[parsed.collectionId];\n\t\tif (known) {\n\t\t\treturn known;\n\t\t}\n\t}\n\n\treturn EMPTY_OBJ;\n}\n","import React from \"react\";\nimport { Collection } from \"../lib/generated/v1/types_pb\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { PicapicaCollectionUrn, PicapicaUrn, Urn } from \"../lib/session/urn\";\nimport { useCollectionLocalization } from \"../lib/use-collection-localization\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { DeepReadonly } from \"../lib/util\";\nimport { PicaIcon, PicaIconKind } from \"./icon\";\nimport \"./labels.scss\";\n\nexport interface LabelProps {\n\treadonly icon?: PicaIconKind;\n\treadonly text: string;\n}\n\nexport function Label(props: LabelProps): JSX.Element {\n\treturn (\n\t\t<span className=\"Label\">\n\t\t\t{props.icon && <PicaIcon kind={props.icon} />}\n\t\t\t<span className=\"text\">{props.text}</span>\n\t\t</span>\n\t);\n}\n\nexport function SubmittedFilesLabel(): JSX.Element {\n\tconst l = useLocalization(locales);\n\treturn <Label icon=\"upload\" text={l.submittedFiles} />;\n}\n\nexport type CollectionProps =\n\t| {\n\t\t\treadonly collectionUrn: string | PicapicaCollectionUrn;\n\t\t\treadonly collections?: DeepReadonly<Collection.AsObject[]>;\n\t  }\n\t| {\n\t\t\treadonly collection: DeepReadonly<Collection.AsObject>;\n\t  };\n\nexport function CollectionLabel(props: CollectionProps): JSX.Element {\n\tconst { urn, collection } = processProps(props);\n\tconst { title } = useCollectionLocalization(urn);\n\n\tif (title) {\n\t\treturn <Label text={title} />;\n\t} else if (collection?.properties) {\n\t\treturn <Label text={`${collection.properties.name} - ${collection.properties.description}`} />;\n\t} else {\n\t\treturn <UnknownCollectionLabel />;\n\t}\n}\ninterface ProcessedProps {\n\turn: PicapicaCollectionUrn | undefined;\n\tcollection: DeepReadonly<Collection.AsObject> | undefined;\n}\nfunction processProps(props: CollectionProps): ProcessedProps {\n\tif (\"collection\" in props) {\n\t\treturn {\n\t\t\turn: PicapicaUrn.parse(props.collection.urn as Urn<\"collection\">),\n\t\t\tcollection: props.collection,\n\t\t};\n\t} else {\n\t\tlet urn: PicapicaCollectionUrn;\n\t\tlet urnString: string;\n\t\tif (typeof props.collectionUrn === \"string\") {\n\t\t\tconst parsed = PicapicaUrn.tryParse(props.collectionUrn);\n\t\t\tif (!parsed || parsed.type !== \"collection\") {\n\t\t\t\treturn { urn: undefined, collection: undefined };\n\t\t\t}\n\t\t\turn = parsed;\n\t\t\turnString = props.collectionUrn;\n\t\t} else {\n\t\t\turn = props.collectionUrn;\n\t\t\turnString = PicapicaUrn.stringify(urn);\n\t\t}\n\n\t\tconst collection = props.collections?.find(c => c.urn === urnString);\n\n\t\treturn { urn, collection };\n\t}\n}\n\nfunction UnknownCollectionLabel(): JSX.Element {\n\tconst l = useLocalization(locales);\n\treturn <Label text={l.unknown} />;\n}\n\nconst locales: Locales<SimpleString<\"submittedFiles\" | \"unknown\">> = {\n\ten: {\n\t\tsubmittedFiles: \"Your submitted files\",\n\t\tunknown: \"Unknown\",\n\t},\n\tde: {\n\t\tsubmittedFiles: \"Ihre eingereichten Dateien\",\n\t\tunknown: \"Unbekannt\",\n\t},\n};\n","import React from \"react\";\nimport { Icon } from \"./icon\";\nimport \"./loader-animation.scss\";\n\nexport interface LoaderAnimationProps {\n\treadonly id?: string;\n}\n\nexport function LoaderAnimation({ id }: LoaderAnimationProps): JSX.Element {\n\treturn (\n\t\t<span className=\"LoaderAnimation\" id={id}>\n\t\t\t{\" \"}\n\t\t\t<Icon kind=\"loader-5-line\" />\n\t\t\t<Icon kind=\"loader-5-line\" />\n\t\t</span>\n\t);\n}\n","import { Result } from \"../generated/v1/types_pb\";\nimport { DeepReadonly } from \"../util\";\nimport { PicapicaDocumentUrn, PicapicaItemUrn, PicapicaUrn, Urn } from \"./urn\";\n\nexport interface ItemResult {\n\treadonly a: PicapicaItemUrn;\n\treadonly b: PicapicaItemUrn;\n\treadonly result: DeepReadonly<Result.AsObject>;\n}\nexport interface CollectionResult {\n\treadonly item: PicapicaItemUrn;\n\treadonly document: PicapicaDocumentUrn;\n\treadonly result: DeepReadonly<Result.AsObject>;\n}\n\nexport interface ResultCategories {\n\t/**\n\t * A list of all results between items.\n\t */\n\titems: ItemResult[];\n\t/**\n\t * A map from a collections URN to a non-empty list of results between an item and a document from key collection.\n\t */\n\tcollections: Map<Urn<\"collection\">, CollectionResult[]>;\n\t/**\n\t * A list of results that are invalid by not having valid URNs.\n\t */\n\tinvalid: DeepReadonly<Result.AsObject>[];\n}\n\nexport function categorizeResults(results: Iterable<DeepReadonly<Result.AsObject>>): ResultCategories {\n\tconst categories: ResultCategories = { items: [], collections: new Map(), invalid: [] };\n\n\tfunction addDocument(\n\t\titem: PicapicaItemUrn,\n\t\tdocument: PicapicaDocumentUrn,\n\t\tresult: DeepReadonly<Result.AsObject>\n\t): void {\n\t\tconst collectionUrn = PicapicaUrn.stringify({ type: \"collection\", collectionId: document.collectionId });\n\n\t\tlet list = categories.collections.get(collectionUrn);\n\t\tif (list === undefined) {\n\t\t\tlist = [];\n\t\t\tcategories.collections.set(collectionUrn, list);\n\t\t}\n\t\tlist.push({ item, document, result });\n\t}\n\n\tfor (const result of results) {\n\t\tconst a = PicapicaUrn.tryParse(result.resources?.urnA ?? \"\");\n\t\tconst b = PicapicaUrn.tryParse(result.resources?.urnB ?? \"\");\n\n\t\tif (!a || !b) {\n\t\t\tcategories.invalid.push(result);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (a.type === \"item\" && b.type === \"item\") {\n\t\t\tcategories.items.push({ a, b, result });\n\t\t} else if (a.type === \"item\" && b.type === \"document\") {\n\t\t\taddDocument(a, b, result);\n\t\t} else if (a.type === \"document\" && b.type === \"item\") {\n\t\t\taddDocument(b, a, result);\n\t\t} else {\n\t\t\tcategories.invalid.push(result);\n\t\t}\n\t}\n\n\treturn categories;\n}\n","import React from \"react\";\nimport \"./badge.scss\";\n\nexport type BadgeKind = \"Dark\" | \"Light\";\n\nexport interface BadgeProps {\n\treadonly kind: BadgeKind;\n}\n\nexport function Badge({ kind, children }: React.PropsWithChildren<BadgeProps>): JSX.Element {\n\treturn <span className={`Badge ${kind}`}>{children}</span>;\n}\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { Session } from \"../lib/generated/v1/services_pb\";\nimport { Collection, Result } from \"../lib/generated/v1/types_pb\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { categorizeResults } from \"../lib/session/result-categories\";\nimport { PicapicaUrn, Urn } from \"../lib/session/urn\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { DeepReadonly } from \"../lib/util\";\nimport { Badge } from \"./badge\";\nimport { Buttons } from \"./buttons\";\nimport { CenterAlignTwo } from \"./center-align-two\";\nimport { PicaIcon } from \"./icon\";\nimport { CollectionLabel, Label, SubmittedFilesLabel } from \"./labels\";\nimport { LoaderAnimation } from \"./loader-animation\";\nimport \"./results-overview.scss\";\n\nexport interface OverviewContainerProps {\n\treadonly backTo?: string;\n\treadonly title: React.ReactNode;\n}\n\nexport function OverviewContainer({\n\tbackTo,\n\ttitle,\n\tchildren,\n}: React.PropsWithChildren<OverviewContainerProps>): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\treturn (\n\t\t<div className=\"OverviewContainer\">\n\t\t\t<div className=\"head\">\n\t\t\t\t{backTo && (\n\t\t\t\t\t<Link className={Buttons.BUTTON} to={backTo} title={l.back}>\n\t\t\t\t\t\t<PicaIcon kind=\"back\" />\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t\t<div>{title}</div>\n\t\t\t</div>\n\t\t\t<div className=\"content\">{children}</div>\n\t\t</div>\n\t);\n}\n\nexport interface ResultsOverviewProps {\n\treadonly session: DeepReadonly<Session.AsObject>;\n\treadonly collections?: DeepReadonly<Collection.AsObject[]>;\n\treadonly backTo: string;\n\treadonly itemTo: string;\n\treadonly collectionTo: (collectionUrn: string) => string;\n}\n\nexport function ResultsOverview({\n\tsession,\n\tcollections,\n\tbackTo,\n\titemTo,\n\tcollectionTo,\n}: ResultsOverviewProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst categories = categorizeResults(session.resultsList);\n\n\tif (categories.invalid.length) {\n\t\tconsole.error(\"Not displaying the following results:\");\n\t\tconsole.error(categories.invalid);\n\t}\n\n\tconst title = (\n\t\t<CenterAlignTwo\n\t\t\tgrow=\"left\"\n\t\t\tleft={<Label icon=\"results\" text={l.analysisResults} />}\n\t\t\tright={<Badge kind=\"Dark\">{l.results}</Badge>}\n\t\t/>\n\t);\n\n\tconst running = session.status === Session.ComputeStatus.STATUS_RUNNING;\n\n\treturn (\n\t\t<div className=\"ResultsOverview\">\n\t\t\t<OverviewContainer backTo={backTo} title={title}>\n\t\t\t\t<div>\n\t\t\t\t\t<Link className={Buttons.BUTTON} to={itemTo}>\n\t\t\t\t\t\t<CenterAlignTwo\n\t\t\t\t\t\t\tgrow=\"left\"\n\t\t\t\t\t\t\tleft={<SubmittedFilesLabel />}\n\t\t\t\t\t\t\tright={\n\t\t\t\t\t\t\t\t<Badge kind=\"Light\">\n\t\t\t\t\t\t\t\t\t{running && <LoaderAnimation />}\n\t\t\t\t\t\t\t\t\t{categories.items.length}\n\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t{[...categories.collections].map(([urn, results]) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={urn}>\n\t\t\t\t\t\t\t<Link className={Buttons.BUTTON} to={collectionTo(urn)}>\n\t\t\t\t\t\t\t\t<CenterAlignTwo\n\t\t\t\t\t\t\t\t\tgrow=\"left\"\n\t\t\t\t\t\t\t\t\tleft={<CollectionLabel collectionUrn={urn} collections={collections} />}\n\t\t\t\t\t\t\t\t\tright={<Badge kind=\"Light\">{results.length}</Badge>}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</OverviewContainer>\n\t\t</div>\n\t);\n}\n\nexport interface ItemResultsOverviewProps {\n\treadonly session: DeepReadonly<Session.AsObject>;\n\treadonly backTo: string;\n\treadonly resultTo: (result: DeepReadonly<Result.AsObject>) => string;\n}\n\nexport function ItemResultsOverview({ session, backTo, resultTo }: ItemResultsOverviewProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst { items } = categorizeResults(session.resultsList);\n\n\tconst title = (\n\t\t<CenterAlignTwo grow=\"left\" left={<SubmittedFilesLabel />} right={<Badge kind=\"Dark\">{l.matches}</Badge>} />\n\t);\n\n\tconst itemNameMap = new Map(session.itemsList.map(item => [item.urn, item.meta?.name]));\n\n\treturn (\n\t\t<div className=\"ItemResultsOverview\">\n\t\t\t<OverviewContainer backTo={backTo} title={title}>\n\t\t\t\t{items.map(({ result }) => {\n\t\t\t\t\tconst leftName = itemNameMap.get(result.resources?.urnA ?? \"\") ?? l.unknownItem;\n\t\t\t\t\tconst rightName = itemNameMap.get(result.resources?.urnB ?? \"\") ?? l.unknownItem;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={result.urn}>\n\t\t\t\t\t\t\t<Link className={Buttons.BUTTON} to={resultTo(result)}>\n\t\t\t\t\t\t\t\t<CenterAlignTwo\n\t\t\t\t\t\t\t\t\tgrow=\"left\"\n\t\t\t\t\t\t\t\t\tleft={\n\t\t\t\t\t\t\t\t\t\t<span className=\"item-vs\">\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"left\">{leftName}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"vs\">vs.</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"right\">{rightName}</span>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tright={\n\t\t\t\t\t\t\t\t\t\tsession.status === Session.ComputeStatus.STATUS_COMPLETED ? (\n\t\t\t\t\t\t\t\t\t\t\t<Badge kind=\"Light\">{result.seedsList.length}</Badge>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<LoaderAnimation />\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\n\t\t\t\t{items.length === 0 && <div className=\"no-results\">{l.noResults}</div>}\n\t\t\t</OverviewContainer>\n\t\t</div>\n\t);\n}\n\nexport interface CollectionResultsOverviewProps {\n\treadonly collectionUrn: string;\n\treadonly session: DeepReadonly<Session.AsObject>;\n\treadonly collections?: DeepReadonly<Collection.AsObject[]>;\n\treadonly backTo: string;\n\treadonly resultTo: (result: DeepReadonly<Result.AsObject>) => string;\n}\n\nexport function CollectionResultsOverview({\n\tsession,\n\tcollectionUrn,\n\tcollections,\n\tbackTo,\n\tresultTo,\n}: CollectionResultsOverviewProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst results = categorizeResults(session.resultsList).collections.get(collectionUrn as Urn<\"collection\">) ?? [];\n\n\tconst title = (\n\t\t<CenterAlignTwo\n\t\t\tgrow=\"left\"\n\t\t\tleft={<CollectionLabel collectionUrn={collectionUrn} collections={collections} />}\n\t\t\tright={<Badge kind=\"Dark\">{l.matches}</Badge>}\n\t\t/>\n\t);\n\n\tconst itemNameMap = new Map(session.itemsList.map(item => [item.urn, item.meta?.name]));\n\n\treturn (\n\t\t<div className=\"CollectionResultsOverview\">\n\t\t\t<OverviewContainer backTo={backTo} title={title}>\n\t\t\t\t{results.map(({ item, document, result }) => {\n\t\t\t\t\tconst itemName = itemNameMap.get(PicapicaUrn.stringify(item)) ?? l.unknownItem;\n\t\t\t\t\tconst documentName = document.documentId;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={result.urn}>\n\t\t\t\t\t\t\t<Link className={Buttons.BUTTON} to={resultTo(result)}>\n\t\t\t\t\t\t\t\t<CenterAlignTwo\n\t\t\t\t\t\t\t\t\tgrow=\"left\"\n\t\t\t\t\t\t\t\t\tleft={\n\t\t\t\t\t\t\t\t\t\t<span className=\"item-vs\">\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"left\">{itemName}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"vs\">vs.</span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"right\">{documentName}</span>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tright={\n\t\t\t\t\t\t\t\t\t\tsession.status === Session.ComputeStatus.STATUS_COMPLETED ? (\n\t\t\t\t\t\t\t\t\t\t\t<Badge kind=\"Light\">{result.seedsList.length}</Badge>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<LoaderAnimation />\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\n\t\t\t\t{results.length === 0 && <div className=\"no-results\">{l.noResults}</div>}\n\t\t\t</OverviewContainer>\n\t\t</div>\n\t);\n}\n\nconst locales: Locales<SimpleString<\"back\" | \"analysisResults\" | \"results\" | \"matches\" | \"noResults\" | \"unknownItem\">> =\n\t{\n\t\ten: {\n\t\t\tback: \"Back\",\n\n\t\t\tanalysisResults: \"Analysis results\",\n\t\t\tresults: \"Results\",\n\t\t\tmatches: \"Matches\",\n\t\t\tnoResults: \"No results\",\n\n\t\t\tunknownItem: \"<unknown>\",\n\t\t},\n\t\tde: {\n\t\t\tback: \"Zurück\",\n\n\t\t\tanalysisResults: \"Analyse\\xADergebnisse\",\n\t\t\tresults: \"Ergebnisse\",\n\t\t\tmatches: \"Treffer\",\n\t\t\tnoResults: \"Keine Ergebnisse\",\n\n\t\t\tunknownItem: \"<unbekannt>\",\n\t\t},\n\t};\n","import React from \"react\";\nimport \"./group.scss\";\n\nexport interface GroupProps {\n\treadonly heading: React.ReactNode;\n}\n\nexport function Group({ heading, children }: React.PropsWithChildren<GroupProps>): JSX.Element {\n\treturn (\n\t\t<div className=\"Group\">\n\t\t\t<div className=\"group-heading\">{heading}</div>\n\t\t\t<div className=\"group-container\">{children}</div>\n\t\t</div>\n\t);\n}\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { toAnalysis, toResults, toSubmit } from \"../lib/page-links\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { assertNever } from \"../lib/util\";\nimport { Buttons } from \"./buttons\";\nimport { Group } from \"./group\";\nimport { PicaIcon, PicaIconKind } from \"./icon\";\nimport \"./step-selector.scss\";\n\nexport type StepKind = \"submit\" | \"analysis\" | \"checkout\" | \"results\";\n\nexport function getLinkToStep(step: StepKind, sessionUrn: string): string {\n\tswitch (step) {\n\t\tcase \"submit\":\n\t\t\treturn toSubmit({ urn: sessionUrn });\n\t\tcase \"analysis\":\n\t\t\treturn toAnalysis({ urn: sessionUrn });\n\t\tcase \"checkout\":\n\t\t\treturn \"/checkout/\";\n\t\tcase \"results\":\n\t\t\treturn toResults({ urn: sessionUrn });\n\t\tdefault:\n\t\t\tassertNever(step);\n\t}\n}\n\nconst STEPS = [\"submit\", \"analysis\", \"checkout\", \"results\"] as const;\n\nexport interface StepSelectorProps {\n\treadonly sessionUrn: string;\n\treadonly current: StepKind;\n\treadonly disableOthers?: boolean;\n}\n\nconst ICONS: Readonly<Record<StepKind, PicaIconKind>> = {\n\tsubmit: \"upload\",\n\tanalysis: \"analyse\",\n\tcheckout: \"checkout\",\n\tresults: \"results\",\n};\n\nconst ENABLE_CHECKOUT = false;\n\nexport function StepSelector({ current, sessionUrn, disableOthers }: StepSelectorProps): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\treturn (\n\t\t<span className={`StepSelector ${Buttons.BUTTON_GROUP}`}>\n\t\t\t{STEPS.filter(step => ENABLE_CHECKOUT || step !== \"checkout\").map(step => {\n\t\t\t\tconst title = l[step];\n\n\t\t\t\tconst disabled = disableOthers && step !== current;\n\t\t\t\tif (disabled) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<span key={step} className={`${Buttons.BUTTON} ${Buttons.DISABLED}`} title={title}>\n\t\t\t\t\t\t\t<PicaIcon kind={ICONS[step]} />\n\t\t\t\t\t\t\t<span className=\"text\">{title}</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tkey={step}\n\t\t\t\t\t\tto={getLinkToStep(step, sessionUrn)}\n\t\t\t\t\t\tclassName={`${Buttons.BUTTON}${step === current ? \" \" + Buttons.ACTIVE : \"\"}`}\n\t\t\t\t\t\ttitle={title}>\n\t\t\t\t\t\t<PicaIcon kind={ICONS[step]} />\n\t\t\t\t\t\t<span className=\"text\">{title}</span>\n\t\t\t\t\t</Link>\n\t\t\t\t);\n\t\t\t})}\n\t\t</span>\n\t);\n}\n\nexport function StepSelectorGroup({\n\tcurrent,\n\tsessionUrn,\n\tdisableOthers,\n\tchildren,\n}: React.PropsWithChildren<StepSelectorProps>): JSX.Element {\n\treturn (\n\t\t<div className=\"StepSelectorGroup\">\n\t\t\t<Group\n\t\t\t\theading={\n\t\t\t\t\t<div className=\"heading-wrapper\">\n\t\t\t\t\t\t<StepSelector current={current} sessionUrn={sessionUrn} disableOthers={disableOthers} />\n\t\t\t\t\t</div>\n\t\t\t\t}>\n\t\t\t\t{children}\n\t\t\t</Group>\n\t\t</div>\n\t);\n}\n\nconst locales: Locales<SimpleString<StepKind>> = {\n\ten: {\n\t\tsubmit: \"Upload\",\n\t\tanalysis: \"Analysis\",\n\t\tcheckout: \"Checkout\",\n\t\tresults: \"Results\",\n\t},\n\tde: {\n\t\tsubmit: \"Hochladen\",\n\t\tanalysis: \"Analyse\",\n\t\tcheckout: \"Kasse\",\n\t\tresults: \"Ergebnisse\",\n\t},\n};\n","import { Session } from \"../generated/v1/services_pb\";\nimport { Item, Timestamp } from \"../generated/v1/types_pb\";\nimport { DeepReadonly } from \"../util\";\n\nexport function cloneSession(session: DeepReadonly<Session.AsObject>): Session.AsObject {\n\treturn JSON.parse(JSON.stringify(session));\n}\n\nexport function createTimestamp(): Timestamp.AsObject {\n\tconst ms = Date.now();\n\treturn {\n\t\tseconds: Math.floor(ms / 1000),\n\t\tnanos: (ms % 1000) * 1000_0000,\n\t};\n}\n\nexport function compareTimestamps(a: Timestamp.AsObject, b: Timestamp.AsObject): number {\n\tif (a.seconds === b.seconds) return a.nanos - b.nanos;\n\treturn a.seconds - b.seconds;\n}\n\nexport function sortSessionItems(items: readonly DeepReadonly<Item.AsObject>[]): DeepReadonly<Item.AsObject>[] {\n\treturn [...items].sort((a, b) => {\n\t\tconst aCreated = a.createdAt;\n\t\tconst bCreated = b.createdAt;\n\n\t\tif (!aCreated && !bCreated) return 0;\n\t\tif (!aCreated) return -1; // a < b\n\t\tif (!bCreated) return +1; // b < a\n\n\t\treturn compareTimestamps(aCreated, bCreated) || a.urn.localeCompare(b.urn);\n\t});\n}\n","import { useQuery } from \"react-query\";\nimport { GetCollectionsRequest } from \"./generated/v1/services_pb\";\nimport { Collection } from \"./generated/v1/types_pb\";\nimport { getSessionClient } from \"./session/client\";\nimport { DeepReadonly } from \"./util\";\n\nexport function useCollections(sessionUrn: string): [collections: DeepReadonly<Collection.AsObject[]> | undefined] {\n\tconst query = useQuery([\"collections\", sessionUrn] as const, {\n\t\t// collections are an immutable resource, so we don't need to refetch\n\t\trefetchInterval: false,\n\t\trefetchOnMount: false,\n\t\trefetchOnReconnect: false,\n\t\trefetchOnWindowFocus: false,\n\n\t\tqueryFn: async () => {\n\t\t\tconst req = new GetCollectionsRequest();\n\t\t\treq.setSessionUrn(sessionUrn);\n\n\t\t\tconst resp = await getSessionClient().getCollections(req, null);\n\t\t\treturn resp.toObject().collectionsList;\n\t\t},\n\t});\n\n\treturn [query.data];\n}\n","import { Session } from \"./generated/v1/services_pb\";\nimport { StorageCache } from \"./storage-cache\";\nimport { DeepReadonly } from \"./util\";\n\ninterface CacheItem {\n\treadonly id: string;\n\treadonly when: number;\n}\nconst lastComputeCache = new StorageCache<string, CacheItem>(\"last-compute-cache\");\n\nfunction getComputeIdentity(session: DeepReadonly<Session.AsObject>): string {\n\treturn JSON.stringify(session.config ?? {});\n}\n\nexport function getLastCompute(session: DeepReadonly<Session.AsObject>): Date | undefined {\n\tconst currentId = getComputeIdentity(session);\n\n\tconst last = lastComputeCache.get(session.urn);\n\tif (last?.id === currentId) {\n\t\treturn new Date(last.when);\n\t}\n\treturn undefined;\n}\n\nexport function setLastCompute(session: DeepReadonly<Session.AsObject>): void {\n\tlastComputeCache.set(session.urn, {\n\t\tid: getComputeIdentity(session),\n\t\twhen: Date.now(),\n\t});\n}\n","import { useState } from \"react\";\nimport { ComputeResultsRequest, Session } from \"./generated/v1/services_pb\";\nimport { getLastCompute, setLastCompute } from \"./last-compute\";\nimport { useAsyncEffect } from \"./react-util\";\nimport { getSessionClient } from \"./session/client\";\nimport { SessionMutator } from \"./session/mutator\";\nimport { cloneSession } from \"./session/util\";\nimport { State, UseSessionArray } from \"./use-session\";\nimport { delay, noop } from \"./util\";\n\nconst mutator: SessionMutator = session => {\n\tif (session.status === Session.ComputeStatus.STATUS_UNDEFINED) {\n\t\t// we want to set the state to RUNNING as soon as possible to indicate progress.\n\t\tconst newSession = cloneSession(session);\n\t\tnewSession.status = Session.ComputeStatus.STATUS_RUNNING;\n\t\treturn newSession;\n\t}\n\n\treturn session;\n};\n\nexport function useComputerResults(state: State, update: UseSessionArray[1]): void {\n\tconst [retryCount, setRetryCount] = useState(0);\n\n\tuseAsyncEffect(\n\t\tasync token => {\n\t\t\tif (state.type !== \"Ready\") return;\n\n\t\t\tconst { session } = state;\n\t\t\tif (session.status === Session.ComputeStatus.STATUS_RUNNING) return;\n\t\t\tif (getLastCompute(session) !== undefined) return;\n\n\t\t\tif (retryCount > 0) {\n\t\t\t\t// wait some time and retry\n\t\t\t\tawait delay(3_000);\n\t\t\t\ttoken.checkCanceled();\n\t\t\t}\n\n\t\t\tconst req = new ComputeResultsRequest();\n\t\t\treq.setSessionUrn(session.urn);\n\n\t\t\tconsole.log(\"Compute results\");\n\t\t\tconst action = getSessionClient()\n\t\t\t\t.computeResults(req, null)\n\t\t\t\t.then(\n\t\t\t\t\t() => {\n\t\t\t\t\t\tsetLastCompute(session);\n\t\t\t\t\t\tsetRetryCount(0);\n\t\t\t\t\t},\n\t\t\t\t\te => {\n\t\t\t\t\t\tsetRetryCount(prev => prev + 1);\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\tupdate(action, mutator);\n\t\t},\n\t\tnoop,\n\t\tnoop,\n\t\t[state, update, retryCount, setRetryCount]\n\t);\n}\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Page } from \"../elements/page\";\nimport { CollectionResultsOverview, ItemResultsOverview, ResultsOverview } from \"../elements/results-overview\";\nimport { SessionState } from \"../elements/session-creating-loading\";\nimport { SharedHead } from \"../elements/shared-header\";\nimport { getLinkToStep } from \"../elements/step-selector\";\nimport { Session } from \"../lib/generated/v1/services_pb\";\nimport { Result } from \"../lib/generated/v1/types_pb\";\nimport { Locales, SimpleString } from \"../lib/localization\";\nimport { toResult, toResults } from \"../lib/page-links\";\nimport { dynamic } from \"../lib/react-util\";\nimport { getLocationSearchParams } from \"../lib/url-params\";\nimport { useCollections } from \"../lib/use-collections\";\nimport { useComputerResults } from \"../lib/use-compute-results\";\nimport { useLocalization } from \"../lib/use-localization\";\nimport { getSessionUrn, Ready, useLoadSession } from \"../lib/use-session\";\nimport { DeepReadonly, visitType } from \"../lib/util\";\nimport \"./results.scss\";\n\nexport default function ResultsPage(): JSX.Element {\n\treturn (\n\t\t<>\n\t\t\t{dynamic(() => (\n\t\t\t\t<Results />\n\t\t\t))}\n\t\t\t<SharedHead />\n\t\t\t<Helmet>\n\t\t\t\t<title>Picapica</title>\n\t\t\t</Helmet>\n\t\t</>\n\t);\n}\n\nfunction Results(): JSX.Element {\n\tconst l = useLocalization(locales);\n\n\tconst [state, update] = useLoadSession();\n\n\t// request computation\n\tuseComputerResults(state, update);\n\n\t// display result\n\tconst [collections] = useCollections(getSessionUrn(state));\n\n\tconst view = getCurrentView();\n\tconst getLinkToResult = (result: DeepReadonly<Result.AsObject>): string => {\n\t\treturn toResult({ urn: result.urn, view: stringifyView(view) });\n\t};\n\n\tconst onReady = ({ session }: Ready): JSX.Element => {\n\t\tconst current: JSX.Element = visitType(view, {\n\t\t\toverview: () => (\n\t\t\t\t<ResultsOverview\n\t\t\t\t\tsession={session}\n\t\t\t\t\tcollections={collections}\n\t\t\t\t\tbackTo={getLinkToStep(\"analysis\", session.urn)}\n\t\t\t\t\titemTo={getLinkToView(session.urn, VIEW_ITEMS)}\n\t\t\t\t\tcollectionTo={collectionUrn => getLinkToView(session.urn, { type: \"collection\", collectionUrn })}\n\t\t\t\t/>\n\t\t\t),\n\t\t\titems: () => (\n\t\t\t\t<ItemResultsOverview\n\t\t\t\t\tsession={session}\n\t\t\t\t\tbackTo={getLinkToView(session.urn, VIEW_OVERVIEW)}\n\t\t\t\t\tresultTo={getLinkToResult}\n\t\t\t\t/>\n\t\t\t),\n\t\t\tcollection: ({ collectionUrn }) => (\n\t\t\t\t<CollectionResultsOverview\n\t\t\t\t\tcollectionUrn={collectionUrn}\n\t\t\t\t\tsession={session}\n\t\t\t\t\tcollections={collections}\n\t\t\t\t\tbackTo={getLinkToView(session.urn, VIEW_OVERVIEW)}\n\t\t\t\t\tresultTo={getLinkToResult}\n\t\t\t\t/>\n\t\t\t),\n\t\t});\n\n\t\tconst running = session.status === Session.ComputeStatus.STATUS_RUNNING;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{current}\n\n\t\t\t\t<p className=\"loading\" style={running ? {} : { opacity: 0, userSelect: \"none\" }}>\n\t\t\t\t\t{l.running}\n\t\t\t\t</p>\n\t\t\t</>\n\t\t);\n\t};\n\n\treturn (\n\t\t<Page className=\"Results\" header=\"small\">\n\t\t\t<SessionState state={state} onReady={onReady} />\n\t\t</Page>\n\t);\n}\n\ntype View =\n\t| { readonly type: \"overview\" }\n\t| { readonly type: \"items\" }\n\t| { readonly type: \"collection\"; readonly collectionUrn: string };\nconst VIEW_OVERVIEW: View = { type: \"overview\" };\nconst VIEW_ITEMS: View = { type: \"items\" };\n\nfunction parseView(view: string): View {\n\tif (view) {\n\t\tif (view === \"items\") {\n\t\t\treturn VIEW_ITEMS;\n\t\t}\n\n\t\tconst m = /^collection:([^]+)$/.exec(view);\n\t\tif (m) {\n\t\t\treturn { type: \"collection\", collectionUrn: m[1] };\n\t\t}\n\t}\n\n\treturn VIEW_OVERVIEW;\n}\nfunction stringifyView(view: View): string | undefined {\n\tif (view.type === \"items\") {\n\t\treturn \"items\";\n\t} else if (view.type === \"collection\") {\n\t\treturn `collection:${view.collectionUrn}`;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nfunction getCurrentView(): View {\n\tconst view = getLocationSearchParams().get(\"view\");\n\treturn view ? parseView(view) : VIEW_OVERVIEW;\n}\nfunction getLinkToView(sessionUrn: string, view: View): string {\n\treturn toResults({ urn: sessionUrn, view: stringifyView(view) });\n}\n\nconst locales: Locales<SimpleString<\"running\">> = {\n\ten: {\n\t\trunning: \"Your submitted files are currently being processed. This might take a few seconds.\",\n\t},\n\tde: {\n\t\trunning: \"Ihre Eingabe wird bearbeited. Dies kann ein paar Sekunden dauern.\",\n\t},\n};\n"],"names":["CenterAlignTwo","className","grow","left","right","knownCollections","en","core_fulltext_languagenameenglish","title","de","EMPTY_OBJ","Label","props","icon","kind","text","SubmittedFilesLabel","l","useLocalization","locales","submittedFiles","CollectionLabel","urn","collection","PicapicaUrn","urnString","collectionUrn","parsed","type","undefined","collections","find","c","processProps","known","collectionId","useCollectionLocalization","properties","name","description","UnknownCollectionLabel","unknown","LoaderAnimation","id","categorizeResults","results","categories","items","Map","invalid","addDocument","item","document","result","list","get","set","push","a","resources","urnA","b","urnB","Badge","children","OverviewContainer","backTo","Buttons","to","back","ResultsOverview","session","itemTo","collectionTo","resultsList","length","console","error","analysisResults","running","status","Session","map","key","ItemResultsOverview","resultTo","matches","itemNameMap","itemsList","meta","leftName","unknownItem","rightName","seedsList","noResults","CollectionResultsOverview","itemName","documentName","documentId","Group","heading","getLinkToStep","step","sessionUrn","toSubmit","toAnalysis","toResults","assertNever","STEPS","ICONS","submit","analysis","checkout","StepSelector","current","disableOthers","filter","StepSelectorGroup","cloneSession","JSON","parse","stringify","createTimestamp","ms","Date","now","seconds","Math","floor","nanos","compareTimestamps","sortSessionItems","sort","aCreated","createdAt","bCreated","localeCompare","useCollections","useQuery","refetchInterval","refetchOnMount","refetchOnReconnect","refetchOnWindowFocus","queryFn","async","req","GetCollectionsRequest","setSessionUrn","getSessionClient","getCollections","toObject","collectionsList","data","lastComputeCache","StorageCache","getComputeIdentity","config","mutator","newSession","useComputerResults","state","update","retryCount","setRetryCount","useState","useAsyncEffect","currentId","last","when","getLastCompute","delay","token","checkCanceled","ComputeResultsRequest","log","action","computeResults","then","setLastCompute","e","prev","noop","ResultsPage","dynamic","Results","Helmet","useLoadSession","getSessionUrn","view","getLocationSearchParams","VIEW_ITEMS","m","exec","VIEW_OVERVIEW","parseView","getCurrentView","getLinkToResult","toResult","stringifyView","header","onReady","visitType","overview","getLinkToView","style","opacity","userSelect"],"sourceRoot":""}